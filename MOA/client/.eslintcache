[{"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"4","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"5","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"6","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"7","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"8","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js":"9","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"10","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"11","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"12","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"13","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"14","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"15","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"16","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"17","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"18","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"19","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"20","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js":"21","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"22","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"23","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"24","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"25","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"26","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"27","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"28","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"29","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"30","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"31","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js":"32","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js":"33","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"34","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"35"},{"size":1071,"mtime":1610173826664,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1610159670533,"results":"38","hashOfConfig":"37"},{"size":1859,"mtime":1610210566973,"results":"39","hashOfConfig":"37"},{"size":161,"mtime":1610173826660,"results":"40","hashOfConfig":"37"},{"size":528,"mtime":1610173826662,"results":"41","hashOfConfig":"37"},{"size":2740,"mtime":1610209927401,"results":"42","hashOfConfig":"37"},{"size":3645,"mtime":1610210230869,"results":"43","hashOfConfig":"37"},{"size":3328,"mtime":1610214054739,"results":"44","hashOfConfig":"37"},{"size":3817,"mtime":1610209024164,"results":"45","hashOfConfig":"37"},{"size":7837,"mtime":1610230599138,"results":"46","hashOfConfig":"37"},{"size":7915,"mtime":1610230609606,"results":"47","hashOfConfig":"37"},{"size":1499,"mtime":1610165925527,"results":"48","hashOfConfig":"37"},{"size":780,"mtime":1610173826685,"results":"49","hashOfConfig":"37"},{"size":2424,"mtime":1610199568145,"results":"50","hashOfConfig":"37"},{"size":6083,"mtime":1610200676355,"results":"51","hashOfConfig":"37"},{"size":5472,"mtime":1610199568138,"results":"52","hashOfConfig":"37"},{"size":1533,"mtime":1610209433917,"results":"53","hashOfConfig":"37"},{"size":7499,"mtime":1610199568134,"results":"54","hashOfConfig":"37"},{"size":2339,"mtime":1610201486647,"results":"55","hashOfConfig":"37"},{"size":2505,"mtime":1610209327885,"results":"56","hashOfConfig":"37"},{"size":5399,"mtime":1610204084129,"results":"57","hashOfConfig":"37"},{"size":16747,"mtime":1610214527947,"results":"58","hashOfConfig":"37"},{"size":2804,"mtime":1610196666011,"results":"59","hashOfConfig":"37"},{"size":1762,"mtime":1610192179414,"results":"60","hashOfConfig":"37"},{"size":1121,"mtime":1610173826656,"results":"61","hashOfConfig":"37"},{"size":999,"mtime":1610173826861,"results":"62","hashOfConfig":"37"},{"size":1723,"mtime":1610199568152,"results":"63","hashOfConfig":"37"},{"size":1823,"mtime":1610173826847,"results":"64","hashOfConfig":"37"},{"size":1707,"mtime":1610197013737,"results":"65","hashOfConfig":"37"},{"size":1533,"mtime":1610210060600,"results":"66","hashOfConfig":"37"},{"size":58,"mtime":1610173826646,"results":"67","hashOfConfig":"37"},{"size":2752,"mtime":1610192287735,"results":"68","hashOfConfig":"37"},{"size":1810,"mtime":1610192533114,"results":"69","hashOfConfig":"37"},{"size":170,"mtime":1610165916739,"results":"70","hashOfConfig":"37"},{"size":1343,"mtime":1610231005877,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1osx21h",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],["160","161"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",["162","163"],"import { Route, Switch } from 'react-router-dom';\r\nimport Navbar from './NavBar/Navbar';\r\nimport VideoUploadPage from './VideoUploadPage/VideoUploadPage';\r\nimport VideoDetailPage from './VideoDetailPage/VideoDetailPage';\r\nimport ImageUploadPage from './ImageUploadPage/ImageUploadPage';\r\nimport React, { Suspense } from 'react';\r\nimport PostPage from \"./PostPage\";\r\nimport RegisterPage from \"./RegisterPage/RegisterPage.js\";\r\nimport LoginPage from \"./LoginPage/LoginPage\";\r\nimport MainPage from\"./mainpage/Mainpage\";\r\nimport SearchResultPage from \"./SearchResultPage/SearchResultPage\";\r\nimport BroadCastForm from \"./LiveVideoPage/BroadCastPage/BroadCastForm\";\r\nimport BroadCastPage from \"./LiveVideoPage/BroadCastPage/BroadCastPage\";\r\nimport LiveVideoPage from \"./LiveVideoPage/LiveVideoPage/LiveVideoPage\";\r\nimport Auth from \"./hoc/auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Auth(MainPage, null)} />\r\n        <Route exact path=\"/login\" component={Auth(LoginPage, true)} />\r\n        <Route exact path=\"/register\" component={Auth(RegisterPage, null)} />\r\n        <Route exact path=\"/search\" component={Auth(SearchResultPage, null)} />     \r\n        <Route exact path=\"/broadcast\" component={Auth(BroadCastPage, true)} />\r\n        <Route exact path=\"/broadcastform\" component={Auth(BroadCastForm, true)} />\r\n        <Route exact path=\"/liveVideo/:liveId\" component={Auth(LiveVideoPage, true)} />\r\n        <Route exact path=\"/upload\" component={Auth(VideoUploadPage, true)} />\r\n        <Route exact path=\"/image\" component={Auth(ImageUploadPage, true)} />\r\n        <Route exact path=\"/post/:imageId\" component={Auth(PostPage),null}/>\r\n        <Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\r\n      </Switch>\r\n    </div>\r\n  )}\r\n\r\nexport default App;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["164"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../_actions/user_actions';\r\n\r\nfunction RegisterPage(props) {\r\n    //디스패치 함수 가져오기\r\n    const dispatch = useDispatch();\r\n\r\n    //state 설정\r\n    const [email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert(\"비밀번호와 비밀번호 확인은 같아야 합니다.\")\r\n        }\r\n\r\n        //서버로 전달할 state값을 모은 객체\r\n        let body = {\r\n            email: email,\r\n            password: Password,\r\n            name: Name,\r\n        }\r\n\r\n        //서버로 전달할 임시 프로필 객체\r\n        const profile = {\r\n            email: email,\r\n            nickName: Name,\r\n            profileImg: \"\",\r\n            content: \"\",\r\n        }\r\n\r\n        //임시 프로필 저장\r\n        axios.post('/api/profile/saveProfile', profile)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n        //디스패치\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    //submit시 로그인 페이지로 이동\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>이메일</label>\r\n                <Input value={email} placeholder=\"아이디\" onChange={onEmailHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"비밀번호 확인\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["165","166"],"import React, { useEffect, useState } from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport axios from 'axios'\r\nimport Subscriber from './Sections/Subscriber';\r\nimport SideVideo from './Sections/SideVideo';\r\nimport Comment from './Sections/Comment'\r\nimport LikeDislikes from './Sections/LikeDislikes'\r\n\r\nfunction VideoDetailPage(props){\r\n  const videoId = props.match.params.videoId\r\n  const [Video, setVideo] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [View , setView] = useState([])\r\n\r\n  var views = Video.views;\r\n  console.log(\"조회수 : \",views)\r\n\r\n  const videoVariable = {videoId: videoId}\r\n    \r\n  useEffect(() => {\r\n    axios.post('/api/video/getVideoDetail', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setVideo(response.data.video)\r\n                setView(views)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n    axios.post('/api/comment/getComments', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                console.log('response.data.comments',response.data.comments)\r\n                setCommentLists(response.data.comments)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n\r\n  }, [])\r\n    \r\n    const updateComment = (newComment) => {\r\n      setCommentLists(CommentLists.concat(newComment))\r\n  }\r\n  const sliceTag = (tag) => {\r\n      const slicedTag = (\r\n          <Tag>{tag}</Tag>\r\n      )\r\n      return (\r\n          <span>\r\n              {slicedTag}\r\n          </span>\r\n      )\r\n  }\r\n  if(Video.writer){\r\n    const tagChild = Video.tags.map(sliceTag)\r\n    return(\r\n      <Row gutter={[16,16]}>\r\n        <Col lg={18} xs={32}>\r\n        <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n          <video style={{ width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} controls/>\r\n          <List.Item>\r\n             <List.Item.Meta\r\n                 title={<h2>{Video.title}</h2>}/>  \r\n            조회수 {Video.views}회 <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n          </List.Item>\r\n          <List.Item\r\n            actions={[<LikeDislikes video videoId={videoId} userId={localStorage.getItem('userId')}  />,<Subscriber usetTo={Video.writer._id} userFrom={localStorage.getItem('userId')}/>]}\r\n          >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                description={Video.writer.name}\r\n                />\r\n          </List.Item>\r\n               <List.Item.Meta\r\n               style={{ marginLeft:'3rem' }}\r\n                description={Video.description}\r\n                />\r\n              <List.Item>\r\n          </List.Item>\r\n          {Video.startDate}~{Video.endDate}\r\n          <Tag style={{marginLeft:'3rem'}}>{Video.tags !== '' && (<div>{tagChild}</div>)}</Tag><hr/>\r\n          <Comment CommentLists={CommentLists} postId={Video._id} refreshFunction={updateComment}/>\r\n          </div>\r\n        </Col>\r\n        <Col lg={6} xs={24}>\r\n          <SideVideo />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }else{\r\n    return(<div>...loading...</div>)\r\n  }\r\n}\r\n\r\nexport default VideoDetailPage;\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js",["167","168"],"import React, { useState, useEffect } from 'react';\r\nimport { Card , Col, Row, Pagination, Tag} from 'antd';\r\nimport Comment from './VideoDetailPage/Sections/Comment'\r\nimport Axios from 'axios'\r\nimport moment from 'moment';\r\n\r\nfunction PostPage(props){\r\n\r\n  const imageId = props.match.params.imageId\r\n  const [Image, setImage] = useState([]);\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [current, setCurrent]=useState(1)\r\n\r\n  const startDate = moment(Image.startDate).format('YYYY.MM.DD');\r\n  const endDate = moment(Image.endDate).format('YYYY.MM.DD');\r\n  const [file, setFile]=useState([])\r\n  const [fileName, setFileName]=useState([])\r\n  const imageVariable = {imageId :imageId}\r\n\r\n  const fileLength=file.length\r\n\r\n  useEffect(()=>{\r\n    Axios.post('/api/image/getImageDetail', imageVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setImage(response.data.image)\r\n                console.log(\"이미지아이디:\",imageId)\r\n                setFile(response.data.image.filePath)\r\n                setFileName(response.data.image.fileName)\r\n\r\n            } else {\r\n                alert('Failed to get image Info')\r\n            }\r\n        })\r\n  },[])\r\n\r\n  const handlePage = (event) => {\r\n    setCurrent(event)\r\n  }\r\n  const updateComment = (newComment) => {\r\n    setCommentLists(CommentLists.concat(newComment))\r\n  }\r\n  const sliceTag = (tag) => {\r\n      const slicedTag = (\r\n          <Tag>{tag}</Tag>\r\n      )\r\n      return (\r\n          <span>{slicedTag}</span>\r\n      )\r\n  }\r\n\r\n  if(Image.writer){ //데이터 많으면 동기화 안해줘서 이거 if문 해줘야된대\r\n    const tagChild = Image.tags.map(sliceTag)\r\n    return(\r\n        <div style={{ width : '80%' }}>\r\n        <div style={{ margin:'2rem auto', paddingLeft:'14rem'}}>\r\n            <h1>{Image.title}</h1>\r\n            <h5>{startDate}~{endDate}</h5>\r\n            <br />\r\n            <Row>\r\n                <Col xs={24} md={6}>\r\n                    <Card style={{width : \"300px\", height : '480px', marginLeft:'2rem'}}>\r\n                        {Image.introduction}\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card style={{marginLeft: '20%', width:'720px',textAlign:'center',objectFit:'cover'}}>\r\n                        <img src={`http://localhost:5000/${file[current-1]}`}/>\r\n                    </Card><br/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <div style={{ marginLeft:'70%' , paddingBottom:'2rem'}}>\r\n                        <Pagination\r\n                        onChange={handlePage}\r\n                        defaultCurrent={1}\r\n                        total={fileLength*10}\r\n                        />\r\n                    </div><br />\r\n                <div style={{width:'120%'}}><hr/></div>\r\n                <Col>\r\n                    <div style={{ marginLeft:'6.5%'}}>\r\n                    <Card style={{width : 950, height:500, border:'white'}}>\r\n                        {Image.description}\r\n                    </Card>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            <div style={{width:\"125%\"}}><hr/></div>\r\n            <div style={{ margin:'2rem auto', paddingLeft:'20rem'}}>\r\n            <Card style={{boder:'2px solid'}}>\r\n                {fileName}\r\n            </Card><br/>\r\n            <Tag>{Image.tags !== '' && (<div>{tagChild}</div>)}</Tag>\r\n            </div>\r\n            <div style={{width:\"125%\"}}><hr/></div>\r\n        <div style={{margin:'2rem auto', paddingLeft:'20rem'}}>\r\n            <Comment CommentLists={CommentLists} postId={Image._id} refreshFunction={updateComment}/>\r\n        </div>\r\n        </div>\r\n    )}else{\r\n      return(<div>...loading...</div>)\r\n  }\r\n}\r\nexport default PostPage;\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["169","170"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["171","172","173"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["174"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["175","176","177","178"],"import React, { Component, useState } from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["179"],"import React, { useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport HashTag from '../../HashTag';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction BroadCastForm(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ThumbnailPath, setThumbnailPath] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n    let hashTags = [];\r\n\r\n    const onTitleChange = e => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = e => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n        console.log('updatepage')\r\n        console.log(hashTags)\r\n    }\r\n\r\n    const onDrop = files => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0])\r\n\r\n        Axios.post('/api/liveVideo/uploadfiles', formData, config)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setThumbnailPath(res.data.url);\r\n                    setFileName(res.data.fileName)\r\n                } else {\r\n                    alert(\"썸네일 업로드 실패\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: videoTitle,\r\n            description: description,\r\n            thumbnail: ThumbnailPath,\r\n            tags: hashTags\r\n        }\r\n\r\n        Axios.post('/api/liveVideo/uploadLiveInfo', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    alert(\"라이브 페이지로 이동합니다.\")\r\n                    props.history.push(`/broadcast/${localStorage.getItem('userId')}`)\r\n                } else {\r\n                    alert(\"라이브 준비에 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input\r\n                    value={videoTitle}\r\n                    onChange={onTitleChange}\r\n                    placeholder='제목을 쓰세요'\r\n                    style={{ borderStyle: 'none', borderBottom: '1px solid #cdcec9'}}\r\n                />\r\n                <div style={{ display: 'flex', width: '100%', marginTop: '2rem' }}>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    background: '#48bcec', \r\n                                    color: 'white', \r\n                                    paddingRight: '1rem', \r\n                                    paddingLeft: '1rem', \r\n                                    paddingTop: '0.2rem',\r\n                                    paddingBottom: '0.2rem',\r\n                                    border: '2px solid #48bcec',\r\n                                    cursor: 'pointer'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>썸네일 추가</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <div style={{ flex: '1', border: '2px solid #cdcec9' }}>\r\n                        { fileName &&\r\n                            (fileName)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    display: 'flex', width: '100%', height: '350px', border: '2px solid #cdcec9', marginTop: '1rem', justifyContent: 'center', alignItems: 'center'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                    ThumbnailPath &&\r\n                                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                                    }\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <TextArea\r\n                    value={description}\r\n                    onChange={onDescriptionChange}\r\n                    placeholder='영상 소개'\r\n                    style={{ height: '200px', border: '2px solid #cdcec9' }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <HashTag addTags={handleAddTags} />\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" style={{ background: '#48bcec'}} size=\"large\" onClick={onSubmit}>\r\n                    라이브 시작\r\n                </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BroadCastForm\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["180","181","182","183"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Tag } from 'antd';\r\n// import ChatPage from '../LiveChatPage/ChatPage';\r\n// import Subscribe from '../../VideoDetailPage/Section/Subscribe';\r\n// import LiveLike from '../Sections/LiveLike';\r\nimport '../BroadCastPage/BroadCastPage.css'\r\nimport Axios from 'axios'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction LiveVideoPage(props) {\r\n\r\n    const liveId = props.match.params.liveId;\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    let peerConnection;\r\n    const config = {\r\n        iceServers: [\r\n            { \r\n              \"urls\": \"stun:stun.l.google.com:19302\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetail', { liveId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"offer\", (id, description) => {\r\n            peerConnection = new RTCPeerConnection(config);\r\n            peerConnection\r\n                .setRemoteDescription(description)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"answer\", id, peerConnection.localDescription)\r\n                })\r\n            peerConnection.ontrack = e => {\r\n                \r\n                videoRef.current.srcObject = e.streams[0];\r\n                       \r\n                console.log(\"offer\")\r\n            }\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate)\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(candidate))\r\n                .catch(e => console.error(e))\r\n        })\r\n        \r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcaster\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n            peerConnection.close();\r\n        }\r\n    }, [window])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (liveDetail.writer._id !== localStorage.getItem('userId')) && (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        // const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                    <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls /> \r\n                    <div>\r\n                        <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                        <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                            <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                            {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveId} /> */}\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    <List.Item\r\n                            // actions={[<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                title={liveDetail.writer.name}\r\n                                description={liveDetail.description}\r\n                            />\r\n                    </List.Item>\r\n                    <div>{tagChild}</div>\r\n                    <br />\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                        {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   else {\r\n        return (\r\n            <div>...</div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default LiveVideoPage\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["184","185","186","187","188","189","190","191","192"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Skeleton, Tag, Button } from 'antd';\r\nimport './BroadCastPage.css';\r\nimport Axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction BroadCastPage(props) {\r\n\r\n    let broadcasterId = localStorage.getItem('userId');\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    const [peerConnections, setPeerConnections] = useState({});\r\n    const [stream, setStream] = useState();\r\n    const [numberOfViewers, setNumberOfViewers] = useState(0);\r\n\r\n    const config = {\r\n        iceServers: [\r\n          {\r\n            urls: [\"stun:stun.l.google.com:19302\"],\r\n          },\r\n        ],\r\n    };\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetailByBroadcaster', { broadcasterId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"watcher\", (id) => {\r\n            const peerConnection = new RTCPeerConnection(config);\r\n            setPeerConnections(peerConnections[id] = peerConnection);\r\n            console.log(peerConnections);\r\n\r\n            let stream = videoRef.current.srcObject;\r\n            stream\r\n                .getTracks()\r\n                .forEach((track) => peerConnection.addTrack(track, stream));\r\n\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate);\r\n                }\r\n            }\r\n\r\n            peerConnection\r\n                .createOffer()\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                })\r\n\r\n            setNumberOfViewers(Object.keys(peerConnections).length)\r\n        })\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"answer\", (id, description) => {\r\n            peerConnections[id].setRemoteDescription(description);\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"disconnectPeer\", (id) => {\r\n            peerConnections[id].close();\r\n            delete peerConnections[id];\r\n            setNumberOfViewers(Object.keys(peerConnections).length);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n        }\r\n    }, [window])\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n            setStream(stream);\r\n            \r\n            videoRef.current.srcObject = stream;\r\n            socket.emit(\"broadcaster\");\r\n        })\r\n\r\n    }, [])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const handleLiveClose = () => {\r\n        Axios.post('/api/liveVideo/removeLiveData', { broadcasterId })\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                alert(\"라이브가 종료되었습니다.\")\r\n                window.location.href='/'\r\n                \r\n\r\n            } else {\r\n                alert(\"라이브 종료를 실패했습니다. \")\r\n            }\r\n        })\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <div>\r\n                            <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                            <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                                <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                                {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveDetail._id} /> */}\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                        \r\n                        <List.Item\r\n                            actions={[\r\n                                // <Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />,\r\n                                <Button \r\n                                    style={{ backgroundColor: '#48bcec', borderRadius: '4px',\r\n                                        color: 'white', padding: '5px 16px', borderStyle: 'none',\r\n                                        fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase', cursor: 'pointer' }}\r\n                                        onClick={handleLiveClose}>\r\n                                        라이브 종료\r\n                                </Button>\r\n                                    ]}\r\n                        >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                    title={liveDetail.writer.name}\r\n                                    description={liveDetail.description}\r\n                                    \r\n                                />\r\n                        </List.Item>\r\n                        <div>{tagChild}</div>\r\n                        <br />\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ width: '1263px'}}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <Skeleton avatar paragraph={{ rows: 4 }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BroadCastPage","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",["193"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Tag, Input } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction HashTag(props) {\r\n\r\n    const [Tags, setTags] = useState([]);\r\n    const [InputVisible, setInputVisible] = useState(false);\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const inputRef = useRef();\r\n\r\n    const handleClose = removedTag => {\r\n        const tags = Tags.filter(tag => tag !== removedTag)\r\n        console.log(tags);\r\n        setTags(tags);\r\n    }\r\n\r\n    const showInput = () => {\r\n        setInputVisible(true);\r\n        \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.currentTarget.value);\r\n    }\r\n\r\n    const handleInputConfirm = () => {\r\n        if (InputValue && Tags.indexOf(InputValue) === -1) {\r\n            setTags([...Tags, InputValue]);\r\n        }\r\n        \r\n        setInputVisible(false);\r\n        setInputValue('');\r\n\r\n    }\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag    \r\n                closable\r\n                onClose={e => {\r\n                    e.preventDefault();\r\n                    handleClose(tag);\r\n                }}\r\n            >\r\n                {tag}\r\n            </Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const tagChild = Tags.map(forMap);\r\n\r\n    useEffect(() => {\r\n        if (InputVisible) inputRef.current.focus();  \r\n        props.addTags(Tags);\r\n    }, [InputVisible])\r\n\r\n    return (\r\n        <div style={{ marginBottom: 16 }}>\r\n           <div style={{ marginBottom: '10px' }}>{tagChild}</div>\r\n           {InputVisible && (\r\n               <Input   \r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    style={{ width: 78}}\r\n                    value={InputValue}\r\n                    onChange={handleInputChange}\r\n                    onPressEnter={handleInputConfirm}\r\n                />\r\n           )}\r\n           {!InputVisible && (\r\n               <Tag onClick={showInput} style={{ borderStyle: 'dashed' }}>\r\n                   <PlusOutlined />New Tag\r\n               </Tag>\r\n           )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HashTag\r\n\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js",["194","195","196"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport { LikeOutlined, DislikeOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                console.log('getLikes',response.data)\r\n\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n            .then(response => {\r\n                console.log('getDislike',response.data)\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/api/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <span\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} >\r\n                            <LikeOutlined />\r\n                    </span>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <span\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}><DislikeOutlined />\r\n                    </span>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Divider, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Meta } = Card;\r\n//날짜를 0000-00-00 이런식으로 필터링 해줄것\r\n//정렬 추천순은 좋아요가 없어서 구현 안됨\r\nfunction ResultBooths(props) {\r\n\r\n    //state\r\n    const [Booths, setBooths] = useState([]);\r\n    const [Video, setVideo] = useState([]);\r\n\r\n    let searched = []\r\n    let videoSearched = []\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            query: \"test\"\r\n        }\r\n\r\n        //검색된 이미지 카드(부스) 가져오기\r\n        axios.post(\"/api/image/search\", body)\r\n            .then(response => {\r\n                searched = searched.concat(response.data.image)\r\n                console.log(\"현재 이미지 카드\", searched)\r\n                if (searched.length !== 0) {\r\n                    setBooths(searched)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.response){\r\n                    console.log(err.message)\r\n                }\r\n            })\r\n\r\n        //비디오 가져오기\r\n        axios.get('/api/video/getVideos', body)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(\"현재 비디오\", res.data);\r\n                    videoSearched = videoSearched.concat(res.data.video)\r\n                    setVideo(videoSearched)\r\n                    console.log(\"현재 비디오 state\", Video)\r\n                } else {\r\n                    alert(\"현재 전시 비디오 가져오기를 실패했습니다.\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"에러 비디오\", err.response)\r\n            })\r\n\r\n    }, [props.alignType])\r\n\r\n    //현재, 예정, 지난 부스로 구분\r\n    const sortBooths = (sort) => {\r\n        var i = 0;\r\n        var now = new Date();\r\n\r\n        if (Booths.length === 0) {\r\n            return \"err\"\r\n        }\r\n\r\n        console.log(\"부스 state 상태\", Booths)\r\n        console.log(\"sort\", sort)\r\n\r\n        switch (sort) {\r\n            case \"current\":\r\n                var current = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n                    var end = new Date(v.endDate)\r\n\r\n                    if (start.getTime() < now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    } else if (start.getTime() === now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", current)\r\n                return current\r\n\r\n            case \"past\":\r\n                var past = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n                    var end = new Date(v.endDate)\r\n\r\n                    if (end.getTime() < now.getTime()) { return v }\r\n                })\r\n                console.log(sort, \"booths\", past)\r\n                return past\r\n\r\n            case \"future\":\r\n                var future = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n\r\n                    if (start.getTime() > now.getTime()) {\r\n                        return v;\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", future)\r\n                return future\r\n        }\r\n\r\n    }\r\n\r\n    //비디오 정렬 및 레이아웃 생성\r\n    const alignVideo = () => {\r\n        switch (props.alignType) {\r\n            case \"date\":\r\n                Video.sort(function (a, b) {\r\n                    return a.createAt < b.createAt ? -1 : a.createAt > b.createAt ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                Video.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n\r\n        console.log(\"렌더카드 전 비디오 state\", Video)\r\n\r\n        const renderCards = Video.map((video, index) => {\r\n            return (\r\n                <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/video/${video._id}`}>\r\n                            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n                            <div style={{\r\n                                bottom: 0, right: 0, position: 'absolute', margin: '4px',\r\n                                color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                                padding: '2px 4px', borderRadius: '2px', letterSpacing: '0.5px', fontSize: '12px',\r\n                                fontWeight: '500', lineHeight: '12px'\r\n                            }}\r\n                            >\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <br />\r\n                    <Card.Meta\r\n                        avatar={<Avatar src={video.writer.image} />}\r\n                        title={video.title}\r\n                    />\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </Col>\r\n\r\n            ) \r\n        })\r\n\r\n        console.log(\"renderCards\", renderCards)\r\n\r\n        return renderCards\r\n    }\r\n\r\n    //부스 정렬\r\n    const alignBooths = (booths) => {\r\n        console.log(\"align Booths\", booths)\r\n        if (booths === \"err\") { return \"err\" }\r\n\r\n        console.log(\"change Align\", props.alignType)\r\n\r\n        switch (props.alignType) {\r\n            \r\n            case \"date\":\r\n                booths.sort(function (a, b) {\r\n                    let aDate = new Date(a.boothStart)\r\n                    let bDate = new Date(b.boothStart)\r\n\r\n                    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                booths.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n        return booths\r\n    }\r\n\r\n    //부스 레이아웃 잡기\r\n    const boothsLayout = (sort) => {\r\n        var i = 0;\r\n        var boothCards = [];\r\n        var _booths = [];\r\n\r\n        if (sort === \"current\") {\r\n            var tmp = sortBooths(sort)\r\n            _booths = alignBooths(tmp)\r\n        } else if (sort === \"future\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        }\r\n\r\n\r\n        console.log(\"_booths\", _booths)\r\n\r\n        if (_booths === \"err\") {\r\n            return\r\n        }\r\n\r\n        while (i < _booths.length) {\r\n\r\n            if (_booths.length - i > 3) {\r\n\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 3].title} src={_booths[i + 3].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 3].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 3) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 2) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 1) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            i = i + 4;\r\n        };\r\n        return boothCards;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>비디오</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {alignVideo()}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>현재 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"current\")}\r\n                </div>\r\n            </div>\r\n\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>예정 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"future\")}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>지난 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"past\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultBooths;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["210","211"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Subscriber(props) {\r\n    const userTo = props.userTo\r\n    const userFrom = props.userFrom\r\n    const [ SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [ Subscribed, setSubscribed] = useState(false)\r\n\r\n    const onSubscribe = ( ) => {\r\n\r\n        let subscribeVariables = {\r\n                userTo : userTo,\r\n                userFrom : userFrom\r\n        }\r\n\r\n        if(Subscribed) {\r\n            //when we are already subscribed \r\n            axios.post('/api/subscribe/unSubscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success){ \r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to unsubscribe')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n            \r\n            axios.post('/api/subscribe/subscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to subscribe')\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom }\r\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('Failed to get subscriber Number')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subcribed)\r\n                } else {\r\n                    alert('Failed to get Subscribed Information')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick\r\n                    style={{\r\n                        backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\r\n                        borderRadius: '4px', color: 'white',\r\n                        padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n                    }}>\r\n                        {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n                    </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriber\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["212","213","214","215","216","217","218"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossOrigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><img src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><img src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><img src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><img src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["219"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["220","221"],"import React, { useEffect, useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Axios from 'axios';\r\nimport '../Mainpage.css';\r\n\r\n\r\nfunction MainLivePage(){\r\n    const [liveVideo, setLiveVideo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/liveVideo/getliveVidoes')\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data);\r\n                setLiveVideo(res.data.liveVideo)\r\n            } else {\r\n                alert(\"라이브 비디오 가져오기를 실패했습니다.\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='mainpage_below' style={{textAlign:'center', backgroundSize:'cover'}} height=\"100vh\">\r\n            \r\n            <p className=\"streamlive\">실시간 방송 LIVE</p>\r\n            <p className=\"meetinlive\">전국의 대학생 활동을 라이브 방송으로 만나보세요</p>\r\n            <AiIcons.AiOutlineLeftSquare size=\"40\" color=\"#C692B8\"  className=\"livevideoleft\"/>\r\n            <AiIcons.AiFillRightSquare size=\"40\" color=\"#C692B8\" className=\"livevideoright\"/>\r\n            <span id=\"#livevideo\" className=\"livevideo\" style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                \r\n                {/* {liveRenderCards} */}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainLivePage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js",["222"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":6,"column":17,"nodeType":"231","messageId":"232","endLine":6,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":31,"column":69,"nodeType":"235","messageId":"236","endLine":31,"endColumn":70},{"ruleId":"237","severity":1,"message":"238","line":87,"column":17,"nodeType":"239","endLine":87,"endColumn":76},{"ruleId":"229","severity":1,"message":"240","line":14,"column":10,"nodeType":"231","messageId":"232","endLine":14,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":43,"column":6,"nodeType":"243","endLine":43,"endColumn":8,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":35,"column":5,"nodeType":"243","endLine":35,"endColumn":7,"suggestions":"246"},{"ruleId":"237","severity":1,"message":"238","line":68,"column":25,"nodeType":"239","endLine":68,"endColumn":80},{"ruleId":"229","severity":1,"message":"247","line":110,"column":21,"nodeType":"231","messageId":"232","endLine":110,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":187,"column":21,"nodeType":"239","endLine":187,"endColumn":44},{"ruleId":"229","severity":1,"message":"250","line":30,"column":23,"nodeType":"231","messageId":"232","endLine":30,"endColumn":35},{"ruleId":"229","severity":1,"message":"251","line":31,"column":21,"nodeType":"231","messageId":"232","endLine":31,"endColumn":31},{"ruleId":"229","severity":1,"message":"252","line":32,"column":12,"nodeType":"231","messageId":"232","endLine":32,"endColumn":22},{"ruleId":"253","severity":1,"message":"254","line":6,"column":1,"nodeType":"255","endLine":42,"endColumn":2},{"ruleId":"229","severity":1,"message":"256","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"257","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"258","line":2,"column":13,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"229","severity":1,"message":"259","line":3,"column":13,"nodeType":"231","messageId":"232","endLine":3,"endColumn":20},{"ruleId":"229","severity":1,"message":"260","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":20},{"ruleId":"241","severity":1,"message":"261","line":37,"column":8,"nodeType":"243","endLine":37,"endColumn":10,"suggestions":"262"},{"ruleId":"241","severity":1,"message":"263","line":41,"column":30,"nodeType":"264","endLine":41,"endColumn":59},{"ruleId":"241","severity":1,"message":"265","line":70,"column":8,"nodeType":"243","endLine":70,"endColumn":16,"suggestions":"266"},{"ruleId":"241","severity":1,"message":"267","line":89,"column":8,"nodeType":"243","endLine":89,"endColumn":16,"suggestions":"268"},{"ruleId":"229","severity":1,"message":"269","line":13,"column":12,"nodeType":"231","messageId":"232","endLine":13,"endColumn":18},{"ruleId":"229","severity":1,"message":"270","line":14,"column":12,"nodeType":"231","messageId":"232","endLine":14,"endColumn":27},{"ruleId":"241","severity":1,"message":"271","line":36,"column":8,"nodeType":"243","endLine":36,"endColumn":10,"suggestions":"272"},{"ruleId":"241","severity":1,"message":"273","line":65,"column":8,"nodeType":"243","endLine":65,"endColumn":16,"suggestions":"274"},{"ruleId":"241","severity":1,"message":"275","line":71,"column":8,"nodeType":"243","endLine":71,"endColumn":16,"suggestions":"276"},{"ruleId":"241","severity":1,"message":"275","line":77,"column":8,"nodeType":"243","endLine":77,"endColumn":16,"suggestions":"277"},{"ruleId":"241","severity":1,"message":"278","line":85,"column":8,"nodeType":"243","endLine":85,"endColumn":10,"suggestions":"279"},{"ruleId":"241","severity":1,"message":"280","line":91,"column":8,"nodeType":"243","endLine":91,"endColumn":16,"suggestions":"281"},{"ruleId":"241","severity":1,"message":"282","line":101,"column":8,"nodeType":"243","endLine":101,"endColumn":10,"suggestions":"283"},{"ruleId":"241","severity":1,"message":"284","line":62,"column":8,"nodeType":"243","endLine":62,"endColumn":22,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":31,"column":50,"nodeType":"288","messageId":"289","endLine":31,"endColumn":52},{"ruleId":"286","severity":1,"message":"287","line":49,"column":56,"nodeType":"288","messageId":"289","endLine":49,"endColumn":58},{"ruleId":"241","severity":1,"message":"290","line":59,"column":8,"nodeType":"243","endLine":59,"endColumn":10,"suggestions":"291"},{"ruleId":"229","severity":1,"message":"292","line":7,"column":9,"nodeType":"231","messageId":"232","endLine":7,"endColumn":13},{"ruleId":"241","severity":1,"message":"293","line":28,"column":28,"nodeType":"294","endLine":28,"endColumn":64},{"ruleId":"241","severity":1,"message":"295","line":45,"column":37,"nodeType":"294","endLine":45,"endColumn":73},{"ruleId":"229","severity":1,"message":"296","line":60,"column":13,"nodeType":"231","messageId":"232","endLine":60,"endColumn":14},{"ruleId":"297","severity":1,"message":"298","line":70,"column":9,"nodeType":"299","messageId":"300","endLine":113,"endColumn":10},{"ruleId":"286","severity":1,"message":"301","line":72,"column":49,"nodeType":"288","messageId":"302","endLine":72,"endColumn":51},{"ruleId":"286","severity":1,"message":"301","line":94,"column":46,"nodeType":"288","messageId":"302","endLine":94,"endColumn":48},{"ruleId":"229","severity":1,"message":"303","line":95,"column":25,"nodeType":"231","messageId":"232","endLine":95,"endColumn":30},{"ruleId":"286","severity":1,"message":"301","line":104,"column":48,"nodeType":"288","messageId":"302","endLine":104,"endColumn":50},{"ruleId":"297","severity":1,"message":"298","line":119,"column":9,"nodeType":"299","messageId":"300","endLine":130,"endColumn":10},{"ruleId":"297","severity":1,"message":"298","line":174,"column":9,"nodeType":"299","messageId":"300","endLine":189,"endColumn":10},{"ruleId":"304","severity":1,"message":"305","line":203,"column":17,"nodeType":"231","messageId":"306","endLine":203,"endColumn":20},{"ruleId":"304","severity":1,"message":"305","line":206,"column":17,"nodeType":"231","messageId":"306","endLine":206,"endColumn":20},{"ruleId":"229","severity":1,"message":"307","line":10,"column":11,"nodeType":"231","messageId":"232","endLine":10,"endColumn":22},{"ruleId":"241","severity":1,"message":"308","line":67,"column":8,"nodeType":"243","endLine":67,"endColumn":10,"suggestions":"309"},{"ruleId":"229","severity":1,"message":"310","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":33},{"ruleId":"229","severity":1,"message":"311","line":10,"column":9,"nodeType":"231","messageId":"232","endLine":10,"endColumn":14},{"ruleId":"229","severity":1,"message":"312","line":11,"column":12,"nodeType":"231","messageId":"232","endLine":11,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":28,"column":91,"nodeType":"239","endLine":28,"endColumn":117},{"ruleId":"237","severity":1,"message":"238","line":30,"column":90,"nodeType":"239","endLine":30,"endColumn":114},{"ruleId":"237","severity":1,"message":"238","line":32,"column":90,"nodeType":"239","endLine":32,"endColumn":115},{"ruleId":"237","severity":1,"message":"238","line":34,"column":90,"nodeType":"239","endLine":34,"endColumn":114},{"ruleId":"229","severity":1,"message":"313","line":7,"column":11,"nodeType":"231","messageId":"232","endLine":7,"endColumn":19},{"ruleId":"229","severity":1,"message":"259","line":3,"column":13,"nodeType":"231","messageId":"232","endLine":3,"endColumn":20},{"ruleId":"229","severity":1,"message":"314","line":9,"column":12,"nodeType":"231","messageId":"232","endLine":9,"endColumn":21},{"ruleId":"286","severity":1,"message":"287","line":11,"column":42,"nodeType":"288","messageId":"289","endLine":11,"endColumn":44},{"ruleId":"229","severity":1,"message":"315","line":2,"column":13,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"229","severity":1,"message":"316","line":4,"column":13,"nodeType":"231","messageId":"232","endLine":4,"endColumn":20},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'View' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'videoVariable' and 'views'. Either include them or remove the dependency array.","ArrayExpression",["319"],"React Hook useEffect has missing dependencies: 'imageId' and 'imageVariable'. Either include them or remove the dependency array.",["320"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["321"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["322"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["323"],"'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["325"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["326"],["327"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["328"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["329"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["330"],"React Hook useEffect has missing dependencies: 'Tags' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["331"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["332"],"'Meta' is assigned a value but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'videoSearched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'start' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","'onSubscribe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["333"],"'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'settings' is assigned a value but never used.","'liveVideo' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"340","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"347","fix":"349"},{"desc":"347","fix":"350"},{"desc":"351","fix":"352"},{"desc":"351","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},"Update the dependencies array to be: [videoVariable, views]",{"range":"360","text":"361"},"Update the dependencies array to be: [imageId, imageVariable]",{"range":"362","text":"363"},"Update the dependencies array to be: [liveId]",{"range":"364","text":"365"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"366","text":"367"},{"range":"368","text":"367"},"Update the dependencies array to be: [broadcasterId]",{"range":"369","text":"370"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"371","text":"372"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"373","text":"374"},{"range":"375","text":"374"},{"range":"376","text":"374"},"Update the dependencies array to be: [socket]",{"range":"377","text":"378"},{"range":"379","text":"378"},"Update the dependencies array to be: [InputVisible, Tags, props]",{"range":"380","text":"381"},"Update the dependencies array to be: [props.userId, variable]",{"range":"382","text":"383"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"384","text":"385"},[1392,1394],"[videoVariable, views]",[1205,1207],"[imageId, imageVariable]",[1134,1136],"[liveId]",[2282,2290],"[peerConnection, socket]",[2725,2733],[1142,1144],"[broadcasterId]",[2123,2131],"[config, peerConnections, socket]",[2298,2306],"[peerConnections, socket]",[2488,2496],[2743,2745],[2879,2887],"[socket]",[3165,3167],[1569,1583],"[InputVisible, Tags, props]",[2137,2139],"[props.userId, variable]",[2257,2259],"[userFrom, userTo]"]