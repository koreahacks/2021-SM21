[{"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\index.js":"1","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\reportWebVitals.js":"2","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\App.js":"3","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\index.js":"5","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"6","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"7","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"8","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\Mainpage.js":"9","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\LoginPage\\LoginPage.js":"10","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\hoc\\auth.js":"11","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\user_actions.js":"12","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\user_reducer.js":"13","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"14","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"15","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"16","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"17","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"18","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"19","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\Config.js":"20","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\types.js":"21","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\HashTag.js":"22","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\Navbar.js":"23","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\SidebarData.js":"24"},{"size":1071,"mtime":1610177482075,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1610177482113,"results":"27","hashOfConfig":"26"},{"size":1765,"mtime":1610185686730,"results":"28","hashOfConfig":"26"},{"size":3735,"mtime":1610185239782,"results":"29","hashOfConfig":"26"},{"size":161,"mtime":1610177482067,"results":"30","hashOfConfig":"26"},{"size":7204,"mtime":1610185239849,"results":"31","hashOfConfig":"26"},{"size":3235,"mtime":1610185239821,"results":"32","hashOfConfig":"26"},{"size":7375,"mtime":1610185239760,"results":"33","hashOfConfig":"26"},{"size":780,"mtime":1610179668747,"results":"34","hashOfConfig":"26"},{"size":2339,"mtime":1610177482048,"results":"35","hashOfConfig":"26"},{"size":1499,"mtime":1610177482071,"results":"36","hashOfConfig":"26"},{"size":1121,"mtime":1610177482065,"results":"37","hashOfConfig":"26"},{"size":528,"mtime":1610177482068,"results":"38","hashOfConfig":"26"},{"size":146,"mtime":1610177482057,"results":"39","hashOfConfig":"26"},{"size":999,"mtime":1610177482086,"results":"40","hashOfConfig":"26"},{"size":1106,"mtime":1610177482085,"results":"41","hashOfConfig":"26"},{"size":1731,"mtime":1610185239941,"results":"42","hashOfConfig":"26"},{"size":1823,"mtime":1610177482089,"results":"43","hashOfConfig":"26"},{"size":1707,"mtime":1610183433878,"results":"44","hashOfConfig":"26"},{"size":58,"mtime":1610177482037,"results":"45","hashOfConfig":"26"},{"size":170,"mtime":1610177482063,"results":"46","hashOfConfig":"26"},{"size":3915,"mtime":1610179740580,"results":"47","hashOfConfig":"26"},{"size":2740,"mtime":1610185680581,"results":"48","hashOfConfig":"26"},{"size":1314,"mtime":1610185684534,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1wdw06l",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\index.js",[],["106","107"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\App.js",["108"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\RegisterPage\\RegisterPage.js",["109"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\index.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["110","111","112","113"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                {/*  해시태그 */ }\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["114","115"],"import React , {useEffect, useState} from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport Comment from './Sections/Comment'\r\nimport axios from 'axios'\r\n\r\nfunction VideoDetailPage(props){\r\n    const videoId = props.match.params.videoId\r\n    const [Video, setVideo]=useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n\r\n    const videoVariable = {videoId : videoId}\r\n\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/video/getVideoDetail', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setVideo(response.data.video)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n        axios.post('/api/comment/getComments', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments',response.data.comments)\r\n                    setCommentLists(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n    \r\n      }, [])\r\n\r\n    return(\r\n        <Row gutter={[16,16]}>\r\n            <Col lg={18} xs={32}>\r\n                <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n                    <video style={{width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} />\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={<h2>{Video.title}</h2>} />\r\n                            조회수 {Video.views}회\r\n                            <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                    </List.Item>\r\n                    {/* <List.Item\r\n                        actions={[<LikeDislikes video videoId={videoId} \r\n                            userId={localStorage.getItem('userId')}  />,\r\n                            <Subscriber usetTo={Video.writer._id} \r\n                            userFrom={localStorage.getItem('userId')}/>]}>\r\n                    \r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                            description={Video.writer.name}\r\n                            />\r\n                    </List.Item> */}\r\n                        <List.Item.Meta\r\n                            style={{ marginLeft:'3rem' }}\r\n                            description={Video.description}\r\n                        />\r\n                    {Video.startDate} ~ {Video.endDate}\r\n                    <Tag style={{ marginLeft:'3rem'}}>\r\n                        {Image.tag !== '' && (<div>{Image.tags}해시태그자리</div>)}\r\n                    </Tag><hr/>\r\n                    {/* <Comment CommentList={CommentLists} postId={Video._id} refreshFunction={updateComment}/> */}\r\n                </div>\r\n            </Col>\r\n            <Col lg={6} xs={24}>\r\n                {/* <SideVideo /> */}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default VideoDetailPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["116","117"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport HashTag from '../HashTag';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nvar imgNum = -1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [hashtag, setHashTag] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const handleHashTag = (event) => {\r\n        setHashTag(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            category: Categories,\r\n            tags:hashtag,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 ~`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit>\r\n            <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>이미지 추가</Button>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <button onClick> ◀ </button>\r\n                <button onClick> ▶ </button>\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag onChange={handleHashTag} value={hashtag}/><br/><br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\Mainpage.js",["118","119"],"import React, { Component, useState } from \"react\";\r\n\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\hoc\\auth.js",["120"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["121","122","123","124"],"import React, { useEffect, useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Axios from 'axios';\r\nimport '../Mainpage.css';\r\n\r\nfunction MainLivePage(){\r\n    return (\r\n        <div className='mainpage_below' style={{textAlign:'center', backgroundSize:'cover'}} height=\"100vh\">\r\n            \r\n            <p className=\"streamlive\">실시간 방송 LIVE</p>\r\n            <p className=\"meetinlive\">전국의 대학생 활동을 라이브 방송으로 만나보세요</p>\r\n            <AiIcons.AiOutlineLeftSquare size=\"40\" color=\"#C692B8\"  className=\"livevideoleft\"/>\r\n            <AiIcons.AiFillRightSquare size=\"40\" color=\"#C692B8\" className=\"livevideoright\"/>\r\n            <span id=\"#livevideo\" className=\"livevideo\" style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                \r\n                {/* {liveRenderCards} */}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainLivePage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["125","126","127"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossorigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><image src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><image src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><image src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><image src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["128"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\Config.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\types.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\HashTag.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\SidebarData.js",["129","130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":null,"fatal":true,"severity":2,"message":"136","line":12,"column":8},{"ruleId":null,"fatal":true,"severity":2,"message":"137","line":7,"column":8},{"ruleId":"138","severity":1,"message":"139","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"142","line":29,"column":23,"nodeType":"140","messageId":"141","endLine":29,"endColumn":35},{"ruleId":"138","severity":1,"message":"143","line":30,"column":21,"nodeType":"140","messageId":"141","endLine":30,"endColumn":31},{"ruleId":"138","severity":1,"message":"144","line":31,"column":12,"nodeType":"140","messageId":"141","endLine":31,"endColumn":22},{"ruleId":"138","severity":1,"message":"145","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":39,"column":10,"nodeType":"148","endLine":39,"endColumn":12,"suggestions":"149"},{"ruleId":"138","severity":1,"message":"150","line":109,"column":21,"nodeType":"140","messageId":"141","endLine":109,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":177,"column":21,"nodeType":"153","endLine":177,"endColumn":44},{"ruleId":"138","severity":1,"message":"154","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"155","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"157","line":6,"column":1,"nodeType":"158","endLine":42,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"155","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"159","line":3,"column":13,"nodeType":"140","messageId":"141","endLine":3,"endColumn":20},{"ruleId":"138","severity":1,"message":"160","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"161","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":33},{"ruleId":"138","severity":1,"message":"162","line":10,"column":9,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"138","severity":1,"message":"163","line":11,"column":12,"nodeType":"140","messageId":"141","endLine":11,"endColumn":19},{"ruleId":"138","severity":1,"message":"164","line":7,"column":11,"nodeType":"140","messageId":"141","endLine":7,"endColumn":19},{"ruleId":"138","severity":1,"message":"165","line":2,"column":13,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"166","line":4,"column":13,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"167","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":16},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"Parsing error: Identifier 'Navbar' has already been declared\n\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mSearchResultPage\u001b[39m from \u001b[32m\"./SearchResultPage/SearchResultPage\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mAuth\u001b[39m from \u001b[32m\"./hoc/auth\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mNavbar\u001b[39m from \u001b[32m\"./NavBar/Navbar\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mAxios\u001b[39m from \u001b[32m'axios'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mfunction\u001b[39m \u001b[33mApp\u001b[39m() {\u001b[0m","Parsing error: Identifier 'moment' has already been declared\n\n\u001b[0m \u001b[90m  5 | \u001b[39m\u001b[36mimport\u001b[39m { useDispatch } from \u001b[32m'react-redux'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mimport\u001b[39m { registerUser } from \u001b[32m'../_actions/user_actions'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m moment from \u001b[32m'moment'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mimport\u001b[39m axios from \u001b[32m'axios'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoVariable'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'BiIcons' is defined but never used.","'Axios' is defined but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'settings' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Mainpage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [videoVariable]",{"range":"173","text":"174"},[1310,1312],"[videoVariable]"]