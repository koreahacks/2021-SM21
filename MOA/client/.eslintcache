[{"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"4","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"5","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"6","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"7","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"8","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"9","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"10","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"11","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"12","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"13","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"14","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"15","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"16","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"17","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"18","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"19","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"20","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"21","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"22","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"23","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"24","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"25","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"26","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"27","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"28","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"29","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"30","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"31","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js":"32","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js":"33","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js":"34","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js":"35","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js":"36"},{"size":1071,"mtime":1610168960713,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1608703789719,"results":"39","hashOfConfig":"38"},{"size":1877,"mtime":1610200679447,"results":"40","hashOfConfig":"38"},{"size":205,"mtime":1610211722001,"results":"41","hashOfConfig":"38"},{"size":528,"mtime":1610211735465,"results":"42","hashOfConfig":"38"},{"size":3649,"mtime":1610198504457,"results":"43","hashOfConfig":"38"},{"size":780,"mtime":1610173522098,"results":"44","hashOfConfig":"38"},{"size":1538,"mtime":1610184726425,"results":"45","hashOfConfig":"38"},{"size":2424,"mtime":1610196234886,"results":"46","hashOfConfig":"38"},{"size":1499,"mtime":1610167185313,"results":"47","hashOfConfig":"38"},{"size":2718,"mtime":1610205450504,"results":"48","hashOfConfig":"38"},{"size":7220,"mtime":1610198253661,"results":"49","hashOfConfig":"38"},{"size":3313,"mtime":1610198253657,"results":"50","hashOfConfig":"38"},{"size":7419,"mtime":1610198253601,"results":"51","hashOfConfig":"38"},{"size":6102,"mtime":1610196667921,"results":"52","hashOfConfig":"38"},{"size":7715,"mtime":1610233850965,"results":"53","hashOfConfig":"38"},{"size":5446,"mtime":1610211590545,"results":"54","hashOfConfig":"38"},{"size":675,"mtime":1610211673350,"results":"55","hashOfConfig":"38"},{"size":4015,"mtime":1610232206259,"results":"56","hashOfConfig":"38"},{"size":999,"mtime":1610173522354,"results":"57","hashOfConfig":"38"},{"size":1723,"mtime":1610197518507,"results":"58","hashOfConfig":"38"},{"size":1823,"mtime":1610180116106,"results":"59","hashOfConfig":"38"},{"size":18966,"mtime":1610198253620,"results":"60","hashOfConfig":"38"},{"size":1707,"mtime":1610198253671,"results":"61","hashOfConfig":"38"},{"size":3915,"mtime":1610184726409,"results":"62","hashOfConfig":"38"},{"size":146,"mtime":1610175597153,"results":"63","hashOfConfig":"38"},{"size":1314,"mtime":1610198253609,"results":"64","hashOfConfig":"38"},{"size":99,"mtime":1610208935977,"results":"65","hashOfConfig":"38"},{"size":1762,"mtime":1610198253647,"results":"66","hashOfConfig":"38"},{"size":2802,"mtime":1610233632638,"results":"67","hashOfConfig":"38"},{"size":284,"mtime":1610211684225,"results":"68","hashOfConfig":"38"},{"size":400,"mtime":1610211737044,"results":"69","hashOfConfig":"38"},{"size":3977,"mtime":1610233025547,"results":"70","hashOfConfig":"38"},{"size":2832,"mtime":1610211328207,"results":"71","hashOfConfig":"38"},{"size":370,"mtime":1610211675686,"results":"72","hashOfConfig":"38"},{"size":434,"mtime":1610208569415,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"18bd918",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],["160","161"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\App.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["162"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../_actions/user_actions';\r\n\r\n\r\n\r\nfunction RegisterPage(props) {\r\n    //디스패치 함수 가져오기\r\n    const dispatch = useDispatch();\r\n\r\n    //state 설정\r\n    const [email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert(\"비밀번호와 비밀번호 확인은 같아야 합니다.\")\r\n        }\r\n\r\n        //서버로 전달할 state값을 모은 객체\r\n        let body = {\r\n            email: email,\r\n            password: Password,\r\n            name: Name,\r\n        }\r\n\r\n        //서버로 전달할 임시 프로필 객체\r\n        const profile = {\r\n            email: email,\r\n            nickName: Name,\r\n            profileImg: \"\",\r\n            content: \"\",\r\n        }\r\n\r\n        //임시 프로필 저장\r\n        axios.post('/api/profile/saveProfile', profile)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n        //디스패치\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    //submit시 로그인 페이지로 이동\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>이메일</label>\r\n                <Input value={email} placeholder=\"아이디\" onChange={onEmailHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"비밀번호 확인\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["163","164","165","166"],"import React, { Component, useState } from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["167"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["168","169","170"],"import React, { useState } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto'}}>-\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white', marginTop:'5rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                {/*  해시태그 */ }\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["171","172","173"],"import React , {useEffect, useState} from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport SideVideo from './Sections/SideVideo'\r\nimport Comment from './Sections/Comment'\r\nimport Subscriber from './Sections/Subscriber'\r\nimport axios from 'axios'\r\n\r\nfunction VideoDetailPage(props){\r\n    const videoId = props.match.params.videoId\r\n    const [Video, setVideo]=useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n\r\n    const videoVariable = {videoId : videoId}\r\n\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/video/getVideoDetail', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setVideo(response.data.video)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n        axios.post('/api/comment/getComments', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments',response.data.comments)\r\n                    setCommentLists(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n    \r\n      }, [])\r\n\r\n    return(\r\n        <Row gutter={[16,16]}>\r\n            <Col lg={18} xs={32}>\r\n                <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n                    <video style={{width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} />\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={<h2>{Video.title}</h2>} />\r\n                            조회수 {Video.views}회\r\n                            <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                    </List.Item>\r\n                    {/* <List.Item\r\n                        actions={[<LikeDislikes video videoId={videoId} \r\n                            userId={localStorage.getItem('userId')}  />,\r\n                            <Subscriber usetTo={Video.writer._id} \r\n                            userFrom={localStorage.getItem('userId')}/>]}>\r\n                    \r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                            description={Video.writer.name}\r\n                            />\r\n                    </List.Item> */}\r\n                        <List.Item.Meta\r\n                            style={{ marginLeft:'3rem' }}\r\n                            description={Video.description}\r\n                        />\r\n                    {Video.startDate} ~ {Video.endDate}\r\n                    <Tag style={{ marginLeft:'3rem'}}>\r\n                        {Image.tag !== '' && (<div>{Image.tags}해시태그자리</div>)}\r\n                    </Tag><hr/>\r\n                    <Comment CommentList={CommentLists} postId={Video._id} refreshFunction={updateComment}/>\r\n                </div>\r\n            </Col>\r\n            <Col lg={6} xs={24}>\r\n                <SideVideo />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default VideoDetailPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["174","175"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport HashTag from '../HashTag';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nvar imgNum = -1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [hashtag, setHashTag] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const handleHashTag = (event) => {\r\n        setHashTag(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            category: Categories,\r\n            tags:hashtag,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 ~`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit>\r\n            <Input style={{border:'white', marginTop:'5rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>이미지 추가</Button>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag onChange={handleHashTag} value={hashtag}/><br/><br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n                <br/><br/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["176"],"import React, { useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport HashTag from '../../HashTag';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction BroadCastForm(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ThumbnailPath, setThumbnailPath] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n    let hashTags = [];\r\n\r\n    const onTitleChange = e => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = e => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n        console.log('updatepage')\r\n        console.log(hashTags)\r\n    }\r\n\r\n    const onDrop = files => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0])\r\n\r\n        Axios.post('/api/liveVideo/uploadfiles', formData, config)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setThumbnailPath(res.data.url);\r\n                    setFileName(res.data.fileName)\r\n                } else {\r\n                    alert(\"썸네일 업로드 실패\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: videoTitle,\r\n            description: description,\r\n            thumbnail: ThumbnailPath,\r\n            tags: hashTags\r\n        }\r\n\r\n        Axios.post('/api/liveVideo/uploadLiveInfo', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    alert(\"라이브 페이지로 이동합니다.\")\r\n                    props.history.push(`/broadcast/${localStorage.getItem('userId')}`)\r\n                } else {\r\n                    alert(\"라이브 준비에 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input\r\n                    value={videoTitle}\r\n                    onChange={onTitleChange}\r\n                    placeholder='제목을 쓰세요'\r\n                    style={{ borderStyle: 'none', borderBottom: '1px solid #cdcec9'}}\r\n                />\r\n                <div style={{ display: 'flex', width: '100%', marginTop: '2rem' }}>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    background: '#48bcec', \r\n                                    color: 'white', \r\n                                    paddingRight: '1rem', \r\n                                    paddingLeft: '1rem', \r\n                                    paddingTop: '0.2rem',\r\n                                    paddingBottom: '0.2rem',\r\n                                    border: '2px solid #48bcec',\r\n                                    cursor: 'pointer'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>썸네일 추가</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <div style={{ flex: '1', border: '2px solid #cdcec9' }}>\r\n                        { fileName &&\r\n                            (fileName)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    display: 'flex', width: '100%', height: '350px', border: '2px solid #cdcec9', marginTop: '1rem', justifyContent: 'center', alignItems: 'center'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                    ThumbnailPath &&\r\n                                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                                    }\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <TextArea\r\n                    value={description}\r\n                    onChange={onDescriptionChange}\r\n                    placeholder='영상 소개'\r\n                    style={{ height: '200px', border: '2px solid #cdcec9' }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <HashTag addTags={handleAddTags} />\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" style={{ background: '#48bcec', paddingLeft: '0' }} size=\"large\" onClick={onSubmit}>\r\n                    라이브 시작\r\n                </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BroadCastForm\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["177","178","179","180","181","182","183","184","185"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["186","187","188","189","190"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Tag } from 'antd';\r\nimport ChatPage from '../LiveChatPage/ChatPage';\r\nimport Subscriber from '../../VideoDetailPage/Sections/Subscriber';\r\nimport LiveLike from '../Sections/LiveLike';\r\nimport '../BroadCastPage/BroadCastPage.css'\r\nimport Axios from 'axios'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction LiveVideoPage(props) {\r\n\r\n    const liveId = props.match.params.liveId;\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    let peerConnection;\r\n    const config = {\r\n        iceServers: [\r\n            { \r\n              \"urls\": \"stun:stun.l.google.com:19302\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetail', { liveId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"offer\", (id, description) => {\r\n            peerConnection = new RTCPeerConnection(config);\r\n            peerConnection\r\n                .setRemoteDescription(description)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"answer\", id, peerConnection.localDescription)\r\n                })\r\n            peerConnection.ontrack = e => {\r\n                \r\n                videoRef.current.srcObject = e.streams[0];\r\n                       \r\n                console.log(\"offer\")\r\n            }\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate)\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(candidate))\r\n                .catch(e => console.error(e))\r\n        })\r\n        \r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcaster\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n            peerConnection.close();\r\n        }\r\n    }, [window])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (liveDetail.writer._id !== localStorage.getItem('userId')) && (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        const suberscribeButton = (<Subscriber userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                    <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls /> \r\n                    <div>\r\n                        <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                        <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                            <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                            <LiveLike userId={localStorage.getItem('userId')} liveId={liveId} />\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    <List.Item\r\n                            actions={[<Subscriber userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                title={liveDetail.writer.name}\r\n                                description={liveDetail.description}\r\n                            />\r\n                    </List.Item>\r\n                    <div>{tagChild}</div>\r\n                    <br />\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                        <ChatPage />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   else {\r\n        return (\r\n            <div>...</div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default LiveVideoPage\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["191","192","193","194","195"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["196","197","198","199","200","201","202"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossOrigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><img src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><img src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><img src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><img src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Divider, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Meta } = Card;\r\n//날짜를 0000-00-00 이런식으로 필터링 해줄것\r\n//정렬 추천순은 좋아요가 없어서 구현 안됨\r\nfunction ResultBooths(props) {\r\n\r\n    //state\r\n    const [Booths, setBooths] = useState([]);\r\n    const [Video, setVideo] = useState([]);\r\n    const [Image, setImage] = useState([])\r\n\r\n    let searched = []\r\n\r\n    useEffect(() => {\r\n\r\n        const body = {\r\n            query: \"test\"\r\n        }\r\n\r\n        //검색된 부스 가져오기\r\n        axios.post(\"/api/booth/getBooth/search\", body)\r\n            .then(response => {\r\n                searched = searched.concat(response.data.booth)\r\n                console.log(\"searched\", searched)\r\n\r\n                if (searched.length !== 0) {\r\n                    //console.log(\"in if\")\r\n                    setBooths(searched)\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error message\", err.message)\r\n            })\r\n\r\n        //비디오 가져오기\r\n        axios.post('/api/video/getVidoes', body)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(\"현재 비디오\", res.data);\r\n                    setVideo(res.data.videos)\r\n                } else {\r\n                    alert(\"현재 전시 비디오 가져오기를 실패했습니다.\")\r\n                }\r\n            })\r\n\r\n        axios.get('/api/image/getImages')\r\n            .then(response => {\r\n              if(response.data.success){\r\n                  setImage(response.data.images)\r\n              }else{\r\n                alert('image 가져오기를 실패했습니다.');\r\n              }\r\n            })\r\n\r\n    }, [props.alignType])\r\n\r\n    //현재, 예정, 지난 부스로 구분\r\n    const sortBooths = (sort) => {\r\n        var i = 0;\r\n        var now = new Date();\r\n\r\n        if (Booths.length === 0) {\r\n            return \"err\"\r\n        }\r\n\r\n        switch (sort) {\r\n            case \"current\":\r\n                var current = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (start.getTime() < now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    } else if (start.getTime() === now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", current)\r\n                return current\r\n\r\n            case \"past\":\r\n                var past = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (end.getTime() < now.getTime()) { return v }\r\n                })\r\n                console.log(sort, \"booths\", past)\r\n                return past\r\n\r\n            case \"future\":\r\n                var future = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n\r\n                    if (start.getTime() > now.getTime()) {\r\n                        return v;\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", future)\r\n                return future\r\n        }\r\n\r\n    }\r\n\r\n    //비디오 정렬 및 레이아웃 생성\r\n    const alignVideo = () => {\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                break;\r\n            case \"date\":\r\n                Video.sort(function (a, b) {\r\n                    return a.createAt < b.createAt ? -1 : a.createAt > b.createAt ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                Video.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n    }\r\n        const renderCards = Video.map((video, index)=>{\r\n            var minutes = Math.floor(video.duration / 60);\r\n            var seconds = Math.floor(video.duration - minutes * 60);\r\n        \r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/video/${video._id}`} >\r\n                        <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                            <span>{minutes} : {seconds}</span>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={video.writer.image} />\r\n                        }\r\n                        title={video.title}\r\n                    />\r\n                    <span>{video.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {video.views}</span>\r\n                    - <span> {moment(video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n          const renderImageCards = Image.map((image, index)=>{\r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/post/${image._id}`} >\r\n                        <img style={{ width: '100%' }} src={`http://localhost:5000/${image.filePath[0]}`}/>\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={image.writer.image} />\r\n                        }\r\n                        title={image.title}\r\n                    />\r\n                    <span>{image.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {image.views}</span>\r\n                    - <span> {moment(image.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n\r\n    //부스 정렬\r\n    const alignBooths = (booths) => {\r\n        console.log(\"align Booths\", booths)\r\n        if (booths === \"err\") { return \"err\" }\r\n\r\n        console.log(\"change Align\", props.alignType)\r\n\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                booths.sort(function (a, b) {\r\n\r\n                    var aLike = 0\r\n                    var bLike = 0\r\n\r\n                    let body = {\r\n                        boothId: a._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            aLike = res.data.likes.length\r\n                        })\r\n\r\n                    body = {\r\n                        boothId: b._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            bLike = res.data.likes.length\r\n                        })\r\n\r\n\r\n                })\r\n                break;\r\n            case \"date\":\r\n                booths.sort(function (a, b) {\r\n                    let aDate = new Date(a.boothStart)\r\n                    let bDate = new Date(b.boothStart)\r\n\r\n                    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                booths.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n        return booths\r\n    }\r\n\r\n    //부스 레이아웃 잡기\r\n    const boothsLayout = (sort) => {\r\n        var i = 0;\r\n        var boothCards = [];\r\n        var _booths = [];\r\n\r\n        if (sort === \"current\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else if (sort === \"future\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        }\r\n\r\n\r\n        console.log(\"_booths\", _booths)\r\n\r\n        if (_booths === \"err\") {\r\n            return\r\n        }\r\n\r\n        while (i < _booths.length) {\r\n\r\n            if (_booths.length - i > 3) {\r\n\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 3].title} src={_booths[i + 3].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 3].title}</p>\r\n                                <p>{_booths[i + 3].boothStart} ~ {_booths[i + 3].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 3) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 2) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 1) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            i = i + 4;\r\n        };\r\n        return boothCards;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>비디오</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {alignVideo()}{renderCards}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>현재 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"current\")}{renderImageCards}\r\n                </div>\r\n            </div>\r\n\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>예정 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"future\")}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>지난 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"past\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultBooths;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["218"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["219","220"],"import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Home',\r\n        path:'/',\r\n        icon:<AiIcons.AiFillHome style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스생성',\r\n        path:'/video/upload',\r\n        icon:<GiIcons.GiGearHammer style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스편집',\r\n        path:'/',\r\n        icon:<BiIcons.BiEdit style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'업로드',\r\n        path:\"/\",\r\n        icon:<FiIcons.FiUpload style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:\"nav-text\"\r\n    },\r\n    {\r\n        title:'라이브 시작',\r\n        path:'/',\r\n        icon:<RiIcons.RiLiveFill style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    }\r\n]","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["221"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js",["222","223"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd'\r\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons'\r\nimport Axios from 'axios'\r\n\r\nfunction LiveLike(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n\r\n    let variable = { videoId: props.liveId, userId: props.userId }\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/like/getLiveLikes', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    // 얼마나 많은 좋아요를 받았는지\r\n                    setLikes(res.data.likes.length)\r\n                    // 내가 이미 좋아요를 눌렀는지\r\n                    res.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        } \r\n                    })\r\n                } else {\r\n                    alert(\"좋아요 정보를 가져오지 못 했습니다.\")\r\n                }\r\n            })\r\n    }, [Likes, LikeAction])\r\n\r\n    const handleLikeUpdate  = (option) => {\r\n        if (option === 'plus') {\r\n            Axios.post('/api/like/insertLiveLikes', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n                } else {\r\n                    alert(\"좋아요를 업데이트하지 못 했습니다. \")\r\n                }\r\n            })\r\n        } else {\r\n            Axios.post('/api/like/deleteLiveLikes', variable)\r\n                .then(res => {\r\n                    if (res.data.success) {\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n                    } else {\r\n                        alert(\"좋아요를 취소하지 못 했습니다. \")\r\n                    }\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                {\r\n                    LikeAction === 'liked' \r\n                    ?   (<Tooltip title=\"Canceled\">\r\n                            <LikeFilled style={{ cursor: 'pointer', fontSize: '1.1rem', color: 'gray' }} onClick={() => handleLikeUpdate('minus')} />\r\n                        </Tooltip>)\r\n                    :   (<Tooltip title=\"Like\">\r\n                            <LikeOutlined style={{ cursor: 'pointer', fontSize: '1.1rem', color: 'gray' }} onClick={() => handleLikeUpdate('plus')} />\r\n                        </Tooltip>)\r\n                }\r\n                {console.log(Likes)}\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto', fontSize: '1.1rem', color: 'gray' }}>{Likes}</span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiveLike\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":89,"column":17,"nodeType":"230","endLine":89,"endColumn":76},{"ruleId":"231","severity":1,"message":"232","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"235","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"236","line":2,"column":13,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"231","severity":1,"message":"237","line":3,"column":13,"nodeType":"233","messageId":"234","endLine":3,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":6,"column":1,"nodeType":"240","endLine":42,"endColumn":2},{"ruleId":"231","severity":1,"message":"241","line":29,"column":23,"nodeType":"233","messageId":"234","endLine":29,"endColumn":35},{"ruleId":"231","severity":1,"message":"242","line":30,"column":21,"nodeType":"233","messageId":"234","endLine":30,"endColumn":31},{"ruleId":"231","severity":1,"message":"243","line":31,"column":12,"nodeType":"233","messageId":"234","endLine":31,"endColumn":22},{"ruleId":"231","severity":1,"message":"244","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":22},{"ruleId":"231","severity":1,"message":"245","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":41,"column":10,"nodeType":"248","endLine":41,"endColumn":12,"suggestions":"249"},{"ruleId":"231","severity":1,"message":"250","line":109,"column":21,"nodeType":"233","messageId":"234","endLine":109,"endColumn":27},{"ruleId":"251","severity":1,"message":"252","line":176,"column":21,"nodeType":"230","endLine":176,"endColumn":44},{"ruleId":"231","severity":1,"message":"253","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":20},{"ruleId":"231","severity":1,"message":"254","line":16,"column":12,"nodeType":"233","messageId":"234","endLine":16,"endColumn":18},{"ruleId":"231","severity":1,"message":"255","line":17,"column":12,"nodeType":"233","messageId":"234","endLine":17,"endColumn":27},{"ruleId":"246","severity":1,"message":"256","line":40,"column":8,"nodeType":"248","endLine":40,"endColumn":10,"suggestions":"257"},{"ruleId":"246","severity":1,"message":"258","line":69,"column":8,"nodeType":"248","endLine":69,"endColumn":16,"suggestions":"259"},{"ruleId":"246","severity":1,"message":"260","line":75,"column":8,"nodeType":"248","endLine":75,"endColumn":16,"suggestions":"261"},{"ruleId":"246","severity":1,"message":"260","line":81,"column":8,"nodeType":"248","endLine":81,"endColumn":16,"suggestions":"262"},{"ruleId":"246","severity":1,"message":"263","line":89,"column":8,"nodeType":"248","endLine":89,"endColumn":10,"suggestions":"264"},{"ruleId":"246","severity":1,"message":"265","line":95,"column":8,"nodeType":"248","endLine":95,"endColumn":16,"suggestions":"266"},{"ruleId":"246","severity":1,"message":"267","line":105,"column":8,"nodeType":"248","endLine":105,"endColumn":10,"suggestions":"268"},{"ruleId":"246","severity":1,"message":"269","line":37,"column":8,"nodeType":"248","endLine":37,"endColumn":10,"suggestions":"270"},{"ruleId":"246","severity":1,"message":"271","line":41,"column":30,"nodeType":"272","endLine":41,"endColumn":59},{"ruleId":"246","severity":1,"message":"273","line":70,"column":8,"nodeType":"248","endLine":70,"endColumn":16,"suggestions":"274"},{"ruleId":"246","severity":1,"message":"275","line":89,"column":8,"nodeType":"248","endLine":89,"endColumn":16,"suggestions":"276"},{"ruleId":"231","severity":1,"message":"277","line":105,"column":15,"nodeType":"233","messageId":"234","endLine":105,"endColumn":32},{"ruleId":"231","severity":1,"message":"237","line":3,"column":13,"nodeType":"233","messageId":"234","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":34,"column":21,"nodeType":"230","endLine":34,"endColumn":106},{"ruleId":"231","severity":1,"message":"278","line":52,"column":9,"nodeType":"233","messageId":"234","endLine":52,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":60,"column":20,"nodeType":"281","messageId":"282","endLine":60,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":69,"column":20,"nodeType":"281","messageId":"282","endLine":69,"endColumn":22},{"ruleId":"231","severity":1,"message":"283","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":33},{"ruleId":"231","severity":1,"message":"284","line":10,"column":9,"nodeType":"233","messageId":"234","endLine":10,"endColumn":14},{"ruleId":"231","severity":1,"message":"285","line":11,"column":12,"nodeType":"233","messageId":"234","endLine":11,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":28,"column":91,"nodeType":"230","endLine":28,"endColumn":117},{"ruleId":"228","severity":1,"message":"229","line":30,"column":90,"nodeType":"230","endLine":30,"endColumn":114},{"ruleId":"228","severity":1,"message":"229","line":32,"column":90,"nodeType":"230","endLine":32,"endColumn":115},{"ruleId":"228","severity":1,"message":"229","line":34,"column":90,"nodeType":"230","endLine":34,"endColumn":114},{"ruleId":"246","severity":1,"message":"286","line":28,"column":28,"nodeType":"287","endLine":28,"endColumn":64},{"ruleId":"231","severity":1,"message":"288","line":65,"column":13,"nodeType":"233","messageId":"234","endLine":65,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":72,"column":9,"nodeType":"291","messageId":"292","endLine":115,"endColumn":10},{"ruleId":"293","severity":1,"message":"294","line":74,"column":49,"nodeType":"295","messageId":"296","endLine":74,"endColumn":51},{"ruleId":"293","severity":1,"message":"294","line":96,"column":46,"nodeType":"295","messageId":"296","endLine":96,"endColumn":48},{"ruleId":"231","severity":1,"message":"297","line":97,"column":25,"nodeType":"233","messageId":"234","endLine":97,"endColumn":30},{"ruleId":"293","severity":1,"message":"294","line":106,"column":48,"nodeType":"295","messageId":"296","endLine":106,"endColumn":50},{"ruleId":"289","severity":1,"message":"290","line":121,"column":9,"nodeType":"291","messageId":"292","endLine":134,"endColumn":10},{"ruleId":"228","severity":1,"message":"229","line":168,"column":25,"nodeType":"230","endLine":168,"endColumn":108},{"ruleId":"289","severity":1,"message":"290","line":196,"column":9,"nodeType":"291","messageId":"292","endLine":237,"endColumn":10},{"ruleId":"293","severity":1,"message":"298","line":198,"column":29,"nodeType":"299","messageId":"300","endLine":198,"endColumn":38},{"ruleId":"231","severity":1,"message":"301","line":209,"column":29,"nodeType":"233","messageId":"234","endLine":209,"endColumn":34},{"ruleId":"231","severity":1,"message":"302","line":218,"column":29,"nodeType":"233","messageId":"234","endLine":218,"endColumn":34},{"ruleId":"303","severity":1,"message":"304","line":251,"column":17,"nodeType":"233","messageId":"305","endLine":251,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":254,"column":17,"nodeType":"233","messageId":"305","endLine":254,"endColumn":20},{"ruleId":"231","severity":1,"message":"306","line":7,"column":11,"nodeType":"233","messageId":"234","endLine":7,"endColumn":19},{"ruleId":"231","severity":1,"message":"307","line":2,"column":13,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"231","severity":1,"message":"308","line":4,"column":13,"nodeType":"233","messageId":"234","endLine":4,"endColumn":20},{"ruleId":"246","severity":1,"message":"309","line":67,"column":8,"nodeType":"248","endLine":67,"endColumn":10,"suggestions":"310"},{"ruleId":"293","severity":1,"message":"311","line":20,"column":45,"nodeType":"295","messageId":"300","endLine":20,"endColumn":47},{"ruleId":"246","severity":1,"message":"312","line":29,"column":8,"nodeType":"248","endLine":29,"endColumn":27,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'Avatar' is defined but never used.","'Subscriber' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoVariable'. Either include it or remove the dependency array.","ArrayExpression",["316"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'withRouter' is defined but never used.","'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["318"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["319"],["320"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["321"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["322"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["324"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["325"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["326"],"'suberscribeButton' is assigned a value but never used.","'smallwidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'start' is assigned a value but never used.","Array.prototype.sort() expects a return value from function.","FunctionExpression","expectedInside","'aLike' is assigned a value but never used.","'bLike' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","'settings' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["327"],"Array.prototype.map() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["328"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},{"desc":"335","fix":"338"},{"desc":"339","fix":"340"},{"desc":"339","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [videoVariable]",{"range":"351","text":"352"},"Update the dependencies array to be: [broadcasterId]",{"range":"353","text":"354"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"355","text":"356"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"357","text":"358"},{"range":"359","text":"358"},{"range":"360","text":"358"},"Update the dependencies array to be: [socket]",{"range":"361","text":"362"},{"range":"363","text":"362"},"Update the dependencies array to be: [liveId]",{"range":"364","text":"365"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"366","text":"367"},{"range":"368","text":"367"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"369","text":"370"},"Update the dependencies array to be: [Likes, LikeAction, variable, props.userId]",{"range":"371","text":"372"},[1404,1406],"[videoVariable]",[1361,1363],"[broadcasterId]",[2342,2350],"[config, peerConnections, socket]",[2517,2525],"[peerConnections, socket]",[2707,2715],[2962,2964],[3098,3106],"[socket]",[3384,3386],[1128,1130],"[liveId]",[2276,2284],"[peerConnection, socket]",[2719,2727],[2257,2259],"[userFrom, userTo]",[992,1011],"[Likes, LikeAction, variable, props.userId]"]