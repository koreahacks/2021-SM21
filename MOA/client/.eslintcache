[{"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"5","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"6","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"7","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"8","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LandingPage\\LandingPage.js":"9","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"10","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"11","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"12","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"13"},{"size":517,"mtime":1610159670523,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610159670533,"results":"16","hashOfConfig":"15"},{"size":1232,"mtime":1610166585475,"results":"17","hashOfConfig":"15"},{"size":2120,"mtime":1610159670520,"results":"18","hashOfConfig":"15"},{"size":2273,"mtime":1610163150528,"results":"19","hashOfConfig":"15"},{"size":340,"mtime":1610160263227,"results":"20","hashOfConfig":"15"},{"size":7215,"mtime":1610162435473,"results":"21","hashOfConfig":"15"},{"size":7427,"mtime":1610166711354,"results":"22","hashOfConfig":"15"},{"size":717,"mtime":1610160263584,"results":"23","hashOfConfig":"15"},{"size":1499,"mtime":1610165925527,"results":"24","hashOfConfig":"15"},{"size":1072,"mtime":1610166451272,"results":"25","hashOfConfig":"15"},{"size":170,"mtime":1610165916739,"results":"26","hashOfConfig":"15"},{"size":59,"mtime":1610166450265,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"t97ciw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":2,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],["59","60"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",["61"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["62"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\n\r\nfunction RegisterPage() {\r\n    //state 설정\r\n    const [Id, setId] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onIdHandler = (event) => {\r\n        setId(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>아이디</label>\r\n                <Input value={Id} placeholder=\"아이디\" onChange={onIdHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"이름\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["63","64","65"],"import React from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\n\r\nfunction VideoDetailPage(){\r\n    return(\r\n        <Row>\r\n            <Col>\r\n                <div>\r\n                    {/* 비디오 뽑아오는 부분 */}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default VideoDetailPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["66","67","68","69","70"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag /><br /><br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["71","72","73","74"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LandingPage\\LandingPage.js",["75","76","77","78","79","80","81"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\n\r\nfunction LandingPage(){\r\n    return(\r\n        <div>\r\n            <select onChange>\r\n                {/* 카테고리 */}\r\n            </select><br /><br />\r\n            <div>\r\n                <Title>전시</Title>\r\n            </div><br/>\r\n            <Row>\r\n                이미지 카드 부분\r\n            </Row>\r\n            <br/>\r\n            \r\n            <div>\r\n                <Title>영상</Title>\r\n            </div>\r\n            <br/>\r\n            <Row>\r\n                영상 카드 부분\r\n            </Row>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\nexport default LandingPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["82"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":38,"column":17,"nodeType":"93","endLine":38,"endColumn":76},{"ruleId":"87","severity":1,"message":"94","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"95","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"96","line":2,"column":34,"nodeType":"89","messageId":"90","endLine":2,"endColumn":37},{"ruleId":"87","severity":1,"message":"97","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"98","line":29,"column":23,"nodeType":"89","messageId":"90","endLine":29,"endColumn":35},{"ruleId":"87","severity":1,"message":"99","line":30,"column":21,"nodeType":"89","messageId":"90","endLine":30,"endColumn":31},{"ruleId":"87","severity":1,"message":"100","line":31,"column":12,"nodeType":"89","messageId":"90","endLine":31,"endColumn":22},{"ruleId":"101","severity":2,"message":"102","line":194,"column":18,"nodeType":"103","endLine":194,"endColumn":25},{"ruleId":"87","severity":1,"message":"104","line":2,"column":50,"nodeType":"89","messageId":"90","endLine":2,"endColumn":60},{"ruleId":"87","severity":1,"message":"105","line":47,"column":11,"nodeType":"89","messageId":"90","endLine":47,"endColumn":24},{"ruleId":"106","severity":2,"message":"107","line":106,"column":21,"nodeType":"89","messageId":"108","endLine":106,"endColumn":27},{"ruleId":"109","severity":1,"message":"110","line":175,"column":21,"nodeType":"93","endLine":175,"endColumn":44},{"ruleId":"87","severity":1,"message":"111","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"112","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"95","line":3,"column":16,"nodeType":"89","messageId":"90","endLine":3,"endColumn":22},{"ruleId":"87","severity":1,"message":"113","line":3,"column":24,"nodeType":"89","messageId":"90","endLine":3,"endColumn":27},{"ruleId":"87","severity":1,"message":"114","line":3,"column":29,"nodeType":"89","messageId":"90","endLine":3,"endColumn":39},{"ruleId":"101","severity":2,"message":"115","line":12,"column":18,"nodeType":"103","endLine":12,"endColumn":23},{"ruleId":"101","severity":2,"message":"115","line":20,"column":18,"nodeType":"103","endLine":20,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":6,"column":1,"nodeType":"118","endLine":42,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'List' is defined but never used.","'Avatar' is defined but never used.","'Tag' is defined but never used.","'useEffect' is defined but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","react/jsx-no-undef","'HashTag' is not defined.","JSXIdentifier","'Pagination' is defined but never used.","'handleHashTag' is assigned a value but never used.","no-undef","'imgNum' is not defined.","undef","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Typography' is defined but never used.","'Title' is not defined.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]