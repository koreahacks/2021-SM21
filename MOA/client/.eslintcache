[{"C:\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"4","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LandingPage\\LandingPage.js":"5","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"6","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"7","C:\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"8","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"9","C:\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"10","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"11","C:\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"12","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"13","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"14","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"15","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"16","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"17","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"18"},{"size":1071,"mtime":1610168731366,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1610154805647,"results":"21","hashOfConfig":"20"},{"size":1167,"mtime":1610170660114,"results":"22","hashOfConfig":"20"},{"size":3597,"mtime":1610169090534,"results":"23","hashOfConfig":"20"},{"size":741,"mtime":1610170469667,"results":"24","hashOfConfig":"20"},{"size":340,"mtime":1610161953139,"results":"25","hashOfConfig":"20"},{"size":2273,"mtime":1610159081719,"results":"26","hashOfConfig":"20"},{"size":1499,"mtime":1610167251898,"results":"27","hashOfConfig":"20"},{"size":7215,"mtime":1610168053967,"results":"28","hashOfConfig":"20"},{"size":7447,"mtime":1610168053963,"results":"29","hashOfConfig":"20"},{"size":1121,"mtime":1610169550556,"results":"30","hashOfConfig":"20"},{"size":58,"mtime":1610170165411,"results":"31","hashOfConfig":"20"},{"size":170,"mtime":1610167251894,"results":"32","hashOfConfig":"20"},{"size":161,"mtime":1610169780344,"results":"33","hashOfConfig":"20"},{"size":528,"mtime":1610168729249,"results":"34","hashOfConfig":"20"},{"size":573,"mtime":1610170903826,"results":"35","hashOfConfig":"20"},{"size":999,"mtime":1610158399996,"results":"36","hashOfConfig":"20"},{"size":1106,"mtime":1610170704448,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oepqr3",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":3,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],["79","80"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",["81","82","83","84"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["85","86"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\LandingPage\\LandingPage.js",["87","88","89","90"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["91","92","93"],"import React from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\n\r\nfunction VideoDetailPage(){\r\n    return(\r\n        <Row>\r\n            <Col>\r\n                <div>\r\n                    {/* 비디오 뽑아오는 부분 */}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default VideoDetailPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["94"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["95","96","97","98"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                {/*  해시태그 */ }\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["99","100","101","102","103"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message,Pagination } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst imgNum=-1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [hashtag, setHashTag] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const handleHashTag = (event) => {\r\n        setHashTag(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            category: Categories,\r\n            tags:hashtag,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                    // setFilePath(response.data.filePath)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit>\r\n            <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>이미지 추가</Button>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <button onClick> ◀ </button>\r\n                <button onClick> ▶ </button>\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                \r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["104","105","106","107","108","109","110"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":2,"column":27,"nodeType":"121","messageId":"122","endLine":2,"endColumn":36},{"ruleId":"119","severity":1,"message":"124","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":13},{"ruleId":"119","severity":1,"message":"126","line":49,"column":15,"nodeType":"121","messageId":"122","endLine":49,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":87,"column":17,"nodeType":"129","endLine":87,"endColumn":76},{"ruleId":"119","severity":1,"message":"130","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"131","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"132","line":3,"column":16,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"133","line":3,"column":24,"nodeType":"121","messageId":"122","endLine":3,"endColumn":27},{"ruleId":"119","severity":1,"message":"134","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"132","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":22},{"ruleId":"119","severity":1,"message":"135","line":2,"column":34,"nodeType":"121","messageId":"122","endLine":2,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":6,"column":1,"nodeType":"138","endLine":42,"endColumn":2},{"ruleId":"119","severity":1,"message":"123","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"139","line":29,"column":23,"nodeType":"121","messageId":"122","endLine":29,"endColumn":35},{"ruleId":"119","severity":1,"message":"140","line":30,"column":21,"nodeType":"121","messageId":"122","endLine":30,"endColumn":31},{"ruleId":"119","severity":1,"message":"141","line":31,"column":12,"nodeType":"121","messageId":"122","endLine":31,"endColumn":22},{"ruleId":"119","severity":1,"message":"142","line":2,"column":50,"nodeType":"121","messageId":"122","endLine":2,"endColumn":60},{"ruleId":"119","severity":1,"message":"143","line":49,"column":11,"nodeType":"121","messageId":"122","endLine":49,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":108,"column":21,"nodeType":"121","messageId":"146","endLine":108,"endColumn":27},{"ruleId":"119","severity":1,"message":"147","line":108,"column":21,"nodeType":"121","messageId":"122","endLine":108,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":177,"column":21,"nodeType":"129","endLine":177,"endColumn":44},{"ruleId":"119","severity":1,"message":"150","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"151","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"152","line":2,"column":13,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"153","line":3,"column":13,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"154","severity":2,"message":"155","line":13,"column":14,"nodeType":"156","endLine":13,"endColumn":32},{"ruleId":"154","severity":2,"message":"157","line":14,"column":14,"nodeType":"156","endLine":14,"endColumn":32},{"ruleId":"154","severity":2,"message":"158","line":15,"column":14,"nodeType":"156","endLine":15,"endColumn":32},{"ruleId":"119","severity":1,"message":"123","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"151","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"153","line":3,"column":13,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"125","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'LandingPage' is defined but never used.","'Axios' is defined but never used.","'profile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'Col' is defined but never used.","'List' is defined but never used.","'Tag' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'Pagination' is defined but never used.","'handleHashTag' is assigned a value but never used.","no-const-assign","'imgNum' is constant.","const","'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","react/jsx-no-undef","'MainCategoryButton' is not defined.","JSXIdentifier","'CurrentExhibitPage' is not defined.","'PlannedExhibitPage' is not defined.","no-global-assign","no-unsafe-negation"]