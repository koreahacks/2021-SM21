[{"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\index.js":"1","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\reportWebVitals.js":"2","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\App.js":"3","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\index.js":"5","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"6","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"7","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"8","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\Mainpage.js":"9","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\LoginPage\\LoginPage.js":"10","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\hoc\\auth.js":"11","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\user_actions.js":"12","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\user_reducer.js":"13","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"14","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"15","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"16","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"17","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"18","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"19","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\Config.js":"20","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\types.js":"21","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\HashTag.js":"22","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\Navbar.js":"23","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\SidebarData.js":"24","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\SearchResultPage\\SearchResultPage.js":"25","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\SearchResultPage\\ResultBooths.js":"26"},{"size":1071,"mtime":1610177482075,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610177482113,"results":"29","hashOfConfig":"28"},{"size":1555,"mtime":1610203106388,"results":"30","hashOfConfig":"28"},{"size":3647,"mtime":1610193185919,"results":"31","hashOfConfig":"28"},{"size":161,"mtime":1610177482067,"results":"32","hashOfConfig":"28"},{"size":7204,"mtime":1610185239849,"results":"33","hashOfConfig":"28"},{"size":3235,"mtime":1610185239821,"results":"34","hashOfConfig":"28"},{"size":7375,"mtime":1610185239760,"results":"35","hashOfConfig":"28"},{"size":780,"mtime":1610179668747,"results":"36","hashOfConfig":"28"},{"size":2339,"mtime":1610177482048,"results":"37","hashOfConfig":"28"},{"size":1499,"mtime":1610177482071,"results":"38","hashOfConfig":"28"},{"size":1121,"mtime":1610177482065,"results":"39","hashOfConfig":"28"},{"size":528,"mtime":1610177482068,"results":"40","hashOfConfig":"28"},{"size":146,"mtime":1610177482057,"results":"41","hashOfConfig":"28"},{"size":999,"mtime":1610177482086,"results":"42","hashOfConfig":"28"},{"size":1703,"mtime":1610203002358,"results":"43","hashOfConfig":"28"},{"size":1731,"mtime":1610185239941,"results":"44","hashOfConfig":"28"},{"size":1823,"mtime":1610177482089,"results":"45","hashOfConfig":"28"},{"size":1707,"mtime":1610183433878,"results":"46","hashOfConfig":"28"},{"size":58,"mtime":1610177482037,"results":"47","hashOfConfig":"28"},{"size":170,"mtime":1610177482063,"results":"48","hashOfConfig":"28"},{"size":3915,"mtime":1610179740580,"results":"49","hashOfConfig":"28"},{"size":2740,"mtime":1610201939197,"results":"50","hashOfConfig":"28"},{"size":1314,"mtime":1610185684534,"results":"51","hashOfConfig":"28"},{"size":1538,"mtime":1610185239809,"results":"52","hashOfConfig":"28"},{"size":20018,"mtime":1610192797205,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1wdw06l",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\index.js",[],["116","117"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\App.js",["118","119","120"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\RegisterPage\\RegisterPage.js",["121"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\index.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["122","123","124","125"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                {/*  해시태그 */ }\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["126","127"],"import React , {useEffect, useState} from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport Comment from './Sections/Comment'\r\nimport axios from 'axios'\r\n\r\nfunction VideoDetailPage(props){\r\n    const videoId = props.match.params.videoId\r\n    const [Video, setVideo]=useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n\r\n    const videoVariable = {videoId : videoId}\r\n\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/video/getVideoDetail', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setVideo(response.data.video)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n        axios.post('/api/comment/getComments', videoVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments',response.data.comments)\r\n                    setCommentLists(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    \r\n    \r\n      }, [])\r\n\r\n    return(\r\n        <Row gutter={[16,16]}>\r\n            <Col lg={18} xs={32}>\r\n                <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n                    <video style={{width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} />\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={<h2>{Video.title}</h2>} />\r\n                            조회수 {Video.views}회\r\n                            <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                    </List.Item>\r\n                    {/* <List.Item\r\n                        actions={[<LikeDislikes video videoId={videoId} \r\n                            userId={localStorage.getItem('userId')}  />,\r\n                            <Subscriber usetTo={Video.writer._id} \r\n                            userFrom={localStorage.getItem('userId')}/>]}>\r\n                    \r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                            description={Video.writer.name}\r\n                            />\r\n                    </List.Item> */}\r\n                        <List.Item.Meta\r\n                            style={{ marginLeft:'3rem' }}\r\n                            description={Video.description}\r\n                        />\r\n                    {Video.startDate} ~ {Video.endDate}\r\n                    <Tag style={{ marginLeft:'3rem'}}>\r\n                        {Image.tag !== '' && (<div>{Image.tags}해시태그자리</div>)}\r\n                    </Tag><hr/>\r\n                    {/* <Comment CommentList={CommentLists} postId={Video._id} refreshFunction={updateComment}/> */}\r\n                </div>\r\n            </Col>\r\n            <Col lg={6} xs={24}>\r\n                {/* <SideVideo /> */}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default VideoDetailPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["128","129"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport HashTag from '../HashTag';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nvar imgNum = -1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [hashtag, setHashTag] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const handleHashTag = (event) => {\r\n        setHashTag(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            category: Categories,\r\n            tags:hashtag,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 ~`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n\r\n            <Form onSubmit>\r\n            <Input style={{border:'white'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>이미지 추가</Button>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <button onClick> ◀ </button>\r\n                <button onClick> ▶ </button>\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag onChange={handleHashTag} value={hashtag}/><br/><br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\Mainpage.js",["130","131"],"import React, { Component, useState } from \"react\";\r\n\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\hoc\\auth.js",["132"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["133","134"],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["135","136","137"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossorigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><image src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><image src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><image src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><image src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["138"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\Config.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\_actions\\types.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\HashTag.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\NavBar\\SidebarData.js",["139","140","141"],"import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Home',\r\n        path:'/',\r\n        icon:<AiIcons.AiFillHome style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스생성',\r\n        path:'/video/upload',\r\n        icon:<GiIcons.GiGearHammer style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스편집',\r\n        path:'/',\r\n        icon:<BiIcons.BiEdit style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'업로드',\r\n        path:\"/\",\r\n        icon:<FiIcons.FiUpload style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:\"nav-text\"\r\n    },\r\n    {\r\n        title:'라이브 시작',\r\n        path:'/',\r\n        icon:<RiIcons.RiLiveFill style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    }\r\n]","C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\SM-PC\\Desktop\\2021-SM21\\moa\\client\\src\\SearchResultPage\\ResultBooths.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Divider, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Meta } = Card;\r\n//날짜를 0000-00-00 이런식으로 필터링 해줄것\r\n//정렬 추천순은 좋아요가 없어서 구현 안됨\r\nfunction ResultBooths(props) {\r\n\r\n    //state\r\n    const [Booths, setBooths] = useState([]);\r\n    const [Video, setVideo] = useState([]);\r\n    const [Image, setImage] = useState([])\r\n\r\n    let searched = []\r\n\r\n    useEffect(() => {\r\n\r\n        const body = {\r\n            query: \"test\"\r\n        }\r\n\r\n        //검색된 부스 가져오기\r\n        axios.post(\"/api/booth/getBooth/search\", body)\r\n            .then(response => {\r\n                searched = searched.concat(response.data.booth)\r\n                console.log(\"searched\", searched)\r\n\r\n                if (searched.length !== 0) {\r\n                    //console.log(\"in if\")\r\n                    setBooths(searched)\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error message\", err.message)\r\n            })\r\n\r\n        //비디오 가져오기\r\n        axios.post('/api/video/getVidoes', body)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(\"현재 비디오\", res.data);\r\n                    setVideo(res.data.videos)\r\n                } else {\r\n                    alert(\"현재 전시 비디오 가져오기를 실패했습니다.\")\r\n                }\r\n            })\r\n\r\n        axios.get('/api/image/getImages')\r\n            .then(response => {\r\n              if(response.data.success){\r\n                  setImage(response.data.images)\r\n              }else{\r\n                alert('image 가져오기를 실패했습니다.');\r\n              }\r\n            })\r\n\r\n    }, [props.alignType])\r\n\r\n    const renderCards = Video.map((video, index)=>{\r\n        return <Col key={index}>\r\n            <div>\r\n                <img style={{width:'100%'}} src />\r\n                <div style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                    color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                    padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                    fontWeight:'500', lineHeight:'12px'}}>\r\n                        {/* 동영상 분 초 보여주기 */}\r\n                    </div>\r\n            </div>\r\n            <Meta avatar={\r\n                <Avatar src />\r\n            }\r\n            title={video.title}\r\n            />\r\n            <span>{video.writer.name}</span><br />\r\n            <span style={{marginLeft:'3rem'}}>{video.views}</span>\r\n            - <span> {moment(video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n        </Col>\r\n    })\r\n    const renderImageCards = Image.map((image, index)=>{\r\n        return <div></div>\r\n    })\r\n\r\n    //현재, 예정, 지난 부스로 구분\r\n    const sortBooths = (sort) => {\r\n        var i = 0;\r\n        var now = new Date();\r\n\r\n        if (Booths.length === 0) {\r\n            return \"err\"\r\n        }\r\n\r\n        switch (sort) {\r\n            case \"current\":\r\n                var current = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (start.getTime() < now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    } else if (start.getTime() === now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", current)\r\n                return current\r\n\r\n            case \"past\":\r\n                var past = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (end.getTime() < now.getTime()) { return v }\r\n                })\r\n                console.log(sort, \"booths\", past)\r\n                return past\r\n\r\n            case \"future\":\r\n                var future = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n\r\n                    if (start.getTime() > now.getTime()) {\r\n                        return v;\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", future)\r\n                return future\r\n        }\r\n\r\n    }\r\n\r\n    //비디오 정렬 및 레이아웃 생성\r\n    const alignVideo = () => {\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                break;\r\n            case \"date\":\r\n                Video.sort(function (a, b) {\r\n                    return a.createAt < b.createAt ? -1 : a.createAt > b.createAt ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                Video.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n\r\n        const renderCards = Video.map((video, index)=>{\r\n            var minutes = Math.floor(video.duration / 60);\r\n            var seconds = Math.floor(video.duration - minutes * 60);\r\n        \r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/video/${video._id}`} >\r\n                        <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                            <span>{minutes} : {seconds}</span>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={video.writer.image} />\r\n                        }\r\n                        title={video.title}\r\n                    />\r\n                    <span>{video.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {video.views}</span>\r\n                    - <span> {moment(video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n          const renderImageCards = Image.map((image, index)=>{\r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/post/${image._id}`} >\r\n                        <img style={{ width: '100%' }} src={`http://localhost:5000/${image.filePath[0]}`}/>\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={image.writer.image} />\r\n                        }\r\n                        title={image.title}\r\n                    />\r\n                    <span>{image.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {image.views}</span>\r\n                    - <span> {moment(image.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n    }\r\n\r\n    //부스 정렬\r\n    const alignBooths = (booths) => {\r\n        console.log(\"align Booths\", booths)\r\n        if (booths === \"err\") { return \"err\" }\r\n\r\n        console.log(\"change Align\", props.alignType)\r\n\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                booths.sort(function (a, b) {\r\n\r\n                    var aLike = 0\r\n                    var bLike = 0\r\n\r\n                    let body = {\r\n                        boothId: a._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            aLike = res.data.likes.length\r\n                        })\r\n\r\n                    body = {\r\n                        boothId: b._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            bLike = res.data.likes.length\r\n                        })\r\n\r\n\r\n                })\r\n                break;\r\n            case \"date\":\r\n                booths.sort(function (a, b) {\r\n                    let aDate = new Date(a.boothStart)\r\n                    let bDate = new Date(b.boothStart)\r\n\r\n                    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                booths.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n        return booths\r\n    }\r\n\r\n    //부스 레이아웃 잡기\r\n    const boothsLayout = (sort) => {\r\n        var i = 0;\r\n        var boothCards = [];\r\n        var _booths = [];\r\n\r\n        if (sort === \"current\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else if (sort === \"future\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        }\r\n\r\n\r\n        console.log(\"_booths\", _booths)\r\n\r\n        if (_booths === \"err\") {\r\n            return\r\n        }\r\n\r\n        while (i < _booths.length) {\r\n\r\n            if (_booths.length - i > 3) {\r\n\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 3].title} src={_booths[i + 3].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 3].title}</p>\r\n                                <p>{_booths[i + 3].boothStart} ~ {_booths[i + 3].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 3) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 2) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 1) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            i = i + 4;\r\n        };\r\n        return boothCards;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>비디오</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {alignVideo()}{renderCards}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>현재 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"current\")}{renderImageCards}\r\n                </div>\r\n            </div>\r\n\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>예정 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"future\")}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>지난 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"past\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultBooths;",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":17,"nodeType":"165","messageId":"166","endLine":2,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":24},{"ruleId":"168","severity":2,"message":"169","line":22,"column":60,"nodeType":"165","messageId":"170","endLine":22,"endColumn":73},{"ruleId":"171","severity":1,"message":"172","line":88,"column":17,"nodeType":"173","endLine":88,"endColumn":76},{"ruleId":"163","severity":1,"message":"174","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"175","line":29,"column":23,"nodeType":"165","messageId":"166","endLine":29,"endColumn":35},{"ruleId":"163","severity":1,"message":"176","line":30,"column":21,"nodeType":"165","messageId":"166","endLine":30,"endColumn":31},{"ruleId":"163","severity":1,"message":"177","line":31,"column":12,"nodeType":"165","messageId":"166","endLine":31,"endColumn":22},{"ruleId":"163","severity":1,"message":"178","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":39,"column":10,"nodeType":"181","endLine":39,"endColumn":12,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"183","line":109,"column":21,"nodeType":"165","messageId":"166","endLine":109,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":177,"column":21,"nodeType":"173","endLine":177,"endColumn":44},{"ruleId":"163","severity":1,"message":"186","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"187","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":6,"column":1,"nodeType":"190","endLine":42,"endColumn":2},{"ruleId":"163","severity":1,"message":"191","line":3,"column":13,"nodeType":"165","messageId":"166","endLine":3,"endColumn":20},{"ruleId":"163","severity":1,"message":"192","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":21},{"ruleId":"163","severity":1,"message":"193","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":33},{"ruleId":"163","severity":1,"message":"194","line":10,"column":9,"nodeType":"165","messageId":"166","endLine":10,"endColumn":14},{"ruleId":"163","severity":1,"message":"195","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"163","severity":1,"message":"196","line":7,"column":11,"nodeType":"165","messageId":"166","endLine":7,"endColumn":19},{"ruleId":"163","severity":1,"message":"197","line":2,"column":13,"nodeType":"165","messageId":"166","endLine":2,"endColumn":20},{"ruleId":"163","severity":1,"message":"198","line":4,"column":13,"nodeType":"165","messageId":"166","endLine":4,"endColumn":20},{"ruleId":"163","severity":1,"message":"199","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":16},{"ruleId":"179","severity":1,"message":"200","line":29,"column":28,"nodeType":"201","endLine":29,"endColumn":64},{"ruleId":"163","severity":1,"message":"202","line":64,"column":11,"nodeType":"165","messageId":"166","endLine":64,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":67,"column":17,"nodeType":"173","endLine":67,"endColumn":51},{"ruleId":"163","severity":1,"message":"203","line":85,"column":11,"nodeType":"165","messageId":"166","endLine":85,"endColumn":27},{"ruleId":"163","severity":1,"message":"204","line":91,"column":13,"nodeType":"165","messageId":"166","endLine":91,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":98,"column":9,"nodeType":"207","messageId":"208","endLine":141,"endColumn":10},{"ruleId":"209","severity":1,"message":"210","line":100,"column":49,"nodeType":"211","messageId":"212","endLine":100,"endColumn":51},{"ruleId":"209","severity":1,"message":"210","line":122,"column":46,"nodeType":"211","messageId":"212","endLine":122,"endColumn":48},{"ruleId":"163","severity":1,"message":"213","line":123,"column":25,"nodeType":"165","messageId":"166","endLine":123,"endColumn":30},{"ruleId":"209","severity":1,"message":"210","line":132,"column":48,"nodeType":"211","messageId":"212","endLine":132,"endColumn":50},{"ruleId":"205","severity":1,"message":"206","line":147,"column":9,"nodeType":"207","messageId":"208","endLine":160,"endColumn":10},{"ruleId":"205","severity":1,"message":"206","line":204,"column":9,"nodeType":"207","messageId":"208","endLine":245,"endColumn":10},{"ruleId":"209","severity":1,"message":"214","line":206,"column":29,"nodeType":"215","messageId":"216","endLine":206,"endColumn":38},{"ruleId":"163","severity":1,"message":"217","line":217,"column":29,"nodeType":"165","messageId":"166","endLine":217,"endColumn":34},{"ruleId":"163","severity":1,"message":"218","line":226,"column":29,"nodeType":"165","messageId":"166","endLine":226,"endColumn":34},{"ruleId":"219","severity":1,"message":"220","line":259,"column":17,"nodeType":"165","messageId":"221","endLine":259,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":262,"column":17,"nodeType":"165","messageId":"221","endLine":262,"endColumn":20},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'SearchResultPage' is defined but never used.","no-undef","'BroadCastForm' is not defined.","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoVariable'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'BiIcons' is defined but never used.","'liveVideo' is assigned a value but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'settings' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Mainpage' is defined but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'renderCards' is assigned a value but never used.","'renderImageCards' is assigned a value but never used.","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'start' is assigned a value but never used.","Array.prototype.sort() expects a return value from function.","FunctionExpression","expectedInside","'aLike' is assigned a value but never used.","'bLike' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [videoVariable]",{"range":"227","text":"228"},[1310,1312],"[videoVariable]"]