[{"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"4","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"6","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"7","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"8","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"9","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"10","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"11","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"12","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"13","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"14","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"15","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"16","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"17","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"18","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"19","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"20","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"21","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"22","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"23","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"24","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"25","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"26","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js":"27","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"28","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"29","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"30","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"31","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"32","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js":"33","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js":"34","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js":"35"},{"size":1071,"mtime":1610173826664,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1610159670533,"results":"38","hashOfConfig":"37"},{"size":1993,"mtime":1610206655065,"results":"39","hashOfConfig":"37"},{"size":161,"mtime":1610173826660,"results":"40","hashOfConfig":"37"},{"size":3647,"mtime":1610199708010,"results":"41","hashOfConfig":"37"},{"size":780,"mtime":1610173826685,"results":"42","hashOfConfig":"37"},{"size":3190,"mtime":1610204196096,"results":"43","hashOfConfig":"37"},{"size":7837,"mtime":1610201060534,"results":"44","hashOfConfig":"37"},{"size":7915,"mtime":1610201029470,"results":"45","hashOfConfig":"37"},{"size":1538,"mtime":1610182279505,"results":"46","hashOfConfig":"37"},{"size":1499,"mtime":1610165925527,"results":"47","hashOfConfig":"37"},{"size":2740,"mtime":1610199700119,"results":"48","hashOfConfig":"37"},{"size":2424,"mtime":1610199568145,"results":"49","hashOfConfig":"37"},{"size":5472,"mtime":1610199568138,"results":"50","hashOfConfig":"37"},{"size":7499,"mtime":1610199568134,"results":"51","hashOfConfig":"37"},{"size":6083,"mtime":1610200676355,"results":"52","hashOfConfig":"37"},{"size":528,"mtime":1610173826662,"results":"53","hashOfConfig":"37"},{"size":1121,"mtime":1610173826656,"results":"54","hashOfConfig":"37"},{"size":2339,"mtime":1610201486647,"results":"55","hashOfConfig":"37"},{"size":18965,"mtime":1610197847071,"results":"56","hashOfConfig":"37"},{"size":999,"mtime":1610173826861,"results":"57","hashOfConfig":"37"},{"size":1106,"mtime":1610173826868,"results":"58","hashOfConfig":"37"},{"size":1823,"mtime":1610173826847,"results":"59","hashOfConfig":"37"},{"size":1707,"mtime":1610197013737,"results":"60","hashOfConfig":"37"},{"size":2804,"mtime":1610196666011,"results":"61","hashOfConfig":"37"},{"size":1762,"mtime":1610192179414,"results":"62","hashOfConfig":"37"},{"size":5399,"mtime":1610204084129,"results":"63","hashOfConfig":"37"},{"size":2505,"mtime":1610209327885,"results":"64","hashOfConfig":"37"},{"size":1314,"mtime":1610197013718,"results":"65","hashOfConfig":"37"},{"size":1723,"mtime":1610199568152,"results":"66","hashOfConfig":"37"},{"size":58,"mtime":1610173826646,"results":"67","hashOfConfig":"37"},{"size":170,"mtime":1610165916739,"results":"68","hashOfConfig":"37"},{"size":1810,"mtime":1610192533114,"results":"69","hashOfConfig":"37"},{"size":2752,"mtime":1610192287735,"results":"70","hashOfConfig":"37"},{"size":3817,"mtime":1610209024164,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1osx21h",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],["155","156"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["157"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../_actions/user_actions';\r\n\r\n\r\nfunction RegisterPage(props) {\r\n    //디스패치 함수 가져오기\r\n    const dispatch = useDispatch();\r\n\r\n    //state 설정\r\n    const [email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert(\"비밀번호와 비밀번호 확인은 같아야 합니다.\")\r\n        }\r\n\r\n        //서버로 전달할 state값을 모은 객체\r\n        let body = {\r\n            email: email,\r\n            password: Password,\r\n            name: Name,\r\n        }\r\n\r\n        //서버로 전달할 임시 프로필 객체\r\n        const profile = {\r\n            email: email,\r\n            nickName: Name,\r\n            profileImg: \"\",\r\n            content: \"\",\r\n        }\r\n\r\n        //임시 프로필 저장\r\n        axios.post('/api/profile/saveProfile', profile)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n        //디스패치\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    //submit시 로그인 페이지로 이동\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>이메일</label>\r\n                <Input value={email} placeholder=\"아이디\" onChange={onEmailHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"비밀번호 확인\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["158","159","160","161"],"import React, { Component, useState } from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["162"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["163","164"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["165","166","167"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["168"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["169","170","171","172"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Tag } from 'antd';\r\n// import ChatPage from '../LiveChatPage/ChatPage';\r\n// import Subscribe from '../../VideoDetailPage/Section/Subscribe';\r\n// import LiveLike from '../Sections/LiveLike';\r\nimport '../BroadCastPage/BroadCastPage.css'\r\nimport Axios from 'axios'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction LiveVideoPage(props) {\r\n\r\n    const liveId = props.match.params.liveId;\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    let peerConnection;\r\n    const config = {\r\n        iceServers: [\r\n            { \r\n              \"urls\": \"stun:stun.l.google.com:19302\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetail', { liveId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"offer\", (id, description) => {\r\n            peerConnection = new RTCPeerConnection(config);\r\n            peerConnection\r\n                .setRemoteDescription(description)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"answer\", id, peerConnection.localDescription)\r\n                })\r\n            peerConnection.ontrack = e => {\r\n                \r\n                videoRef.current.srcObject = e.streams[0];\r\n                       \r\n                console.log(\"offer\")\r\n            }\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate)\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(candidate))\r\n                .catch(e => console.error(e))\r\n        })\r\n        \r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcaster\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n            peerConnection.close();\r\n        }\r\n    }, [window])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (liveDetail.writer._id !== localStorage.getItem('userId')) && (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        // const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                    <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls /> \r\n                    <div>\r\n                        <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                        <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                            <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                            {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveId} /> */}\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    <List.Item\r\n                            // actions={[<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                title={liveDetail.writer.name}\r\n                                description={liveDetail.description}\r\n                            />\r\n                    </List.Item>\r\n                    <div>{tagChild}</div>\r\n                    <br />\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                        {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   else {\r\n        return (\r\n            <div>...</div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default LiveVideoPage\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Skeleton, Tag, Button } from 'antd';\r\nimport './BroadCastPage.css';\r\nimport Axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction BroadCastPage(props) {\r\n\r\n    let broadcasterId = localStorage.getItem('userId');\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    const [peerConnections, setPeerConnections] = useState({});\r\n    const [stream, setStream] = useState();\r\n    const [numberOfViewers, setNumberOfViewers] = useState(0);\r\n\r\n    const config = {\r\n        iceServers: [\r\n          {\r\n            urls: [\"stun:stun.l.google.com:19302\"],\r\n          },\r\n        ],\r\n    };\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetailByBroadcaster', { broadcasterId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"watcher\", (id) => {\r\n            const peerConnection = new RTCPeerConnection(config);\r\n            setPeerConnections(peerConnections[id] = peerConnection);\r\n            console.log(peerConnections);\r\n\r\n            let stream = videoRef.current.srcObject;\r\n            stream\r\n                .getTracks()\r\n                .forEach((track) => peerConnection.addTrack(track, stream));\r\n\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate);\r\n                }\r\n            }\r\n\r\n            peerConnection\r\n                .createOffer()\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                })\r\n\r\n            setNumberOfViewers(Object.keys(peerConnections).length)\r\n        })\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"answer\", (id, description) => {\r\n            peerConnections[id].setRemoteDescription(description);\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"disconnectPeer\", (id) => {\r\n            peerConnections[id].close();\r\n            delete peerConnections[id];\r\n            setNumberOfViewers(Object.keys(peerConnections).length);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n        }\r\n    }, [window])\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n            setStream(stream);\r\n            \r\n            videoRef.current.srcObject = stream;\r\n            socket.emit(\"broadcaster\");\r\n        })\r\n\r\n    }, [])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const handleLiveClose = () => {\r\n        Axios.post('/api/liveVideo/removeLiveData', { broadcasterId })\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                alert(\"라이브가 종료되었습니다.\")\r\n                window.location.href='/'\r\n                \r\n\r\n            } else {\r\n                alert(\"라이브 종료를 실패했습니다. \")\r\n            }\r\n        })\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <div>\r\n                            <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                            <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                                <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                                {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveDetail._id} /> */}\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                        \r\n                        <List.Item\r\n                            actions={[\r\n                                // <Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />,\r\n                                <Button \r\n                                    style={{ backgroundColor: '#48bcec', borderRadius: '4px',\r\n                                        color: 'white', padding: '5px 16px', borderStyle: 'none',\r\n                                        fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase', cursor: 'pointer' }}\r\n                                        onClick={handleLiveClose}>\r\n                                        라이브 종료\r\n                                </Button>\r\n                                    ]}\r\n                        >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                    title={liveDetail.writer.name}\r\n                                    description={liveDetail.description}\r\n                                    \r\n                                />\r\n                        </List.Item>\r\n                        <div>{tagChild}</div>\r\n                        <br />\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ width: '1263px'}}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <Skeleton avatar paragraph={{ rows: 4 }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BroadCastPage","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["182"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",["183"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Divider, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Meta } = Card;\r\n//날짜를 0000-00-00 이런식으로 필터링 해줄것\r\n//정렬 추천순은 좋아요가 없어서 구현 안됨\r\nfunction ResultBooths(props) {\r\n\r\n    //state\r\n    const [Booths, setBooths] = useState([]);\r\n    const [Video, setVideo] = useState([]);\r\n    const [Image, setImage] = useState([])\r\n\r\n    let searched = []\r\n\r\n    useEffect(() => {\r\n\r\n        const body = {\r\n            query: \"test\"\r\n        }\r\n\r\n        //검색된 부스 가져오기\r\n        axios.post(\"/api/booth/getBooth/search\", body)\r\n            .then(response => {\r\n                searched = searched.concat(response.data.booth)\r\n                console.log(\"searched\", searched)\r\n\r\n                if (searched.length !== 0) {\r\n                    //console.log(\"in if\")\r\n                    setBooths(searched)\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error message\", err.message)\r\n            })\r\n\r\n        //비디오 가져오기\r\n        axios.get('/api/video/getVideos', body)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(\"현재 비디오\", res.data);\r\n                    setVideo(res.data.videos)\r\n                } else {\r\n                    alert(\"현재 전시 비디오 가져오기를 실패했습니다.\")\r\n                }\r\n            })\r\n\r\n        axios.get('/api/image/getImages')\r\n            .then(response => {\r\n              if(response.data.success){\r\n                  setImage(response.data.images)\r\n              }else{\r\n                alert('image 가져오기를 실패했습니다.');\r\n              }\r\n            })\r\n\r\n    }, [props.alignType])\r\n\r\n    //현재, 예정, 지난 부스로 구분\r\n    const sortBooths = (sort) => {\r\n        var i = 0;\r\n        var now = new Date();\r\n\r\n        if (Booths.length === 0) {\r\n            return \"err\"\r\n        }\r\n\r\n        switch (sort) {\r\n            case \"current\":\r\n                var current = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (start.getTime() < now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    } else if (start.getTime() === now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", current)\r\n                return current\r\n\r\n            case \"past\":\r\n                var past = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n                    var end = new Date(v.boothEnd)\r\n\r\n                    if (end.getTime() < now.getTime()) { return v }\r\n                })\r\n                console.log(sort, \"booths\", past)\r\n                return past\r\n\r\n            case \"future\":\r\n                var future = Booths.filter((v) => {\r\n                    var start = new Date(v.boothStart)\r\n\r\n                    if (start.getTime() > now.getTime()) {\r\n                        return v;\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", future)\r\n                return future\r\n        }\r\n\r\n    }\r\n\r\n    //비디오 정렬 및 레이아웃 생성\r\n    const alignVideo = () => {\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                break;\r\n            case \"date\":\r\n                Video.sort(function (a, b) {\r\n                    return a.createAt < b.createAt ? -1 : a.createAt > b.createAt ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                Video.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n    }\r\n        const renderCards = Video.map((video, index)=>{\r\n            var minutes = Math.floor(video.duration / 60);\r\n            var seconds = Math.floor(video.duration - minutes * 60);\r\n        \r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/video/${video._id}`} >\r\n                        <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                            <span>{minutes} : {seconds}</span>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={video.writer.image} />\r\n                        }\r\n                        title={video.title}\r\n                    />\r\n                    <span>{video.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {video.views}</span>\r\n                    - <span> {moment(video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n          const renderImageCards = Image.map((image, index)=>{\r\n            return <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/post/${image._id}`} >\r\n                        <img style={{ width: '100%' }} src={`http://localhost:5000/${image.filePath[0]}`}/>\r\n                        <div className=\" duration\"\r\n                            style={{ bottom: 0, right:0, position: 'absolute', margin: '4px',\r\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                            padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                            fontWeight:'500', lineHeight:'12px' }}>\r\n                        </div>\r\n                        </a>\r\n                    </div><br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={image.writer.image} />\r\n                        }\r\n                        title={image.title}\r\n                    />\r\n                    <span>{image.writer.name} </span><br />\r\n                    <span style={{ marginLeft: '3rem' }}> {image.views}</span>\r\n                    - <span> {moment(image.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n                </Col>\r\n          })\r\n\r\n    //부스 정렬\r\n    const alignBooths = (booths) => {\r\n        console.log(\"align Booths\", booths)\r\n        if (booths === \"err\") { return \"err\" }\r\n\r\n        console.log(\"change Align\", props.alignType)\r\n\r\n        switch (props.alignType) {\r\n            case \"recommend\":\r\n                booths.sort(function (a, b) {\r\n\r\n                    var aLike = 0\r\n                    var bLike = 0\r\n\r\n                    let body = {\r\n                        boothId: a._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            aLike = res.data.likes.length\r\n                        })\r\n\r\n                    body = {\r\n                        boothId: b._id\r\n                    }\r\n\r\n                    axios.post('api/like/getLikes', body)\r\n                        .then(res => {\r\n                            bLike = res.data.likes.length\r\n                        })\r\n\r\n\r\n                })\r\n                break;\r\n            case \"date\":\r\n                booths.sort(function (a, b) {\r\n                    let aDate = new Date(a.boothStart)\r\n                    let bDate = new Date(b.boothStart)\r\n\r\n                    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                booths.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n        return booths\r\n    }\r\n\r\n    //부스 레이아웃 잡기\r\n    const boothsLayout = (sort) => {\r\n        var i = 0;\r\n        var boothCards = [];\r\n        var _booths = [];\r\n\r\n        if (sort === \"current\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else if (sort === \"future\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        }\r\n\r\n\r\n        console.log(\"_booths\", _booths)\r\n\r\n        if (_booths === \"err\") {\r\n            return\r\n        }\r\n\r\n        while (i < _booths.length) {\r\n\r\n            if (_booths.length - i > 3) {\r\n\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 3].title} src={_booths[i + 3].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 3].title}</p>\r\n                                <p>{_booths[i + 3].boothStart} ~ {_booths[i + 3].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 3) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i + 2].boothStart} ~ {_booths[i + 2].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 2) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i + 1].boothStart} ~ {_booths[i + 1].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 1) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].boothStart} ~ {_booths[i].boothEnd}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            i = i + 4;\r\n        };\r\n        return boothCards;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>비디오</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {alignVideo()}{renderCards}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>현재 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"current\")}{renderImageCards}\r\n                </div>\r\n            </div>\r\n\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>예정 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"future\")}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>지난 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"past\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultBooths;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["199","200","201","202"],"import React, { useEffect, useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Axios from 'axios';\r\nimport '../Mainpage.css';\r\n\r\nfunction MainLivePage(){\r\n    return (\r\n        <div className='mainpage_below' style={{textAlign:'center', backgroundSize:'cover'}} height=\"100vh\">\r\n            \r\n            <p className=\"streamlive\">실시간 방송 LIVE</p>\r\n            <p className=\"meetinlive\">전국의 대학생 활동을 라이브 방송으로 만나보세요</p>\r\n            <AiIcons.AiOutlineLeftSquare size=\"40\" color=\"#C692B8\"  className=\"livevideoleft\"/>\r\n            <AiIcons.AiFillRightSquare size=\"40\" color=\"#C692B8\" className=\"livevideoright\"/>\r\n            <span id=\"#livevideo\" className=\"livevideo\" style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                \r\n                {/* {liveRenderCards} */}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainLivePage;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["203"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["204","205"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Subscriber(props) {\r\n    const userTo = props.userTo\r\n    const userFrom = props.userFrom\r\n    const [ SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [ Subscribed, setSubscribed] = useState(false)\r\n\r\n    const onSubscribe = ( ) => {\r\n\r\n        let subscribeVariables = {\r\n                userTo : userTo,\r\n                userFrom : userFrom\r\n        }\r\n\r\n        if(Subscribed) {\r\n            //when we are already subscribed \r\n            axios.post('/api/subscribe/unSubscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success){ \r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to unsubscribe')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n            \r\n            axios.post('/api/subscribe/subscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to subscribe')\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom }\r\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('Failed to get subscriber Number')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subcribed)\r\n                } else {\r\n                    alert('Failed to get Subscribed Information')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick\r\n                    style={{\r\n                        backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\r\n                        borderRadius: '4px', color: 'white',\r\n                        padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n                    }}>\r\n                        {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n                    </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriber\r\n","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js",["206","207","208"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["209","210"],"import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Home',\r\n        path:'/',\r\n        icon:<AiIcons.AiFillHome style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스생성',\r\n        path:'/video/upload',\r\n        icon:<GiIcons.GiGearHammer style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스편집',\r\n        path:'/',\r\n        icon:<BiIcons.BiEdit style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'업로드',\r\n        path:\"/\",\r\n        icon:<FiIcons.FiUpload style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:\"nav-text\"\r\n    },\r\n    {\r\n        title:'라이브 시작',\r\n        path:'/',\r\n        icon:<RiIcons.RiLiveFill style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    }\r\n]","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["211","212","213","214","215","216","217"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossOrigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><img src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><img src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><img src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><img src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js",["218"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js",["219","220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":88,"column":17,"nodeType":"227","endLine":88,"endColumn":76},{"ruleId":"228","severity":1,"message":"229","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"232","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"233","line":2,"column":13,"nodeType":"230","messageId":"231","endLine":2,"endColumn":20},{"ruleId":"228","severity":1,"message":"234","line":3,"column":13,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":39,"column":6,"nodeType":"237","endLine":39,"endColumn":8,"suggestions":"238"},{"ruleId":"228","severity":1,"message":"239","line":110,"column":21,"nodeType":"230","messageId":"231","endLine":110,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":187,"column":21,"nodeType":"227","endLine":187,"endColumn":44},{"ruleId":"228","severity":1,"message":"242","line":30,"column":23,"nodeType":"230","messageId":"231","endLine":30,"endColumn":35},{"ruleId":"228","severity":1,"message":"243","line":31,"column":21,"nodeType":"230","messageId":"231","endLine":31,"endColumn":31},{"ruleId":"228","severity":1,"message":"244","line":32,"column":12,"nodeType":"230","messageId":"231","endLine":32,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":6,"column":1,"nodeType":"247","endLine":42,"endColumn":2},{"ruleId":"235","severity":1,"message":"248","line":37,"column":8,"nodeType":"237","endLine":37,"endColumn":10,"suggestions":"249"},{"ruleId":"235","severity":1,"message":"250","line":41,"column":30,"nodeType":"251","endLine":41,"endColumn":59},{"ruleId":"235","severity":1,"message":"252","line":70,"column":8,"nodeType":"237","endLine":70,"endColumn":16,"suggestions":"253"},{"ruleId":"235","severity":1,"message":"254","line":89,"column":8,"nodeType":"237","endLine":89,"endColumn":16,"suggestions":"255"},{"ruleId":"228","severity":1,"message":"256","line":13,"column":12,"nodeType":"230","messageId":"231","endLine":13,"endColumn":18},{"ruleId":"228","severity":1,"message":"257","line":14,"column":12,"nodeType":"230","messageId":"231","endLine":14,"endColumn":27},{"ruleId":"235","severity":1,"message":"258","line":36,"column":8,"nodeType":"237","endLine":36,"endColumn":10,"suggestions":"259"},{"ruleId":"235","severity":1,"message":"260","line":65,"column":8,"nodeType":"237","endLine":65,"endColumn":16,"suggestions":"261"},{"ruleId":"235","severity":1,"message":"262","line":71,"column":8,"nodeType":"237","endLine":71,"endColumn":16,"suggestions":"263"},{"ruleId":"235","severity":1,"message":"262","line":77,"column":8,"nodeType":"237","endLine":77,"endColumn":16,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"265","line":85,"column":8,"nodeType":"237","endLine":85,"endColumn":10,"suggestions":"266"},{"ruleId":"235","severity":1,"message":"267","line":91,"column":8,"nodeType":"237","endLine":91,"endColumn":16,"suggestions":"268"},{"ruleId":"235","severity":1,"message":"269","line":101,"column":8,"nodeType":"237","endLine":101,"endColumn":10,"suggestions":"270"},{"ruleId":"228","severity":1,"message":"271","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":20},{"ruleId":"235","severity":1,"message":"272","line":62,"column":8,"nodeType":"237","endLine":62,"endColumn":22,"suggestions":"273"},{"ruleId":"235","severity":1,"message":"274","line":28,"column":28,"nodeType":"275","endLine":28,"endColumn":64},{"ruleId":"228","severity":1,"message":"276","line":65,"column":13,"nodeType":"230","messageId":"231","endLine":65,"endColumn":14},{"ruleId":"277","severity":1,"message":"278","line":72,"column":9,"nodeType":"279","messageId":"280","endLine":115,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":74,"column":49,"nodeType":"283","messageId":"284","endLine":74,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":96,"column":46,"nodeType":"283","messageId":"284","endLine":96,"endColumn":48},{"ruleId":"228","severity":1,"message":"285","line":97,"column":25,"nodeType":"230","messageId":"231","endLine":97,"endColumn":30},{"ruleId":"281","severity":1,"message":"282","line":106,"column":48,"nodeType":"283","messageId":"284","endLine":106,"endColumn":50},{"ruleId":"277","severity":1,"message":"278","line":121,"column":9,"nodeType":"279","messageId":"280","endLine":134,"endColumn":10},{"ruleId":"225","severity":1,"message":"226","line":168,"column":25,"nodeType":"227","endLine":168,"endColumn":108},{"ruleId":"277","severity":1,"message":"278","line":196,"column":9,"nodeType":"279","messageId":"280","endLine":237,"endColumn":10},{"ruleId":"281","severity":1,"message":"286","line":198,"column":29,"nodeType":"287","messageId":"288","endLine":198,"endColumn":38},{"ruleId":"228","severity":1,"message":"289","line":209,"column":29,"nodeType":"230","messageId":"231","endLine":209,"endColumn":34},{"ruleId":"228","severity":1,"message":"290","line":218,"column":29,"nodeType":"230","messageId":"231","endLine":218,"endColumn":34},{"ruleId":"291","severity":1,"message":"292","line":251,"column":17,"nodeType":"230","messageId":"293","endLine":251,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":254,"column":17,"nodeType":"230","messageId":"293","endLine":254,"endColumn":20},{"ruleId":"228","severity":1,"message":"294","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"232","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"234","line":3,"column":13,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"295","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"296","line":7,"column":11,"nodeType":"230","messageId":"231","endLine":7,"endColumn":19},{"ruleId":"228","severity":1,"message":"297","line":10,"column":11,"nodeType":"230","messageId":"231","endLine":10,"endColumn":22},{"ruleId":"235","severity":1,"message":"298","line":67,"column":8,"nodeType":"237","endLine":67,"endColumn":10,"suggestions":"299"},{"ruleId":"281","severity":1,"message":"300","line":31,"column":50,"nodeType":"283","messageId":"288","endLine":31,"endColumn":52},{"ruleId":"281","severity":1,"message":"300","line":49,"column":56,"nodeType":"283","messageId":"288","endLine":49,"endColumn":58},{"ruleId":"235","severity":1,"message":"301","line":59,"column":8,"nodeType":"237","endLine":59,"endColumn":10,"suggestions":"302"},{"ruleId":"228","severity":1,"message":"303","line":2,"column":13,"nodeType":"230","messageId":"231","endLine":2,"endColumn":20},{"ruleId":"228","severity":1,"message":"304","line":4,"column":13,"nodeType":"230","messageId":"231","endLine":4,"endColumn":20},{"ruleId":"228","severity":1,"message":"305","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":33},{"ruleId":"228","severity":1,"message":"306","line":10,"column":9,"nodeType":"230","messageId":"231","endLine":10,"endColumn":14},{"ruleId":"228","severity":1,"message":"307","line":11,"column":12,"nodeType":"230","messageId":"231","endLine":11,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":28,"column":91,"nodeType":"227","endLine":28,"endColumn":117},{"ruleId":"225","severity":1,"message":"226","line":30,"column":90,"nodeType":"227","endLine":30,"endColumn":114},{"ruleId":"225","severity":1,"message":"226","line":32,"column":90,"nodeType":"227","endLine":32,"endColumn":115},{"ruleId":"225","severity":1,"message":"226","line":34,"column":90,"nodeType":"227","endLine":34,"endColumn":114},{"ruleId":"281","severity":1,"message":"300","line":11,"column":42,"nodeType":"283","messageId":"288","endLine":11,"endColumn":44},{"ruleId":"235","severity":1,"message":"308","line":35,"column":5,"nodeType":"237","endLine":35,"endColumn":7,"suggestions":"309"},{"ruleId":"225","severity":1,"message":"226","line":68,"column":25,"nodeType":"227","endLine":68,"endColumn":80},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoVariable'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["313"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["315"],"'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.",["316"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["317"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["318"],["319"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["320"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["321"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["322"],"'withRouter' is defined but never used.","React Hook useEffect has missing dependencies: 'Tags' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["323"],"Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'start' is assigned a value but never used.","Array.prototype.sort() expects a return value from function.","FunctionExpression","expectedInside","'aLike' is assigned a value but never used.","'bLike' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","'useEffect' is defined but never used.","'Axios' is defined but never used.","'settings' is assigned a value but never used.","'onSubscribe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["324"],"Array.prototype.map() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["325"],"'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'imageId' and 'imageVariable'. Either include them or remove the dependency array.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"338","fix":"340"},{"desc":"338","fix":"341"},{"desc":"342","fix":"343"},{"desc":"342","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},"Update the dependencies array to be: [videoVariable]",{"range":"353","text":"354"},"Update the dependencies array to be: [liveId]",{"range":"355","text":"356"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"357","text":"358"},{"range":"359","text":"358"},"Update the dependencies array to be: [broadcasterId]",{"range":"360","text":"361"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"362","text":"363"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"364","text":"365"},{"range":"366","text":"365"},{"range":"367","text":"365"},"Update the dependencies array to be: [socket]",{"range":"368","text":"369"},{"range":"370","text":"369"},"Update the dependencies array to be: [InputVisible, Tags, props]",{"range":"371","text":"372"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"373","text":"374"},"Update the dependencies array to be: [props.userId, variable]",{"range":"375","text":"376"},"Update the dependencies array to be: [imageId, imageVariable]",{"range":"377","text":"378"},[1260,1262],"[videoVariable]",[1134,1136],"[liveId]",[2282,2290],"[peerConnection, socket]",[2725,2733],[1142,1144],"[broadcasterId]",[2123,2131],"[config, peerConnections, socket]",[2298,2306],"[peerConnections, socket]",[2488,2496],[2743,2745],[2879,2887],"[socket]",[3165,3167],[1569,1583],"[InputVisible, Tags, props]",[2257,2259],"[userFrom, userTo]",[2137,2139],"[props.userId, variable]",[1205,1207],"[imageId, imageVariable]"]