<<<<<<< HEAD
[{"C:\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"4","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"5","C:\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"6","C:\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"7","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"8","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"9","C:\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"10","C:\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"11","C:\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"12","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"13","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"14","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"15","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"16","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"17","C:\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"18","C:\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"19","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"20","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"21","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"22","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"23","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"24","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"25","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"26","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"27","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"28","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js":"29","C:\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js":"30","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js":"31","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js":"32","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js":"33","C:\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"34","C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\AccountInfoPage.js":"35","C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\Profile.js":"36","C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\MyBoothCards.js":"37"},{"size":1071,"mtime":1610168731366,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1610154805647,"results":"40","hashOfConfig":"39"},{"size":2010,"mtime":1610204609587,"results":"41","hashOfConfig":"39"},{"size":161,"mtime":1610169780344,"results":"42","hashOfConfig":"39"},{"size":528,"mtime":1610168729249,"results":"43","hashOfConfig":"39"},{"size":3318,"mtime":1610207358873,"results":"44","hashOfConfig":"39"},{"size":2740,"mtime":1610204335949,"results":"45","hashOfConfig":"39"},{"size":780,"mtime":1610171602316,"results":"46","hashOfConfig":"39"},{"size":7220,"mtime":1610197286214,"results":"47","hashOfConfig":"39"},{"size":7419,"mtime":1610197286197,"results":"48","hashOfConfig":"39"},{"size":1499,"mtime":1610167251898,"results":"49","hashOfConfig":"39"},{"size":1533,"mtime":1610185793130,"results":"50","hashOfConfig":"39"},{"size":2424,"mtime":1610202436615,"results":"51","hashOfConfig":"39"},{"size":7499,"mtime":1610202436610,"results":"52","hashOfConfig":"39"},{"size":6102,"mtime":1610202436607,"results":"53","hashOfConfig":"39"},{"size":2982,"mtime":1610202436622,"results":"54","hashOfConfig":"39"},{"size":5472,"mtime":1610202436612,"results":"55","hashOfConfig":"39"},{"size":16942,"mtime":1610233894734,"results":"56","hashOfConfig":"39"},{"size":3915,"mtime":1610179988854,"results":"57","hashOfConfig":"39"},{"size":999,"mtime":1610158399996,"results":"58","hashOfConfig":"39"},{"size":1106,"mtime":1610171529878,"results":"59","hashOfConfig":"39"},{"size":1707,"mtime":1610197286216,"results":"60","hashOfConfig":"39"},{"size":1823,"mtime":1610173334754,"results":"61","hashOfConfig":"39"},{"size":1121,"mtime":1610169550556,"results":"62","hashOfConfig":"39"},{"size":1723,"mtime":1610202436624,"results":"63","hashOfConfig":"39"},{"size":2804,"mtime":1610197286210,"results":"64","hashOfConfig":"39"},{"size":1762,"mtime":1610197286208,"results":"65","hashOfConfig":"39"},{"size":2398,"mtime":1610202436618,"results":"66","hashOfConfig":"39"},{"size":5395,"mtime":1610202436620,"results":"67","hashOfConfig":"39"},{"size":58,"mtime":1610170165411,"results":"68","hashOfConfig":"39"},{"size":170,"mtime":1610167251894,"results":"69","hashOfConfig":"39"},{"size":2752,"mtime":1610197286209,"results":"70","hashOfConfig":"39"},{"size":1810,"mtime":1610197286207,"results":"71","hashOfConfig":"39"},{"size":1314,"mtime":1610197286201,"results":"72","hashOfConfig":"39"},{"size":1311,"mtime":1610205069859,"results":"73","hashOfConfig":"39"},{"size":7595,"mtime":1610236112826,"results":"74","hashOfConfig":"39"},{"size":32385,"mtime":1610235981042,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1oepqr3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],["169","170"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",["171","172","173","174"],"import React, { Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Navbar from './NavBar/Navbar'\r\nimport MainPage from './mainpage/Mainpage'\r\nimport VideoUploadPage from './VideoUploadPage/VideoUploadPage'\r\nimport VideoDetailPage from './VideoDetailPage/VideoDetailPage'\r\nimport ImageUploadPage from './ImageUploadPage/ImageUploadPage'\r\nimport RegisterPage from \"./RegisterPage/RegisterPage.js\";\r\nimport LoginPage from \"./LoginPage/LoginPage\";\r\nimport SearchResultPage from \"./SearchResultPage/SearchResultPage\";\r\nimport BroadCastForm from \"./LiveVideoPage/BroadCastPage/BroadCastForm\";\r\nimport BroadCastPage from \"./LiveVideoPage/BroadCastPage/BroadCastPage\";\r\nimport LiveVideoPage from \"./LiveVideoPage/LiveVideoPage/LiveVideoPage\";\r\nimport AccountInfoPage from './AccountInfoPage/AccountInfoPage';\r\nimport Auth from \"./hoc/auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Auth(MainPage, null)} />\r\n        <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n        <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n        <Route exact path=\"/search\" component={Auth(SearchResultPage, false)} />     \r\n        <Route exact path=\"/accountInfo\" component={Auth(AccountInfoPage, true)} />     \r\n        {/* <Route exact path=\"/broadcast\" component={Auth(BroadCastPage, null)} /> */}\r\n        {/* <Route exact path=\"/broadcastform\" component={Auth(BroadCastForm, null)} /> */}\r\n        {/* <Route exact path=\"/liveVideo/:liveId\" component={Auth(LiveVideoPage, null)} /> */}\r\n        <Route exact path=\"/video/upload\" component={Auth(VideoUploadPage, null)} />\r\n        <Route exact path=\"/image/upload\" component={Auth(ImageUploadPage, null)} />\r\n        <Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\r\n        {/* <Route exact path=\"/carousel\" component={Carouseltest} /> */}\r\n      </Switch>\r\n    </div>\r\n  )}\r\nexport default App;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["175","176","177"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../_actions/user_actions';\r\n\r\n\r\nfunction RegisterPage(props) {\r\n    //디스패치 함수 가져오기\r\n    const dispatch = useDispatch();\r\n\r\n    //state 설정\r\n    const [email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert(\"비밀번호와 비밀번호 확인은 같아야 합니다.\")\r\n        }\r\n\r\n        //서버로 전달할 state값을 모은 객체\r\n        let body = {\r\n            email: email,\r\n            password: Password,\r\n            name: Name,\r\n            nickName: Name,\r\n            image: \"http://gravatar.com/avatar/${moment().unix()}?d=identicon\",\r\n            content: \"\",\r\n        }\r\n\r\n        //디스패치\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    //submit시 로그인 페이지로 이동\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>이메일</label>\r\n                <Input value={email} placeholder=\"이메일\" onChange={onEmailHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"비밀번호 확인\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["178","179","180","181"],"import React, { Component, useState } from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport MainSearchPage from './MainSections/MainSearchPage';\r\nimport MainLivePage from './MainSections/MainLivePage'\r\nimport MainCategoryButton from './MainSections/MainCategoryButton';\r\nimport CurrentExhibitPage from './MainSections/CurrentExhibitPage';\r\nimport PlannedExhibitPage from './MainSections/PlannedExhibitPage';\r\n\r\n\r\nfunction Mainpage () {\r\n    return(\r\n        <div style={{margin: '0', padding: '0'}}>\r\n            <MainSearchPage />\r\n            <MainLivePage />\r\n            <MainCategoryButton />\r\n            <CurrentExhibitPage />\r\n            <PlannedExhibitPage />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Mainpage","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["182","183","184"],"import React, { useState } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto'}}>-\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white', marginTop:'5rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>동영상 추가</Button>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                {/*  해시태그 */ }\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["185","186"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport HashTag from '../HashTag';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nvar imgNum = -1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [hashtag, setHashTag] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const handleHashTag = (event) => {\r\n        setHashTag(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            category: Categories,\r\n            tags:hashtag,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 ~`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit>\r\n            <Input style={{border:'white', marginTop:'5rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  type=\"primary\" size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ marginLeft:'20px', width: '50px', height: '10px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Button size='small' type='primary'>이미지 추가</Button>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag onChange={handleHashTag} value={hashtag}/><br/><br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n                <br/><br/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["187"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["188","189","190","191","192","193","194","195","196"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Skeleton, Tag, Button } from 'antd';\r\nimport './BroadCastPage.css';\r\nimport Axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction BroadCastPage(props) {\r\n\r\n    let broadcasterId = localStorage.getItem('userId');\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    const [peerConnections, setPeerConnections] = useState({});\r\n    const [stream, setStream] = useState();\r\n    const [numberOfViewers, setNumberOfViewers] = useState(0);\r\n\r\n    const config = {\r\n        iceServers: [\r\n          {\r\n            urls: [\"stun:stun.l.google.com:19302\"],\r\n          },\r\n        ],\r\n    };\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetailByBroadcaster', { broadcasterId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"watcher\", (id) => {\r\n            const peerConnection = new RTCPeerConnection(config);\r\n            setPeerConnections(peerConnections[id] = peerConnection);\r\n            console.log(peerConnections);\r\n\r\n            let stream = videoRef.current.srcObject;\r\n            stream\r\n                .getTracks()\r\n                .forEach((track) => peerConnection.addTrack(track, stream));\r\n\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate);\r\n                }\r\n            }\r\n\r\n            peerConnection\r\n                .createOffer()\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                })\r\n\r\n            setNumberOfViewers(Object.keys(peerConnections).length)\r\n        })\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"answer\", (id, description) => {\r\n            peerConnections[id].setRemoteDescription(description);\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"disconnectPeer\", (id) => {\r\n            peerConnections[id].close();\r\n            delete peerConnections[id];\r\n            setNumberOfViewers(Object.keys(peerConnections).length);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n        }\r\n    }, [window])\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n            setStream(stream);\r\n            \r\n            videoRef.current.srcObject = stream;\r\n            socket.emit(\"broadcaster\");\r\n        })\r\n\r\n    }, [])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const handleLiveClose = () => {\r\n        Axios.post('/api/liveVideo/removeLiveData', { broadcasterId })\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                alert(\"라이브가 종료되었습니다.\")\r\n                window.location.href='/'\r\n                \r\n\r\n            } else {\r\n                alert(\"라이브 종료를 실패했습니다. \")\r\n            }\r\n        })\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <div>\r\n                            <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                            <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                                <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                                {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveDetail._id} /> */}\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                        \r\n                        <List.Item\r\n                            actions={[\r\n                                // <Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />,\r\n                                <Button \r\n                                    style={{ backgroundColor: '#48bcec', borderRadius: '4px',\r\n                                        color: 'white', padding: '5px 16px', borderStyle: 'none',\r\n                                        fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase', cursor: 'pointer' }}\r\n                                        onClick={handleLiveClose}>\r\n                                        라이브 종료\r\n                                </Button>\r\n                                    ]}\r\n                        >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                    title={liveDetail.writer.name}\r\n                                    description={liveDetail.description}\r\n                                    \r\n                                />\r\n                        </List.Item>\r\n                        <div>{tagChild}</div>\r\n                        <br />\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ width: '1263px'}}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <Skeleton avatar paragraph={{ rows: 4 }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BroadCastPage","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["197"],"import React, { useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport HashTag from '../../HashTag';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction BroadCastForm(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ThumbnailPath, setThumbnailPath] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n    let hashTags = [];\r\n\r\n    const onTitleChange = e => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = e => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n        console.log('updatepage')\r\n        console.log(hashTags)\r\n    }\r\n\r\n    const onDrop = files => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0])\r\n\r\n        Axios.post('/api/liveVideo/uploadfiles', formData, config)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setThumbnailPath(res.data.url);\r\n                    setFileName(res.data.fileName)\r\n                } else {\r\n                    alert(\"썸네일 업로드 실패\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: videoTitle,\r\n            description: description,\r\n            thumbnail: ThumbnailPath,\r\n            tags: hashTags\r\n        }\r\n\r\n        Axios.post('/api/liveVideo/uploadLiveInfo', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    alert(\"라이브 페이지로 이동합니다.\")\r\n                    props.history.push(`/broadcast/${localStorage.getItem('userId')}`)\r\n                } else {\r\n                    alert(\"라이브 준비에 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input\r\n                    value={videoTitle}\r\n                    onChange={onTitleChange}\r\n                    placeholder='제목을 쓰세요'\r\n                    style={{ borderStyle: 'none', borderBottom: '1px solid #cdcec9'}}\r\n                />\r\n                <div style={{ display: 'flex', width: '100%', marginTop: '2rem' }}>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    background: '#48bcec', \r\n                                    color: 'white', \r\n                                    paddingRight: '1rem', \r\n                                    paddingLeft: '1rem', \r\n                                    paddingTop: '0.2rem',\r\n                                    paddingBottom: '0.2rem',\r\n                                    border: '2px solid #48bcec',\r\n                                    cursor: 'pointer'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>썸네일 추가</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <div style={{ flex: '1', border: '2px solid #cdcec9' }}>\r\n                        { fileName &&\r\n                            (fileName)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    display: 'flex', width: '100%', height: '350px', border: '2px solid #cdcec9', marginTop: '1rem', justifyContent: 'center', alignItems: 'center'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                    ThumbnailPath &&\r\n                                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                                    }\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <TextArea\r\n                    value={description}\r\n                    onChange={onDescriptionChange}\r\n                    placeholder='영상 소개'\r\n                    style={{ height: '200px', border: '2px solid #cdcec9' }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <HashTag addTags={handleAddTags} />\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" style={{ background: '#48bcec', paddingLeft: '0' }} size=\"large\" onClick={onSubmit}>\r\n                    라이브 시작\r\n                </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BroadCastForm\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["198"],"import React, { useEffect, useState } from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport axios from 'axios'\r\nimport Subscriber from './Sections/Subscriber';\r\nimport SideVideo from './Sections/SideVideo';\r\nimport Comment from './Sections/Comment'\r\nimport LikeDislikes from './Sections/LikeDislikes'\r\n\r\nfunction VideoDetailPage(props){\r\n  const videoId = props.match.params.videoId\r\n  const [Video, setVideo] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n\r\n\r\n  const videoVariable = {videoId: videoId}\r\n    \r\n  useEffect(() => {\r\n    axios.post('/api/video/getVideoDetail', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setVideo(response.data.video)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n    axios.post('/api/comment/getComments', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                console.log('response.data.comments',response.data.comments)\r\n                setCommentLists(response.data.comments)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n\r\n  }, [])\r\n    \r\n    const updateComment = (newComment) => {\r\n      setCommentLists(CommentLists.concat(newComment))\r\n  }\r\n  if(Video.writer){\r\n    return(\r\n      <Row gutter={[16,16]}>\r\n        <Col lg={18} xs={32}>\r\n        <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n          <video style={{ width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} controls/>\r\n          <List.Item>\r\n             <List.Item.Meta\r\n                 title={<h2>{Video.title}</h2>}/>  \r\n            조회수 {Video.views}회 <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n          </List.Item>\r\n          <List.Item\r\n            actions={[<LikeDislikes video videoId={videoId} userId={localStorage.getItem('userId')}  />,<Subscriber usetTo={Video.writer._id} userFrom={localStorage.getItem('userId')}/>]}\r\n          >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                description={Video.writer.name}\r\n                />\r\n          </List.Item>\r\n               <List.Item.Meta\r\n               style={{ marginLeft:'3rem' }}\r\n                description={Video.description}\r\n                />\r\n              <List.Item>\r\n          </List.Item>\r\n          {/* {Video.startDate}~{Video.endDate} */}\r\n          <Tag style={{marginLeft:'3rem'}}>{Image.tags !== '' && (<div>{Image.tags}해시태그자리</div>)}</Tag><hr/>\r\n          <Comment CommentLists={CommentLists} postId={Video._id} refreshFunction={updateComment}/>\r\n          </div>\r\n        </Col>\r\n        <Col lg={6} xs={24}>\r\n          <SideVideo />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }else{\r\n    return(<div>...loading...</div>)\r\n  }\r\n}\r\n\r\nexport default VideoDetailPage;\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["199","200","201","202"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Tag } from 'antd';\r\n// import ChatPage from '../LiveChatPage/ChatPage';\r\n// import Subscribe from '../../VideoDetailPage/Section/Subscribe';\r\n// import LiveLike from '../Sections/LiveLike';\r\nimport '../BroadCastPage/BroadCastPage.css'\r\nimport Axios from 'axios'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction LiveVideoPage(props) {\r\n\r\n    const liveId = props.match.params.liveId;\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    let peerConnection;\r\n    const config = {\r\n        iceServers: [\r\n            { \r\n              \"urls\": \"stun:stun.l.google.com:19302\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetail', { liveId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"offer\", (id, description) => {\r\n            peerConnection = new RTCPeerConnection(config);\r\n            peerConnection\r\n                .setRemoteDescription(description)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"answer\", id, peerConnection.localDescription)\r\n                })\r\n            peerConnection.ontrack = e => {\r\n                \r\n                videoRef.current.srcObject = e.streams[0];\r\n                       \r\n                console.log(\"offer\")\r\n            }\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate)\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(candidate))\r\n                .catch(e => console.error(e))\r\n        })\r\n        \r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcaster\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n            peerConnection.close();\r\n        }\r\n    }, [window])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (liveDetail.writer._id !== localStorage.getItem('userId')) && (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        // const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                    <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls /> \r\n                    <div>\r\n                        <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                        <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                            <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                            {/* <LiveLike userId={localStorage.getItem('userId')} liveId={liveId} /> */}\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    <List.Item\r\n                            // actions={[<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                title={liveDetail.writer.name}\r\n                                description={liveDetail.description}\r\n                            />\r\n                    </List.Item>\r\n                    <div>{tagChild}</div>\r\n                    <br />\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                        {/* <ChatPage /> */}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   else {\r\n        return (\r\n            <div>...</div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default LiveVideoPage\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["203","204","205","206","207","208","209","210","211","212","213","214","215"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["216","217","218","219"],"import React, { useEffect, useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Axios from 'axios';\r\nimport '../Mainpage.css';\r\n\r\nfunction MainLivePage(){\r\n    return (\r\n        <div className='mainpage_below' style={{textAlign:'center', backgroundSize:'cover'}} height=\"100vh\">\r\n            \r\n            <p className=\"streamlive\">실시간 방송 LIVE</p>\r\n            <p className=\"meetinlive\">전국의 대학생 활동을 라이브 방송으로 만나보세요</p>\r\n            <AiIcons.AiOutlineLeftSquare size=\"40\" color=\"#C692B8\"  className=\"livevideoleft\"/>\r\n            <AiIcons.AiFillRightSquare size=\"40\" color=\"#C692B8\" className=\"livevideoright\"/>\r\n            <span id=\"#livevideo\" className=\"livevideo\" style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                \r\n                {/* {liveRenderCards} */}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainLivePage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["220"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["221","222","223","224","225","226","227"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossOrigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><img src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><img src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><img src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><img src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["228","229"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Subscriber(props) {\r\n    const userTo = props.userTo\r\n    const userFrom = props.userFrom\r\n    const [ SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [ Subscribed, setSubscribed] = useState(false)\r\n\r\n    const onSubscribe = ( ) => {\r\n\r\n        let subscribeVariables = {\r\n                userTo : userTo,\r\n                userFrom : userFrom\r\n        }\r\n\r\n        if(Subscribed) {\r\n            //when we are already subscribed \r\n            axios.post('/api/subscribe/unSubscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success){ \r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to unsubscribe')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n            \r\n            axios.post('/api/subscribe/subscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to subscribe')\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom }\r\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('Failed to get subscriber Number')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subcribed)\r\n                } else {\r\n                    alert('Failed to get Subscribed Information')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick\r\n                    style={{\r\n                        backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\r\n                        borderRadius: '4px', color: 'white',\r\n                        padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n                    }}>\r\n                        {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n                    </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriber\r\n","C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js",["230","231","232"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport { LikeOutlined, DislikeOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                console.log('getLikes',response.data)\r\n\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n            .then(response => {\r\n                console.log('getDislike',response.data)\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/api/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <div\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} >\r\n                            <LikeOutlined />\r\n                    </div>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <div\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}><DislikeOutlined />\r\n                    </div>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes","C:\\MOA\\2021-SM21\\MOA\\client\\src\\Config.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\types.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js",[],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js",["233"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment","C:\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["234","235"],"import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Home',\r\n        path:'/',\r\n        icon:<AiIcons.AiFillHome style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스생성',\r\n        path:'/video/upload',\r\n        icon:<GiIcons.GiGearHammer style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스편집',\r\n        path:'/',\r\n        icon:<BiIcons.BiEdit style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'업로드',\r\n        path:\"/\",\r\n        icon:<FiIcons.FiUpload style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:\"nav-text\"\r\n    },\r\n    {\r\n        title:'라이브 시작',\r\n        path:'/',\r\n        icon:<RiIcons.RiLiveFill style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    }\r\n]","C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\AccountInfoPage.js",["236","237","238","239","240","241","242","243","244"],"import React, { useState } from 'react';\r\nimport NavBar from '../NavBar/Navbar';\r\nimport MyBoothCards from './MyBoothCards';\r\n\r\nimport Profile from './Profile';\r\n\r\nfunction AccountInfoPage() {\r\n    //로컬데이터 저장된 state\r\n    //카드 내용\r\n    const [Booths, setBooths] = useState([])\r\n    //프로필 사진 소스\r\n    const [Profile_src, setProfile_src] = useState(\"\")\r\n    //프로필 이름\r\n    const [Profile_name, setProfile_name] = useState('')\r\n    //프로필 아이디\r\n    const [Profile_id, setProfile_id] = useState('')\r\n    //프로필 자기소개\r\n    const [Profile_contents, setProfile_contents] = useState(\"\")\r\n\r\n    // 프로필 변경\r\n    const changeProfile = (_name, _contents) => {\r\n        setProfile_name(_name)\r\n        setProfile_contents(_contents)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <article\r\n                style={{\r\n                    margin: '24px 16px',\r\n                    padding: 24,\r\n                    minHeight: 280,\r\n                }}\r\n            >\r\n                <div style={{ margin: \"10px 0 120px 0\" }}>\r\n                    <Profile></Profile>\r\n                </div>\r\n                <MyBoothCards></MyBoothCards>\r\n            </article>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AccountInfoPage;","C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\Profile.js",["245","246","247","248","249","250"],"C:\\MOA\\2021-SM21\\MOA\\client\\src\\AccountInfoPage\\MyBoothCards.js",["251","252","253","254","255","256","257","258","259"],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"268","line":11,"column":8,"nodeType":"266","messageId":"267","endLine":11,"endColumn":21},{"ruleId":"264","severity":1,"message":"269","line":12,"column":8,"nodeType":"266","messageId":"267","endLine":12,"endColumn":21},{"ruleId":"264","severity":1,"message":"270","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":21},{"ruleId":"264","severity":1,"message":"271","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":13},{"ruleId":"272","severity":1,"message":"273","line":48,"column":20,"nodeType":"274","messageId":"275","endLine":48,"endColumn":79},{"ruleId":"276","severity":1,"message":"277","line":74,"column":17,"nodeType":"278","endLine":74,"endColumn":76},{"ruleId":"264","severity":1,"message":"279","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"280","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"281","line":2,"column":13,"nodeType":"266","messageId":"267","endLine":2,"endColumn":20},{"ruleId":"264","severity":1,"message":"282","line":3,"column":13,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"264","severity":1,"message":"283","line":29,"column":23,"nodeType":"266","messageId":"267","endLine":29,"endColumn":35},{"ruleId":"264","severity":1,"message":"284","line":30,"column":21,"nodeType":"266","messageId":"267","endLine":30,"endColumn":31},{"ruleId":"264","severity":1,"message":"285","line":31,"column":12,"nodeType":"266","messageId":"267","endLine":31,"endColumn":22},{"ruleId":"264","severity":1,"message":"286","line":109,"column":21,"nodeType":"266","messageId":"267","endLine":109,"endColumn":27},{"ruleId":"287","severity":1,"message":"288","line":176,"column":21,"nodeType":"278","endLine":176,"endColumn":44},{"ruleId":"289","severity":1,"message":"290","line":6,"column":1,"nodeType":"291","endLine":42,"endColumn":2},{"ruleId":"264","severity":1,"message":"292","line":13,"column":12,"nodeType":"266","messageId":"267","endLine":13,"endColumn":18},{"ruleId":"264","severity":1,"message":"293","line":14,"column":12,"nodeType":"266","messageId":"267","endLine":14,"endColumn":27},{"ruleId":"294","severity":1,"message":"295","line":36,"column":8,"nodeType":"296","endLine":36,"endColumn":10,"suggestions":"297"},{"ruleId":"294","severity":1,"message":"298","line":65,"column":8,"nodeType":"296","endLine":65,"endColumn":16,"suggestions":"299"},{"ruleId":"294","severity":1,"message":"300","line":71,"column":8,"nodeType":"296","endLine":71,"endColumn":16,"suggestions":"301"},{"ruleId":"294","severity":1,"message":"300","line":77,"column":8,"nodeType":"296","endLine":77,"endColumn":16,"suggestions":"302"},{"ruleId":"294","severity":1,"message":"303","line":85,"column":8,"nodeType":"296","endLine":85,"endColumn":10,"suggestions":"304"},{"ruleId":"294","severity":1,"message":"305","line":91,"column":8,"nodeType":"296","endLine":91,"endColumn":16,"suggestions":"306"},{"ruleId":"294","severity":1,"message":"307","line":101,"column":8,"nodeType":"296","endLine":101,"endColumn":10,"suggestions":"308"},{"ruleId":"264","severity":1,"message":"309","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":20},{"ruleId":"294","severity":1,"message":"310","line":39,"column":6,"nodeType":"296","endLine":39,"endColumn":8,"suggestions":"311"},{"ruleId":"294","severity":1,"message":"312","line":37,"column":8,"nodeType":"296","endLine":37,"endColumn":10,"suggestions":"313"},{"ruleId":"294","severity":1,"message":"314","line":41,"column":30,"nodeType":"315","endLine":41,"endColumn":59},{"ruleId":"294","severity":1,"message":"316","line":70,"column":8,"nodeType":"296","endLine":70,"endColumn":16,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"318","line":89,"column":8,"nodeType":"296","endLine":89,"endColumn":16,"suggestions":"319"},{"ruleId":"264","severity":1,"message":"320","line":7,"column":9,"nodeType":"266","messageId":"267","endLine":7,"endColumn":13},{"ruleId":"294","severity":1,"message":"321","line":28,"column":28,"nodeType":"322","endLine":28,"endColumn":64},{"ruleId":"294","severity":1,"message":"323","line":45,"column":37,"nodeType":"322","endLine":45,"endColumn":73},{"ruleId":"264","severity":1,"message":"324","line":60,"column":13,"nodeType":"266","messageId":"267","endLine":60,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":70,"column":9,"nodeType":"327","messageId":"328","endLine":113,"endColumn":10},{"ruleId":"329","severity":1,"message":"330","line":72,"column":49,"nodeType":"331","messageId":"332","endLine":72,"endColumn":51},{"ruleId":"329","severity":1,"message":"330","line":94,"column":46,"nodeType":"331","messageId":"332","endLine":94,"endColumn":48},{"ruleId":"264","severity":1,"message":"333","line":95,"column":25,"nodeType":"266","messageId":"267","endLine":95,"endColumn":30},{"ruleId":"329","severity":1,"message":"330","line":104,"column":48,"nodeType":"331","messageId":"332","endLine":104,"endColumn":50},{"ruleId":"325","severity":1,"message":"326","line":119,"column":9,"nodeType":"327","messageId":"328","endLine":130,"endColumn":10},{"ruleId":"325","severity":1,"message":"326","line":178,"column":9,"nodeType":"327","messageId":"328","endLine":193,"endColumn":10},{"ruleId":"334","severity":1,"message":"335","line":207,"column":17,"nodeType":"266","messageId":"336","endLine":207,"endColumn":20},{"ruleId":"334","severity":1,"message":"335","line":210,"column":17,"nodeType":"266","messageId":"336","endLine":210,"endColumn":20},{"ruleId":"264","severity":1,"message":"337","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"280","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"282","line":3,"column":13,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"264","severity":1,"message":"338","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"339","line":7,"column":11,"nodeType":"266","messageId":"267","endLine":7,"endColumn":19},{"ruleId":"264","severity":1,"message":"340","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":33},{"ruleId":"264","severity":1,"message":"341","line":10,"column":9,"nodeType":"266","messageId":"267","endLine":10,"endColumn":14},{"ruleId":"264","severity":1,"message":"342","line":11,"column":12,"nodeType":"266","messageId":"267","endLine":11,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":28,"column":91,"nodeType":"278","endLine":28,"endColumn":117},{"ruleId":"276","severity":1,"message":"277","line":30,"column":90,"nodeType":"278","endLine":30,"endColumn":114},{"ruleId":"276","severity":1,"message":"277","line":32,"column":90,"nodeType":"278","endLine":32,"endColumn":115},{"ruleId":"276","severity":1,"message":"277","line":34,"column":90,"nodeType":"278","endLine":34,"endColumn":114},{"ruleId":"264","severity":1,"message":"343","line":10,"column":11,"nodeType":"266","messageId":"267","endLine":10,"endColumn":22},{"ruleId":"294","severity":1,"message":"344","line":67,"column":8,"nodeType":"296","endLine":67,"endColumn":10,"suggestions":"345"},{"ruleId":"329","severity":1,"message":"346","line":31,"column":50,"nodeType":"331","messageId":"347","endLine":31,"endColumn":52},{"ruleId":"329","severity":1,"message":"346","line":49,"column":56,"nodeType":"331","messageId":"347","endLine":49,"endColumn":58},{"ruleId":"294","severity":1,"message":"348","line":59,"column":8,"nodeType":"296","endLine":59,"endColumn":10,"suggestions":"349"},{"ruleId":"329","severity":1,"message":"346","line":11,"column":42,"nodeType":"331","messageId":"347","endLine":11,"endColumn":44},{"ruleId":"264","severity":1,"message":"350","line":2,"column":13,"nodeType":"266","messageId":"267","endLine":2,"endColumn":20},{"ruleId":"264","severity":1,"message":"351","line":4,"column":13,"nodeType":"266","messageId":"267","endLine":4,"endColumn":20},{"ruleId":"264","severity":1,"message":"352","line":10,"column":12,"nodeType":"266","messageId":"267","endLine":10,"endColumn":18},{"ruleId":"264","severity":1,"message":"353","line":10,"column":20,"nodeType":"266","messageId":"267","endLine":10,"endColumn":29},{"ruleId":"264","severity":1,"message":"354","line":12,"column":12,"nodeType":"266","messageId":"267","endLine":12,"endColumn":23},{"ruleId":"264","severity":1,"message":"355","line":12,"column":25,"nodeType":"266","messageId":"267","endLine":12,"endColumn":39},{"ruleId":"264","severity":1,"message":"356","line":14,"column":12,"nodeType":"266","messageId":"267","endLine":14,"endColumn":24},{"ruleId":"264","severity":1,"message":"357","line":16,"column":12,"nodeType":"266","messageId":"267","endLine":16,"endColumn":22},{"ruleId":"264","severity":1,"message":"358","line":16,"column":24,"nodeType":"266","messageId":"267","endLine":16,"endColumn":37},{"ruleId":"264","severity":1,"message":"359","line":18,"column":12,"nodeType":"266","messageId":"267","endLine":18,"endColumn":28},{"ruleId":"264","severity":1,"message":"360","line":21,"column":11,"nodeType":"266","messageId":"267","endLine":21,"endColumn":24},{"ruleId":"264","severity":1,"message":"361","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":21},{"ruleId":"264","severity":1,"message":"362","line":12,"column":12,"nodeType":"266","messageId":"267","endLine":12,"endColumn":23},{"ruleId":"264","severity":1,"message":"363","line":12,"column":25,"nodeType":"266","messageId":"267","endLine":12,"endColumn":39},{"ruleId":"294","severity":1,"message":"364","line":26,"column":8,"nodeType":"296","endLine":26,"endColumn":10,"suggestions":"365"},{"ruleId":"276","severity":1,"message":"277","line":110,"column":27,"nodeType":"278","endLine":112,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":188,"column":21,"nodeType":"278","endLine":191,"endColumn":23},{"ruleId":"264","severity":1,"message":"361","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":21},{"ruleId":"294","severity":1,"message":"321","line":34,"column":32,"nodeType":"322","endLine":34,"endColumn":68},{"ruleId":"264","severity":1,"message":"324","line":74,"column":13,"nodeType":"266","messageId":"267","endLine":74,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":83,"column":9,"nodeType":"327","messageId":"328","endLine":127,"endColumn":10},{"ruleId":"329","severity":1,"message":"330","line":85,"column":49,"nodeType":"331","messageId":"332","endLine":85,"endColumn":51},{"ruleId":"329","severity":1,"message":"330","line":107,"column":46,"nodeType":"331","messageId":"332","endLine":107,"endColumn":48},{"ruleId":"264","severity":1,"message":"333","line":108,"column":25,"nodeType":"266","messageId":"267","endLine":108,"endColumn":30},{"ruleId":"329","severity":1,"message":"330","line":117,"column":48,"nodeType":"331","messageId":"332","endLine":117,"endColumn":50},{"ruleId":"264","severity":1,"message":"366","line":119,"column":25,"nodeType":"266","messageId":"267","endLine":119,"endColumn":28},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'BroadCastForm' is defined but never used.","'BroadCastPage' is defined but never used.","'LiveVideoPage' is defined but never used.","'axios' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.","ArrayExpression",["369"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["370"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["371"],["372"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["373"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["374"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["375"],"'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'videoVariable'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["377"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["379"],"'Meta' is assigned a value but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'videoSearched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'start' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","'useEffect' is defined but never used.","'Axios' is defined but never used.","'settings' is assigned a value but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'onSubscribe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["380"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["381"],"'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Booths' is assigned a value but never used.","'setBooths' is assigned a value but never used.","'Profile_src' is assigned a value but never used.","'setProfile_src' is assigned a value but never used.","'Profile_name' is assigned a value but never used.","'Profile_id' is assigned a value but never used.","'setProfile_id' is assigned a value but never used.","'Profile_contents' is assigned a value but never used.","'changeProfile' is assigned a value but never used.","'useSelector' is defined but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyProfile'. Either include it or remove the dependency array.",["382"],"'end' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"387","fix":"390"},{"desc":"391","fix":"392"},{"desc":"391","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"398","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},"Update the dependencies array to be: [broadcasterId]",{"range":"407","text":"408"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"409","text":"410"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"411","text":"412"},{"range":"413","text":"412"},{"range":"414","text":"412"},"Update the dependencies array to be: [socket]",{"range":"415","text":"416"},{"range":"417","text":"416"},"Update the dependencies array to be: [videoVariable]",{"range":"418","text":"419"},"Update the dependencies array to be: [liveId]",{"range":"420","text":"421"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"422","text":"423"},{"range":"424","text":"423"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"425","text":"426"},"Update the dependencies array to be: [props.userId, variable]",{"range":"427","text":"428"},"Update the dependencies array to be: [getMyProfile]",{"range":"429","text":"430"},[1142,1144],"[broadcasterId]",[2123,2131],"[config, peerConnections, socket]",[2298,2306],"[peerConnections, socket]",[2488,2496],[2743,2745],[2879,2887],"[socket]",[3165,3167],[1260,1262],"[videoVariable]",[1134,1136],"[liveId]",[2282,2290],"[peerConnection, socket]",[2725,2733],[2257,2259],"[userFrom, userTo]",[2137,2139],"[props.userId, variable]",[810,812],"[getMyProfile]"]
=======
<<<<<<< HEAD
[{"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js":"2","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"3","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js":"5","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"6","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"7","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"8","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"9","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"10","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"11","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"12","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"13","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"14","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"15","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"16","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"17","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"18","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"19","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"20","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"21","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js":"22","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"23","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"24","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"25","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"26","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"27","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"28","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"29","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"30","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"31","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js":"32","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js":"33","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js":"34","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js":"35","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js":"36","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js":"37","C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js":"38"},{"size":1071,"mtime":1610173826664,"results":"39","hashOfConfig":"40"},{"size":1872,"mtime":1610232009856,"results":"41","hashOfConfig":"40"},{"size":375,"mtime":1610159670533,"results":"42","hashOfConfig":"40"},{"size":3645,"mtime":1610210230869,"results":"43","hashOfConfig":"40"},{"size":3817,"mtime":1610209024164,"results":"44","hashOfConfig":"40"},{"size":7837,"mtime":1610230599138,"results":"45","hashOfConfig":"40"},{"size":7915,"mtime":1610230609606,"results":"46","hashOfConfig":"40"},{"size":3328,"mtime":1610214054739,"results":"47","hashOfConfig":"40"},{"size":780,"mtime":1610173826685,"results":"48","hashOfConfig":"40"},{"size":2424,"mtime":1610199568145,"results":"49","hashOfConfig":"40"},{"size":1499,"mtime":1610165925527,"results":"50","hashOfConfig":"40"},{"size":1533,"mtime":1610209433917,"results":"51","hashOfConfig":"40"},{"size":6083,"mtime":1610200676355,"results":"52","hashOfConfig":"40"},{"size":205,"mtime":1610234259308,"results":"53","hashOfConfig":"40"},{"size":2718,"mtime":1610234259283,"results":"54","hashOfConfig":"40"},{"size":7715,"mtime":1610234259249,"results":"55","hashOfConfig":"40"},{"size":5446,"mtime":1610234259267,"results":"56","hashOfConfig":"40"},{"size":675,"mtime":1610234259301,"results":"57","hashOfConfig":"40"},{"size":2339,"mtime":1610201486647,"results":"58","hashOfConfig":"40"},{"size":2505,"mtime":1610209327885,"results":"59","hashOfConfig":"40"},{"size":16747,"mtime":1610214527947,"results":"60","hashOfConfig":"40"},{"size":5399,"mtime":1610204084129,"results":"61","hashOfConfig":"40"},{"size":1762,"mtime":1610192179414,"results":"62","hashOfConfig":"40"},{"size":999,"mtime":1610173826861,"results":"63","hashOfConfig":"40"},{"size":1723,"mtime":1610199568152,"results":"64","hashOfConfig":"40"},{"size":1707,"mtime":1610197013737,"results":"65","hashOfConfig":"40"},{"size":1823,"mtime":1610173826847,"results":"66","hashOfConfig":"40"},{"size":2802,"mtime":1610234259289,"results":"67","hashOfConfig":"40"},{"size":528,"mtime":1610173826662,"results":"68","hashOfConfig":"40"},{"size":1130,"mtime":1610233945808,"results":"69","hashOfConfig":"40"},{"size":4009,"mtime":1610234677359,"results":"70","hashOfConfig":"40"},{"size":400,"mtime":1610234259304,"results":"71","hashOfConfig":"40"},{"size":3977,"mtime":1610234259255,"results":"72","hashOfConfig":"40"},{"size":2832,"mtime":1610234259273,"results":"73","hashOfConfig":"40"},{"size":1810,"mtime":1610192533114,"results":"74","hashOfConfig":"40"},{"size":2752,"mtime":1610192287735,"results":"75","hashOfConfig":"40"},{"size":370,"mtime":1610234259292,"results":"76","hashOfConfig":"40"},{"size":434,"mtime":1610234259261,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1osx21h",{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\App.js",["154","155"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["156"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js",["157","158"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["159","160"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["161","162","163"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["164","165"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["166","167","168","169"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["170"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["171"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["172","173","174","175","176","177","178","179","180"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["181","182","183","184","185"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",["186"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["187","188","189","190","191","192","193","194","195","196","197","198","199"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js",["200","201","202"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["203","204","205","206","207","208","209"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["210"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["211"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["212","213","214"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["215","216","217","218","219"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js",["220","221"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js",["222"],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js",[],"C:\\Users\\leese\\MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js",[],{"ruleId":"223","severity":1,"message":"224","line":6,"column":17,"nodeType":"225","messageId":"226","endLine":6,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":31,"column":69,"nodeType":"229","messageId":"230","endLine":31,"endColumn":70},{"ruleId":"231","severity":1,"message":"232","line":87,"column":17,"nodeType":"233","endLine":87,"endColumn":76},{"ruleId":"234","severity":1,"message":"235","line":35,"column":5,"nodeType":"236","endLine":35,"endColumn":7,"suggestions":"237"},{"ruleId":"231","severity":1,"message":"232","line":68,"column":25,"nodeType":"233","endLine":68,"endColumn":80},{"ruleId":"223","severity":1,"message":"238","line":110,"column":21,"nodeType":"225","messageId":"226","endLine":110,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":187,"column":21,"nodeType":"233","endLine":187,"endColumn":44},{"ruleId":"223","severity":1,"message":"241","line":30,"column":23,"nodeType":"225","messageId":"226","endLine":30,"endColumn":35},{"ruleId":"223","severity":1,"message":"242","line":31,"column":21,"nodeType":"225","messageId":"226","endLine":31,"endColumn":31},{"ruleId":"223","severity":1,"message":"243","line":32,"column":12,"nodeType":"225","messageId":"226","endLine":32,"endColumn":22},{"ruleId":"223","severity":1,"message":"244","line":14,"column":10,"nodeType":"225","messageId":"226","endLine":14,"endColumn":14},{"ruleId":"234","severity":1,"message":"245","line":43,"column":6,"nodeType":"236","endLine":43,"endColumn":8,"suggestions":"246"},{"ruleId":"223","severity":1,"message":"247","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"248","line":1,"column":28,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"249","line":2,"column":13,"nodeType":"225","messageId":"226","endLine":2,"endColumn":20},{"ruleId":"223","severity":1,"message":"250","line":3,"column":13,"nodeType":"225","messageId":"226","endLine":3,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":6,"column":1,"nodeType":"253","endLine":42,"endColumn":2},{"ruleId":"223","severity":1,"message":"254","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":20},{"ruleId":"223","severity":1,"message":"255","line":16,"column":12,"nodeType":"225","messageId":"226","endLine":16,"endColumn":18},{"ruleId":"223","severity":1,"message":"256","line":17,"column":12,"nodeType":"225","messageId":"226","endLine":17,"endColumn":27},{"ruleId":"234","severity":1,"message":"257","line":40,"column":8,"nodeType":"236","endLine":40,"endColumn":10,"suggestions":"258"},{"ruleId":"234","severity":1,"message":"259","line":69,"column":8,"nodeType":"236","endLine":69,"endColumn":16,"suggestions":"260"},{"ruleId":"234","severity":1,"message":"261","line":75,"column":8,"nodeType":"236","endLine":75,"endColumn":16,"suggestions":"262"},{"ruleId":"234","severity":1,"message":"261","line":81,"column":8,"nodeType":"236","endLine":81,"endColumn":16,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"264","line":89,"column":8,"nodeType":"236","endLine":89,"endColumn":10,"suggestions":"265"},{"ruleId":"234","severity":1,"message":"266","line":95,"column":8,"nodeType":"236","endLine":95,"endColumn":16,"suggestions":"267"},{"ruleId":"234","severity":1,"message":"268","line":105,"column":8,"nodeType":"236","endLine":105,"endColumn":10,"suggestions":"269"},{"ruleId":"234","severity":1,"message":"270","line":37,"column":8,"nodeType":"236","endLine":37,"endColumn":10,"suggestions":"271"},{"ruleId":"234","severity":1,"message":"272","line":41,"column":30,"nodeType":"273","endLine":41,"endColumn":59},{"ruleId":"234","severity":1,"message":"274","line":70,"column":8,"nodeType":"236","endLine":70,"endColumn":16,"suggestions":"275"},{"ruleId":"234","severity":1,"message":"276","line":89,"column":8,"nodeType":"236","endLine":89,"endColumn":16,"suggestions":"277"},{"ruleId":"223","severity":1,"message":"278","line":105,"column":15,"nodeType":"225","messageId":"226","endLine":105,"endColumn":32},{"ruleId":"234","severity":1,"message":"279","line":62,"column":8,"nodeType":"236","endLine":62,"endColumn":22,"suggestions":"280"},{"ruleId":"223","severity":1,"message":"281","line":7,"column":9,"nodeType":"225","messageId":"226","endLine":7,"endColumn":13},{"ruleId":"234","severity":1,"message":"282","line":28,"column":28,"nodeType":"283","endLine":28,"endColumn":64},{"ruleId":"234","severity":1,"message":"284","line":45,"column":37,"nodeType":"283","endLine":45,"endColumn":73},{"ruleId":"223","severity":1,"message":"285","line":60,"column":13,"nodeType":"225","messageId":"226","endLine":60,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":70,"column":9,"nodeType":"288","messageId":"289","endLine":113,"endColumn":10},{"ruleId":"290","severity":1,"message":"291","line":72,"column":49,"nodeType":"292","messageId":"293","endLine":72,"endColumn":51},{"ruleId":"290","severity":1,"message":"291","line":94,"column":46,"nodeType":"292","messageId":"293","endLine":94,"endColumn":48},{"ruleId":"223","severity":1,"message":"294","line":95,"column":25,"nodeType":"225","messageId":"226","endLine":95,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":104,"column":48,"nodeType":"292","messageId":"293","endLine":104,"endColumn":50},{"ruleId":"286","severity":1,"message":"287","line":119,"column":9,"nodeType":"288","messageId":"289","endLine":130,"endColumn":10},{"ruleId":"286","severity":1,"message":"287","line":174,"column":9,"nodeType":"288","messageId":"289","endLine":189,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":203,"column":17,"nodeType":"225","messageId":"297","endLine":203,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":206,"column":17,"nodeType":"225","messageId":"297","endLine":206,"endColumn":20},{"ruleId":"290","severity":1,"message":"298","line":31,"column":50,"nodeType":"292","messageId":"299","endLine":31,"endColumn":52},{"ruleId":"290","severity":1,"message":"298","line":49,"column":56,"nodeType":"292","messageId":"299","endLine":49,"endColumn":58},{"ruleId":"234","severity":1,"message":"300","line":59,"column":8,"nodeType":"236","endLine":59,"endColumn":10,"suggestions":"301"},{"ruleId":"223","severity":1,"message":"302","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":33},{"ruleId":"223","severity":1,"message":"303","line":10,"column":9,"nodeType":"225","messageId":"226","endLine":10,"endColumn":14},{"ruleId":"223","severity":1,"message":"304","line":11,"column":12,"nodeType":"225","messageId":"226","endLine":11,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":28,"column":91,"nodeType":"233","endLine":28,"endColumn":117},{"ruleId":"231","severity":1,"message":"232","line":30,"column":90,"nodeType":"233","endLine":30,"endColumn":114},{"ruleId":"231","severity":1,"message":"232","line":32,"column":90,"nodeType":"233","endLine":32,"endColumn":115},{"ruleId":"231","severity":1,"message":"232","line":34,"column":90,"nodeType":"233","endLine":34,"endColumn":114},{"ruleId":"223","severity":1,"message":"305","line":7,"column":11,"nodeType":"225","messageId":"226","endLine":7,"endColumn":19},{"ruleId":"234","severity":1,"message":"306","line":67,"column":8,"nodeType":"236","endLine":67,"endColumn":10,"suggestions":"307"},{"ruleId":"223","severity":1,"message":"308","line":2,"column":13,"nodeType":"225","messageId":"226","endLine":2,"endColumn":20},{"ruleId":"223","severity":1,"message":"309","line":4,"column":13,"nodeType":"225","messageId":"226","endLine":4,"endColumn":20},{"ruleId":"223","severity":1,"message":"310","line":6,"column":13,"nodeType":"225","messageId":"226","endLine":6,"endColumn":20},{"ruleId":"223","severity":1,"message":"250","line":3,"column":13,"nodeType":"225","messageId":"226","endLine":3,"endColumn":20},{"ruleId":"231","severity":1,"message":"232","line":32,"column":21,"nodeType":"233","endLine":32,"endColumn":106},{"ruleId":"223","severity":1,"message":"311","line":50,"column":9,"nodeType":"225","messageId":"226","endLine":50,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":58,"column":20,"nodeType":"314","messageId":"315","endLine":58,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":67,"column":20,"nodeType":"314","messageId":"315","endLine":67,"endColumn":22},{"ruleId":"290","severity":1,"message":"298","line":20,"column":45,"nodeType":"292","messageId":"299","endLine":20,"endColumn":47},{"ruleId":"234","severity":1,"message":"300","line":29,"column":8,"nodeType":"236","endLine":29,"endColumn":27,"suggestions":"316"},{"ruleId":"290","severity":1,"message":"298","line":11,"column":42,"nodeType":"292","messageId":"299","endLine":11,"endColumn":44},"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'imageId' and 'imageVariable'. Either include them or remove the dependency array.","ArrayExpression",["317"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'View' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'videoVariable' and 'views'. Either include them or remove the dependency array.",["318"],"'Component' is defined but never used.","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'withRouter' is defined but never used.","'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["320"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["321"],["322"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["323"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["324"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["325"],"React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["326"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["328"],"'suberscribeButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Tags' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["329"],"'Meta' is assigned a value but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'videoSearched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'start' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["330"],"'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["331"],"'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'GiIcons' is defined but never used.","'smallwidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["332"],{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"341","fix":"343"},{"desc":"341","fix":"344"},{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [imageId, imageVariable]",{"range":"361","text":"362"},"Update the dependencies array to be: [videoVariable, views]",{"range":"363","text":"364"},"Update the dependencies array to be: [broadcasterId]",{"range":"365","text":"366"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"367","text":"368"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"369","text":"370"},{"range":"371","text":"370"},{"range":"372","text":"370"},"Update the dependencies array to be: [socket]",{"range":"373","text":"374"},{"range":"375","text":"374"},"Update the dependencies array to be: [liveId]",{"range":"376","text":"377"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"378","text":"379"},{"range":"380","text":"379"},"Update the dependencies array to be: [InputVisible, Tags, props]",{"range":"381","text":"382"},"Update the dependencies array to be: [props.userId, variable]",{"range":"383","text":"384"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"385","text":"386"},"Update the dependencies array to be: [Likes, LikeAction, variable, props.userId]",{"range":"387","text":"388"},[1205,1207],"[imageId, imageVariable]",[1392,1394],"[videoVariable, views]",[1361,1363],"[broadcasterId]",[2342,2350],"[config, peerConnections, socket]",[2517,2525],"[peerConnections, socket]",[2707,2715],[2962,2964],[3098,3106],"[socket]",[3384,3386],[1128,1130],"[liveId]",[2276,2284],"[peerConnection, socket]",[2719,2727],[1569,1583],"[InputVisible, Tags, props]",[2137,2139],"[props.userId, variable]",[2257,2259],"[userFrom, userTo]",[992,1011],"[Likes, LikeAction, variable, props.userId]"]
=======
[{"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\index.js":"1","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js":"2","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\App.js":"3","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js":"4","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js":"6","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js":"7","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js":"8","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js":"9","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js":"10","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js":"11","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js":"12","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js":"13","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js":"14","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js":"15","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js":"16","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js":"17","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js":"18","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js":"19","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js":"20","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js":"21","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js":"22","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js":"23","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js":"24","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js":"25","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js":"26","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js":"27","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js":"28","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js":"29","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js":"30","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js":"31","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js":"32","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js":"33","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js":"34","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js":"35","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js":"36","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js":"37","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js":"38"},{"size":1071,"mtime":1610168960713,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1608703789719,"results":"41","hashOfConfig":"40"},{"size":1930,"mtime":1610235410480,"results":"42","hashOfConfig":"40"},{"size":205,"mtime":1610211722001,"results":"43","hashOfConfig":"40"},{"size":3645,"mtime":1610234092193,"results":"44","hashOfConfig":"40"},{"size":3817,"mtime":1610234092186,"results":"45","hashOfConfig":"40"},{"size":2717,"mtime":1610235487126,"results":"46","hashOfConfig":"40"},{"size":7915,"mtime":1610234092237,"results":"47","hashOfConfig":"40"},{"size":3328,"mtime":1610234092232,"results":"48","hashOfConfig":"40"},{"size":7837,"mtime":1610234092172,"results":"49","hashOfConfig":"40"},{"size":2424,"mtime":1610196234886,"results":"50","hashOfConfig":"40"},{"size":780,"mtime":1610235463518,"results":"51","hashOfConfig":"40"},{"size":1533,"mtime":1610234092203,"results":"52","hashOfConfig":"40"},{"size":1499,"mtime":1610167185313,"results":"53","hashOfConfig":"40"},{"size":6083,"mtime":1610234092178,"results":"54","hashOfConfig":"40"},{"size":7715,"mtime":1610233850965,"results":"55","hashOfConfig":"40"},{"size":5446,"mtime":1610211590545,"results":"56","hashOfConfig":"40"},{"size":528,"mtime":1610211735465,"results":"57","hashOfConfig":"40"},{"size":400,"mtime":1610211737044,"results":"58","hashOfConfig":"40"},{"size":675,"mtime":1610211673350,"results":"59","hashOfConfig":"40"},{"size":2339,"mtime":1610234092167,"results":"60","hashOfConfig":"40"},{"size":2505,"mtime":1610234092208,"results":"61","hashOfConfig":"40"},{"size":2802,"mtime":1610233632638,"results":"62","hashOfConfig":"40"},{"size":1762,"mtime":1610198253647,"results":"63","hashOfConfig":"40"},{"size":5399,"mtime":1610234092216,"results":"64","hashOfConfig":"40"},{"size":16747,"mtime":1610234092197,"results":"65","hashOfConfig":"40"},{"size":1130,"mtime":1610234449064,"results":"66","hashOfConfig":"40"},{"size":1723,"mtime":1610197518507,"results":"67","hashOfConfig":"40"},{"size":999,"mtime":1610173522354,"results":"68","hashOfConfig":"40"},{"size":1707,"mtime":1610198253671,"results":"69","hashOfConfig":"40"},{"size":1823,"mtime":1610180116106,"results":"70","hashOfConfig":"40"},{"size":4011,"mtime":1610234480664,"results":"71","hashOfConfig":"40"},{"size":3977,"mtime":1610233025547,"results":"72","hashOfConfig":"40"},{"size":2832,"mtime":1610211328207,"results":"73","hashOfConfig":"40"},{"size":2752,"mtime":1610198253650,"results":"74","hashOfConfig":"40"},{"size":1810,"mtime":1610198253644,"results":"75","hashOfConfig":"40"},{"size":370,"mtime":1610211675686,"results":"76","hashOfConfig":"40"},{"size":434,"mtime":1610208569415,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18bd918",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\index.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\reportWebVitals.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\App.js",["172","173"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\index.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\RegisterPage\\RegisterPage.js",["174"],"import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../_actions/user_actions';\r\n\r\nfunction RegisterPage(props) {\r\n    //디스패치 함수 가져오기\r\n    const dispatch = useDispatch();\r\n\r\n    //state 설정\r\n    const [email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    //onChange 처리\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    //onSubmit 처리(서버전달)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert(\"비밀번호와 비밀번호 확인은 같아야 합니다.\")\r\n        }\r\n\r\n        //서버로 전달할 state값을 모은 객체\r\n        let body = {\r\n            email: email,\r\n            password: Password,\r\n            name: Name,\r\n        }\r\n\r\n        //서버로 전달할 임시 프로필 객체\r\n        const profile = {\r\n            email: email,\r\n            nickName: Name,\r\n            profileImg: \"\",\r\n            content: \"\",\r\n        }\r\n\r\n        //임시 프로필 저장\r\n        axios.post('/api/profile/saveProfile', profile)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n        //디스패치\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    //submit시 로그인 페이지로 이동\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\", justifyContent: 'center', alignItems: 'center',\r\n            width: '100%', height: '100vh'\r\n        }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <img style={{ width: \"250px\", margin: \"20px 0\" }} src=\"\" />\r\n                <p style={{ color: \"grey\", margin: \"0 0 70px 0\" }}>\r\n                    모아에서 더 많은 활동을 감상하세요!\r\n                </p>\r\n\r\n                <label>이메일</label>\r\n                <Input value={email} placeholder=\"아이디\" onChange={onEmailHandler} />\r\n\r\n                <label>이름</label>\r\n                <Input type=\"text\" value={Name} placeholder=\"이름\" onChange={onNameHandler} />\r\n\r\n                <label>비밀번호</label>\r\n                <Input type=\"password\" value={Password} placeholder=\"비밀번호\" onChange={onPasswordHandler} />\r\n\r\n                <label>비밀번호 확인</label>\r\n                <Input type=\"password\" value={ConfirmPassword} placeholder=\"비밀번호 확인\" onChange={onConfirmPasswordHandler} />\r\n\r\n                <br />\r\n\r\n                <Button type=\"primary\" onClick={onSubmitHandler}>가입하기</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;",["175","176"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\PostPage.js",["177","178"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\Navbar.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoUploadPage\\VideoUploadPage.js",["179","180","181"],"import React, { useState } from 'react'\r\nimport { Button, Form, message, Input, DatePicker } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone';\r\nimport HashTag from '../HashTag';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 1, label: \"공연\" },\r\n    { value: 2, label: \"학술\" },\r\n    { value: 3, label: \"졸업전시\" },\r\n    { value: 4, label: \"기타\" },\r\n]\r\n\r\nfunction VideoUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [FileName, setFileName] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n    const [StartDate, setStartDate] = useState(\"\")\r\n    const [EndDate, setEndDate] = useState(\"\")\r\n    const [dateString, setDateString] = useState(\"\")\r\n    let hashTags = [];\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n    }\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail,\r\n            startDate: StartDate,\r\n            endDate: EndDate,\r\n            tags:hashTags\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드했습니다.')\r\n                    setTimeout(()=>{\r\n                        props.history.push('/')\r\n                    }, 3000);\r\n                    \r\n                } else {\r\n                    message.error('업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('비디오 업로드 성공')\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFileName(response.data.fileName);\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath !\r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('썸네일 생성을 실패했습니다.');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto'}}>\r\n            <Form onSubmit={onSubmit}>\r\n              <Input style={{border:'white', marginTop:'4rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br /><br />\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  style={{background: '#48bcec', \r\n                  color: 'white', }} size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ \r\n                                background: '#48bcec', \r\n                                color: 'white', \r\n                                paddingRight: '1rem', \r\n                                paddingLeft: '1rem', \r\n                                paddingTop: '0.2rem',\r\n                                paddingBottom: '0.2rem',\r\n                                border: '2px solid #48bcec',\r\n                                cursor: 'pointer'\r\n                            }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>동영상 추가</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {FileName !== '' && (<div>{FileName}</div>)}\r\n                </div><br/>\r\n                {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n              <br />\r\n\r\n                <label>본문</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"영상에 대해 소개해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag addTags={handleAddTags}/><br/><br/>\r\n                <Button style={{background: '#48bcec', \r\n                                color: 'white', }} \r\n                                size=\"large\" \r\n                                onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoUploadPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\VideoDetailPage.js",["182","183"],"import React, { useEffect, useState } from 'react'\r\nimport { List, Avatar, Row, Col, Tag } from 'antd'\r\nimport moment from 'moment';\r\nimport axios from 'axios'\r\nimport Subscriber from './Sections/Subscriber';\r\nimport SideVideo from './Sections/SideVideo';\r\nimport Comment from './Sections/Comment'\r\nimport LikeDislikes from './Sections/LikeDislikes'\r\n\r\nfunction VideoDetailPage(props){\r\n  const videoId = props.match.params.videoId\r\n  const [Video, setVideo] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [View , setView] = useState([])\r\n\r\n  var views = Video.views;\r\n  console.log(\"조회수 : \",views)\r\n\r\n  const videoVariable = {videoId: videoId}\r\n    \r\n  useEffect(() => {\r\n    axios.post('/api/video/getVideoDetail', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setVideo(response.data.video)\r\n                setView(views)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n    axios.post('/api/comment/getComments', videoVariable)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                console.log('response.data.comments',response.data.comments)\r\n                setCommentLists(response.data.comments)\r\n            } else {\r\n                alert('Failed to get video Info')\r\n            }\r\n        })\r\n\r\n\r\n  }, [])\r\n    \r\n    const updateComment = (newComment) => {\r\n      setCommentLists(CommentLists.concat(newComment))\r\n  }\r\n  const sliceTag = (tag) => {\r\n      const slicedTag = (\r\n          <Tag>{tag}</Tag>\r\n      )\r\n      return (\r\n          <span>\r\n              {slicedTag}\r\n          </span>\r\n      )\r\n  }\r\n  if(Video.writer){\r\n    const tagChild = Video.tags.map(sliceTag)\r\n    return(\r\n      <Row gutter={[16,16]}>\r\n        <Col lg={18} xs={32}>\r\n        <div style={{ width:'100%', padding:'3rem 4rem'}}>\r\n          <video style={{ width:'100%'}} src={`http://localhost:5000/${Video.filePath}`} controls/>\r\n          <List.Item>\r\n             <List.Item.Meta\r\n                 title={<h2>{Video.title}</h2>}/>  \r\n            조회수 {Video.views}회 <span> {moment(Video.createdAt).format(\"YYYY-MM-DD\")} </span>\r\n          </List.Item>\r\n          <List.Item\r\n            actions={[<LikeDislikes video videoId={videoId} userId={localStorage.getItem('userId')}  />,<Subscriber usetTo={Video.writer._id} userFrom={localStorage.getItem('userId')}/>]}\r\n          >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={Video.writer && Video.writer.image} />}\r\n                description={Video.writer.name}\r\n                />\r\n          </List.Item>\r\n               <List.Item.Meta\r\n               style={{ marginLeft:'3rem' }}\r\n                description={Video.description}\r\n                />\r\n              <List.Item>\r\n          </List.Item>\r\n          {Video.startDate}~{Video.endDate}\r\n          <Tag style={{marginLeft:'3rem'}}>{Video.tags !== '' && (<div>{tagChild}</div>)}</Tag><hr/>\r\n          <Comment CommentLists={CommentLists} postId={Video._id} refreshFunction={updateComment}/>\r\n          </div>\r\n        </Col>\r\n        <Col lg={6} xs={24}>\r\n          <SideVideo />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }else{\r\n    return(<div>...loading...</div>)\r\n  }\r\n}\r\n\r\nexport default VideoDetailPage;\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\ImageUploadPage\\ImageUploadPage.js",["184","185"],"import React, { useState } from 'react'\r\nimport { Button, Form, Input, DatePicker,message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport HashTag from '../HashTag';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nvar imgNum = -1;\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"전시\" },\r\n    { value: 0, label: \"공연\" },\r\n    { value: 0, label: \"학술\" },\r\n    { value: 0, label: \"졸업전시\" },\r\n    { value: 0, label: \"기타\" },\r\n]\r\n\r\nfunction ImageUploadPage(props){\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Introduction, setIntroduction] = useState([]);\r\n    const [Categories, setCategories] = useState(\"전시\")\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [FileName, setFileName] = useState([])\r\n    const [dateString, setDateString] = useState(\"\")\r\n\r\n    let hashTags = [];\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n    }\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeIntroduction = (event) => {\r\n        setIntroduction(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onDateChange = (date, dateString) => {\r\n        setDateString(dateString);\r\n    }\r\n    const handleETC = (event) => {\r\n        setIntroduction(\"이미지를 소개해주세요\")\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('로그인 먼저 해주세요!')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Introduction === \"\" || FilePath=== \"\"||\r\n            Categories === \"\"  ) {\r\n            return alert('모든 내용을 채워주세요!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            introduction: Introduction,\r\n            filePath: FilePath,\r\n            fileName:FileName,\r\n            tags: hashTags,\r\n            category: Categories,\r\n            startDate: new Date(dateString[0]),\r\n            endDate : new Date(dateString[1])\r\n        }\r\n\r\n        axios.post('/api/image/uploadImage', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 !!`);\r\n                }\r\n            })\r\n    }\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/image/uploadFiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success(`이미지 업로드 성공 !`);\r\n                    imgNum+=1;\r\n                    const names = FileName;\r\n                    names.push(response.data.fileName)\r\n                    setFileName(names)\r\n                    const file = FilePath;\r\n                    file.push(response.data.filePath)\r\n                    setFilePath(file)\r\n                } else {\r\n                    message.error(`이미지 업로드 실패 ~`);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit>\r\n            <Input style={{border:'white', marginTop:'4rem'}}\r\n                 size=\"large\"\r\n                 onChange={handleChangeTitle}\r\n                 value={title}\r\n                 placeholder='제목을 쓰세요'\r\n              />\r\n              <br/><br/>\r\n              <RangePicker \r\n                    onChange={onDateChange}\r\n                />\r\n              <br /><br /><hr /><br />\r\n\r\n              <Link to=\"/image\">\r\n                <Button\r\n                  style={{background: '#48bcec', \r\n                  color: 'white'}} size=\"small\">\r\n                  이미지\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/upload\">\r\n                <Button\r\n                  size=\"small\">\r\n                  동영상\r\n                </Button>\r\n              </Link>\r\n              <div style={{ margin : '2rem auto'}}>\r\n              \r\n              <select onChange={handleChangeTwo}>\r\n                  {Catogory.map((item, index) => (\r\n                      <option key={index} value={item.label}>{item.label}</option>\r\n                  ))}\r\n              </select>\r\n              </div>\r\n\r\n              <div style={{ display: 'flex'}}>\r\n                \r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            \r\n                            <div style={{ \r\n                                background: '#48bcec', \r\n                                color: 'white', \r\n                                paddingRight: '1rem', \r\n                                paddingLeft: '1rem', \r\n                                paddingTop: '0.2rem',\r\n                                paddingBottom: '0.2rem',\r\n                                border: '2px solid #48bcec',\r\n                                cursor: 'pointer'\r\n                            }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>이미지 추가</p>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <a onClick={handleETC}><div style={{ display:'flex', width:'100%', height:'20px', \r\n                    paddingTop:'0.5rem'}}>\r\n                        {FileName.length !== 0 && (<div>{FileName.map((name,index )=>(\r\n                            <div key={index}>{name}</div>\r\n                    )\r\n                 )}\r\n            </div>)}</div></a>\r\n              </div>\r\n              <br />\r\n                <label>소개글</label>\r\n                <TextArea\r\n                    onChange={handleChangeIntroduction}\r\n                    value={Introduction}\r\n                    placeholder=\"이미지를 소개해주세요(900자 제한)\"\r\n                />\r\n                <br /><br />\r\n                <hr />\r\n                <br />\r\n                <label>본문</label><br/>\r\n                <textarea style={{ border:'1px solid lightgray',\r\n                width:'700px', height:'400px'}}\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                    placeholder=\"본문을 작성해주세요\"\r\n                />\r\n                <br /><br />\r\n                <HashTag addTags={handleAddTags}/><br/><br/>\r\n                <Button style={{background: '#48bcec', \r\n                                color: 'white', }} \r\n                                size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n                </Button>\r\n                <br/><br/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUploadPage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\Mainpage.js",["186","187","188","189"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\SearchResultPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\hoc\\auth.js",["190"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastForm.js",["191"],"import React, { useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport HashTag from '../../HashTag';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction BroadCastForm(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ThumbnailPath, setThumbnailPath] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n    let hashTags = [];\r\n\r\n    const onTitleChange = e => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = e => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const handleAddTags = (tags) => {\r\n        hashTags = tags;\r\n        console.log('updatepage')\r\n        console.log(hashTags)\r\n    }\r\n\r\n    const onDrop = files => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0])\r\n\r\n        Axios.post('/api/liveVideo/uploadfiles', formData, config)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setThumbnailPath(res.data.url);\r\n                    setFileName(res.data.fileName)\r\n                } else {\r\n                    alert(\"썸네일 업로드 실패\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: videoTitle,\r\n            description: description,\r\n            thumbnail: ThumbnailPath,\r\n            tags: hashTags\r\n        }\r\n\r\n        Axios.post('/api/liveVideo/uploadLiveInfo', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    alert(\"라이브 페이지로 이동합니다.\")\r\n                    props.history.push(`/broadcast/${localStorage.getItem('userId')}`)\r\n                } else {\r\n                    alert(\"라이브 준비에 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input\r\n                    value={videoTitle}\r\n                    onChange={onTitleChange}\r\n                    placeholder='제목을 쓰세요'\r\n                    style={{ borderStyle: 'none', borderBottom: '1px solid #cdcec9'}}\r\n                />\r\n                <div style={{ display: 'flex', width: '100%', marginTop: '2rem' }}>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    background: '#48bcec', \r\n                                    color: 'white', \r\n                                    paddingRight: '1rem', \r\n                                    paddingLeft: '1rem', \r\n                                    paddingTop: '0.2rem',\r\n                                    paddingBottom: '0.2rem',\r\n                                    border: '2px solid #48bcec',\r\n                                    cursor: 'pointer'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <p style={{ marginBottom: '0'}}>썸네일 추가</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <div style={{ flex: '1', border: '2px solid #cdcec9' }}>\r\n                        { fileName &&\r\n                            (fileName)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Dropzone   \r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps}) => (\r\n                            <div \r\n                                style={{ \r\n                                    display: 'flex', width: '100%', height: '350px', border: '2px solid #cdcec9', marginTop: '1rem', justifyContent: 'center', alignItems: 'center'\r\n                                }} \r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                    ThumbnailPath &&\r\n                                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                                    }\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <TextArea\r\n                    value={description}\r\n                    onChange={onDescriptionChange}\r\n                    placeholder='영상 소개'\r\n                    style={{ height: '200px', border: '2px solid #cdcec9' }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <HashTag addTags={handleAddTags} />\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" style={{ background: '#48bcec'}} size=\"large\" onClick={onSubmit}>\r\n                    라이브 시작\r\n                </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BroadCastForm\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\BroadCastPage\\BroadCastPage.js",["192","193","194","195","196","197","198","199","200"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Skeleton, Tag, Button } from 'antd';\r\nimport ChatPage from '../LiveChatPage/ChatPage';\r\nimport Subscriber from '../../VideoDetailPage/Sections/Subscriber';\r\nimport LiveLike from '../Sections/LiveLike';\r\nimport './BroadCastPage.css';\r\nimport Axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction BroadCastPage(props) {\r\n\r\n    let broadcasterId = localStorage.getItem('userId');\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    const [peerConnections, setPeerConnections] = useState({});\r\n    const [stream, setStream] = useState();\r\n    const [numberOfViewers, setNumberOfViewers] = useState(0);\r\n\r\n    const config = {\r\n        iceServers: [\r\n          {\r\n            urls: [\"stun:stun.l.google.com:19302\"],\r\n          },\r\n        ],\r\n    };\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetailByBroadcaster', { broadcasterId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(res.data.liveDetail)\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"watcher\", (id) => {\r\n            const peerConnection = new RTCPeerConnection(config);\r\n            setPeerConnections(peerConnections[id] = peerConnection);\r\n            console.log(peerConnections);\r\n\r\n            let stream = videoRef.current.srcObject;\r\n            stream\r\n                .getTracks()\r\n                .forEach((track) => peerConnection.addTrack(track, stream));\r\n\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate);\r\n                }\r\n            }\r\n\r\n            peerConnection\r\n                .createOffer()\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                })\r\n\r\n            setNumberOfViewers(Object.keys(peerConnections).length)\r\n        })\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"answer\", (id, description) => {\r\n            peerConnections[id].setRemoteDescription(description);\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"disconnectPeer\", (id) => {\r\n            peerConnections[id].close();\r\n            delete peerConnections[id];\r\n            setNumberOfViewers(Object.keys(peerConnections).length);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n        }\r\n    }, [window])\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n            setStream(stream);\r\n            \r\n            videoRef.current.srcObject = stream;\r\n            socket.emit(\"broadcaster\");\r\n        })\r\n\r\n    }, [])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const handleLiveClose = () => {\r\n        Axios.post('/api/liveVideo/removeLiveData', { broadcasterId })\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                alert(\"라이브가 종료되었습니다.\")\r\n                window.location.href='/'\r\n                \r\n\r\n            } else {\r\n                alert(\"라이브 종료를 실패했습니다. \")\r\n            }\r\n        })\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        // const suberscribeButton = (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <div>\r\n                            <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                            <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                                <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                                <LiveLike userId={localStorage.getItem('userId')} liveId={liveDetail._id} />\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                        \r\n                        <List.Item\r\n                            actions={[\r\n                                <Subscriber userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />,\r\n                                <Button \r\n                                    style={{ backgroundColor: '#48bcec', borderRadius: '4px',\r\n                                        color: 'white', padding: '5px 16px', borderStyle: 'none', paddingBottom: '7px',\r\n                                        fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase', cursor: 'pointer' }}\r\n                                        onClick={handleLiveClose}>\r\n                                        라이브 종료\r\n                                </Button>\r\n                                    ]}\r\n                        >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                    title={liveDetail.writer.name}\r\n                                    description={liveDetail.description}\r\n                                    \r\n                                />\r\n                        </List.Item>\r\n                        <div>{tagChild}</div>\r\n                        <br />\r\n                        <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    <ChatPage />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ width: '1263px'}}>\r\n                <Col lg={16} xs={24}>\r\n                    <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                        <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls />\r\n                        <Skeleton avatar paragraph={{ rows: 4 }} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                    <ChatPage />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BroadCastPage","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveVideoPage\\LiveVideoPage.js",["201","202","203","204","205"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, List, Avatar, Tag } from 'antd';\r\nimport ChatPage from '../LiveChatPage/ChatPage';\r\nimport Subscriber from '../../VideoDetailPage/Sections/Subscriber';\r\nimport LiveLike from '../Sections/LiveLike';\r\nimport '../BroadCastPage/BroadCastPage.css'\r\nimport Axios from 'axios'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction LiveVideoPage(props) {\r\n\r\n    const liveId = props.match.params.liveId;\r\n    const [liveDetail, setLiveDetail] = useState([])\r\n\r\n    let peerConnection;\r\n    const config = {\r\n        iceServers: [\r\n            { \r\n              \"urls\": \"stun:stun.l.google.com:19302\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n    const videoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/liveVideo/getLiveDetail', { liveId })\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLiveDetail(res.data.liveDetail)\r\n                } else {\r\n                    alert(\"라이브 정보를 가져오길 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"offer\", (id, description) => {\r\n            peerConnection = new RTCPeerConnection(config);\r\n            peerConnection\r\n                .setRemoteDescription(description)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"answer\", id, peerConnection.localDescription)\r\n                })\r\n            peerConnection.ontrack = e => {\r\n                \r\n                videoRef.current.srcObject = e.streams[0];\r\n                       \r\n                console.log(\"offer\")\r\n            }\r\n            peerConnection.onicecandidate = e => {\r\n                if (e.candidate) {\r\n                    socket.emit(\"candidate\", id, e.candidate)\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(candidate))\r\n                .catch(e => console.error(e))\r\n        })\r\n        \r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcaster\", () => {\r\n            socket.emit(\"watcher\");\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n            peerConnection.close();\r\n        }\r\n    }, [window])\r\n\r\n    const forMap = tag => {\r\n        const tagElem = (\r\n            <Tag>{tag}</Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block'}}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    if (liveDetail.writer) {\r\n        //const suberscribeButton = (liveDetail.writer._id !== localStorage.getItem('userId')) && (<Subscribe userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        const tagChild = liveDetail.tags.map(forMap);\r\n        const suberscribeButton = (<Subscriber userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />)\r\n        return (\r\n            <Row gutter={[16, 16]} style={{ margin: '0', padding: '0' }}>\r\n                <Col lg={16} xs={24}>\r\n                <div style={{ width: '100%', height: '140%', padding: '2rem 4rem', paddingRight: 0, marginRight: 0 }}>\r\n                    <video style={{ width: '100%', height: '415px', outline: 'none' }} ref={videoRef} playsInline autoPlay muted controls /> \r\n                    <div>\r\n                        <div style={{ paddingLeft: '0.2rem', marginTop: '0.5rem', marginBottom: '0.5rem', fontSize: '1.3rem' }}>{liveDetail.title}</div>\r\n                        <div style={{ display: 'flex', paddingRight: '0.2rem', paddingLeft: '0.2rem' }}>\r\n                            <div style={{ flex: '1', color: '#a0a19a' }}>시청자수 0회</div>\r\n                            <LiveLike userId={localStorage.getItem('userId')} liveId={liveId} />\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                    <List.Item\r\n                            actions={[<Subscriber userTo={liveDetail.writer._id} userFrom={localStorage.getItem('userId')} />]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={liveDetail.writer.image} />}\r\n                                title={liveDetail.writer.name}\r\n                                description={liveDetail.description}\r\n                            />\r\n                    </List.Item>\r\n                    <div>{tagChild}</div>\r\n                    <br />\r\n                    <hr style={{ borderBottom: 'none', borderTop: '2px solid lightgray' }} />\r\n                </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} className='chatBlock'>\r\n                        <ChatPage />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   else {\r\n        return (\r\n            <div>...</div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default LiveVideoPage\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_reducers\\chat_reducer.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\HashTag.js",["206"],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Comment.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\Subscriber.js",["207"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Subscriber(props) {\r\n    const userTo = props.userTo\r\n    const userFrom = props.userFrom\r\n    const [ SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [ Subscribed, setSubscribed] = useState(false)\r\n\r\n    const onSubscribe = ( ) => {\r\n\r\n        let subscribeVariables = {\r\n                userTo : userTo,\r\n                userFrom : userFrom\r\n        }\r\n\r\n        if(Subscribed) {\r\n            //when we are already subscribed \r\n            axios.post('/api/subscribe/unSubscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success){ \r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to unsubscribe')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n            \r\n            axios.post('/api/subscribe/subscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to subscribe')\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom }\r\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('Failed to get subscriber Number')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subcribed)\r\n                } else {\r\n                    alert('Failed to get Subscribed Information')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onSubscribe}\r\n                    style={{ backgroundColor:`${Subscribed ? '#AAAAAA' : '#48bcec'}`, borderRadius: '4px',\r\n                    color: 'white', padding: '5px 16px', borderStyle: 'none',\r\n                    fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase', cursor: 'pointer' }}\r\n                    >\r\n                        {Subscribed ? '구독중' : '구독'}\r\n                    </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriber\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\LikeDislikes.js",["208","209","210"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport { LikeOutlined, DislikeOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                console.log('getLikes',response.data)\r\n\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n            .then(response => {\r\n                console.log('getDislike',response.data)\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/api/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <span\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} >\r\n                            <LikeOutlined />\r\n                    </span>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <span\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}><DislikeOutlined />\r\n                    </span>\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\SearchResultPage\\ResultBooths.js",["211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Divider, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Meta } = Card;\r\n//날짜를 0000-00-00 이런식으로 필터링 해줄것\r\n//정렬 추천순은 좋아요가 없어서 구현 안됨\r\nfunction ResultBooths(props) {\r\n\r\n    //state\r\n    const [Booths, setBooths] = useState([]);\r\n    const [Video, setVideo] = useState([]);\r\n\r\n    let searched = []\r\n    let videoSearched = []\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            query: \"test\"\r\n        }\r\n\r\n        //검색된 이미지 카드(부스) 가져오기\r\n        axios.post(\"/api/image/search\", body)\r\n            .then(response => {\r\n                searched = searched.concat(response.data.image)\r\n                console.log(\"현재 이미지 카드\", searched)\r\n                if (searched.length !== 0) {\r\n                    setBooths(searched)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.response){\r\n                    console.log(err.message)\r\n                }\r\n            })\r\n\r\n        //비디오 가져오기\r\n        axios.get('/api/video/getVideos', body)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    console.log(\"현재 비디오\", res.data);\r\n                    videoSearched = videoSearched.concat(res.data.video)\r\n                    setVideo(videoSearched)\r\n                    console.log(\"현재 비디오 state\", Video)\r\n                } else {\r\n                    alert(\"현재 전시 비디오 가져오기를 실패했습니다.\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"에러 비디오\", err.response)\r\n            })\r\n\r\n    }, [props.alignType])\r\n\r\n    //현재, 예정, 지난 부스로 구분\r\n    const sortBooths = (sort) => {\r\n        var i = 0;\r\n        var now = new Date();\r\n\r\n        if (Booths.length === 0) {\r\n            return \"err\"\r\n        }\r\n\r\n        console.log(\"부스 state 상태\", Booths)\r\n        console.log(\"sort\", sort)\r\n\r\n        switch (sort) {\r\n            case \"current\":\r\n                var current = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n                    var end = new Date(v.endDate)\r\n\r\n                    if (start.getTime() < now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    } else if (start.getTime() === now.getTime()) {\r\n                        if (end.getTime() > now.getTime()) {\r\n                            return v;\r\n                        } else if (end.getTime() === now.getTime()) {\r\n                            return v;\r\n                        }\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", current)\r\n                return current\r\n\r\n            case \"past\":\r\n                var past = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n                    var end = new Date(v.endDate)\r\n\r\n                    if (end.getTime() < now.getTime()) { return v }\r\n                })\r\n                console.log(sort, \"booths\", past)\r\n                return past\r\n\r\n            case \"future\":\r\n                var future = Booths.filter((v) => {\r\n                    var start = new Date(v.startDate)\r\n\r\n                    if (start.getTime() > now.getTime()) {\r\n                        return v;\r\n                    }\r\n                })\r\n                console.log(sort, \"booths\", future)\r\n                return future\r\n        }\r\n\r\n    }\r\n\r\n    //비디오 정렬 및 레이아웃 생성\r\n    const alignVideo = () => {\r\n        switch (props.alignType) {\r\n            case \"date\":\r\n                Video.sort(function (a, b) {\r\n                    return a.createAt < b.createAt ? -1 : a.createAt > b.createAt ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                Video.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n\r\n        console.log(\"렌더카드 전 비디오 state\", Video)\r\n\r\n        const renderCards = Video.map((video, index) => {\r\n            return (\r\n                <Col lg={6} md={8} xs={24} key={index}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/video/${video._id}`}>\r\n                            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n                            <div style={{\r\n                                bottom: 0, right: 0, position: 'absolute', margin: '4px',\r\n                                color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\r\n                                padding: '2px 4px', borderRadius: '2px', letterSpacing: '0.5px', fontSize: '12px',\r\n                                fontWeight: '500', lineHeight: '12px'\r\n                            }}\r\n                            >\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <br />\r\n                    <Card.Meta\r\n                        avatar={<Avatar src={video.writer.image} />}\r\n                        title={video.title}\r\n                    />\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </Col>\r\n\r\n            ) \r\n        })\r\n\r\n        console.log(\"renderCards\", renderCards)\r\n\r\n        return renderCards\r\n    }\r\n\r\n    //부스 정렬\r\n    const alignBooths = (booths) => {\r\n        console.log(\"align Booths\", booths)\r\n        if (booths === \"err\") { return \"err\" }\r\n\r\n        console.log(\"change Align\", props.alignType)\r\n\r\n        switch (props.alignType) {\r\n            \r\n            case \"date\":\r\n                booths.sort(function (a, b) {\r\n                    let aDate = new Date(a.boothStart)\r\n                    let bDate = new Date(b.boothStart)\r\n\r\n                    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\r\n                })\r\n                break;\r\n            case \"name\":\r\n                booths.sort(function (a, b) {\r\n                    return a.title < b.title ? -1 : a > b ? 1 : 0;\r\n                })\r\n                break;\r\n        }\r\n        return booths\r\n    }\r\n\r\n    //부스 레이아웃 잡기\r\n    const boothsLayout = (sort) => {\r\n        var i = 0;\r\n        var boothCards = [];\r\n        var _booths = [];\r\n\r\n        if (sort === \"current\") {\r\n            var tmp = sortBooths(sort)\r\n            _booths = alignBooths(tmp)\r\n        } else if (sort === \"future\") {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        } else {\r\n            var tmp = sortBooths(sort, Booths)\r\n            _booths = alignBooths(tmp)\r\n        }\r\n\r\n\r\n        console.log(\"_booths\", _booths)\r\n\r\n        if (_booths === \"err\") {\r\n            return\r\n        }\r\n\r\n        while (i < _booths.length) {\r\n\r\n            if (_booths.length - i > 3) {\r\n\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 3].title} src={_booths[i + 3].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 3].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 3) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 2].title} src={_booths[i + 2].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 2].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 2) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i + 1].title} src={_booths[i + 1].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i + 1].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            else if (_booths.length - i === 1) {\r\n                boothCards.push(\r\n                    <Row justify=\"space-around\" gutter={[0, 80]}>\r\n                        <Col>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, borderBottom: \"1px solid black\" }}\r\n                                cover={<img alt={_booths[i].title} src={_booths[i].src} class=\"Preview\" />}\r\n                                bordered={false}\r\n                            >\r\n                                <p>{_booths[i].title}</p>\r\n                                <p>{_booths[i].startDate} ~ {_booths[i].endDate}</p>\r\n\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bordered={false} style={{ width: 200 }} />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            i = i + 4;\r\n        };\r\n        return boothCards;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>비디오</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {alignVideo()}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>현재 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"current\")}\r\n                </div>\r\n            </div>\r\n\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>예정 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"future\")}\r\n                </div>\r\n            </div>\r\n            <Divider style={{ margin: \"50px 0 70px 0\" }}>지난 아트</Divider>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <div style={{ width: \"1200px\" }}>\r\n                    {boothsLayout(\"past\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultBooths;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\NavBar\\SidebarData.js",["224","225","226"],"import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Home',\r\n        path:'/',\r\n        icon:<AiIcons.AiFillHome style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'업로드',\r\n        path:\"/upload\",\r\n        icon:<FiIcons.FiUpload style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:\"nav-text\"\r\n    },\r\n    {\r\n        title:'라이브 시작',\r\n        path:'/broadcastform',\r\n        icon:<RiIcons.RiLiveFill style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'부스편집',\r\n        path:'/',\r\n        icon:<BiIcons.BiEdit style={{color:\"#F3868D\",fontSize:\"40\",paddingBottom:\"10px\"}}/>,\r\n        cName:'nav-text'\r\n    }\r\n]","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainCategoryButton.js",["227","228","229","230","231","232","233"],"import React, { useState, useRef } from \"react\";\r\nimport './MainCategoryButton.css';\r\nimport '../Mainpage.css';\r\n\r\n\r\nconst MainCategoryButton=()=>{\r\n\r\n    var category=[\"전시\",\"공연\",\"학술\",\"이벤트\"];\r\n    var now=\"전시\";\r\n    var count=10;\r\n    const [nowtext, setNowtext] = useState(now); \r\n    \r\n    const changeText = (text) => setNowtext(text);\r\n    \r\n    \r\n    return(\r\n        \r\n        <>\r\n        <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossOrigin=\"anonymous\"/>\r\n\r\n        {/* 버튼 */}\r\n        <span style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n\r\n        <span className=\"category\" >\r\n            <button className=\"categorybutton1\" onClick={() => changeText(category[0])}  ><img src=\"./display.png\"/>전시</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton2\" onClick={() => changeText(category[1])} ><img src=\"./stage.png\"/>공연</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton3\" onClick={() => changeText(category[2])} ><img src=\"./haksul.png\"/>학술</button>\r\n            <div className=\"verticalLine\"></div>\r\n            <button className=\"categorybutton4\" onClick={() => changeText(category[3])} ><img src=\"./event.png\"/>이벤트</button>\r\n            {/* onMouseEnter={() => setIsShown2(!hovered2)} onMouseLeave={() => setIsShown2(false)} */}\r\n        </span>\r\n        \r\n        \r\n        </span>\r\n\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default MainCategoryButton;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainSearchPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\CurrentExhibitPage.js",["234"],"import React from 'react'\r\nimport '../Mainpage.css'\r\n// import Slider from '@bit/akiran.react-slick.slider';\r\nimport AliceCarousel from 'react-alice-carousel';\r\n\r\nfunction CurrentExhibitPage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3\r\n      };\r\n    return (\r\n        <div   style={{backgroundColor:\"#D1ECEF\",backgroundSize:\"100%\",height:\"100vh\",marginTop:\"250px\"}}>\r\n            <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n\t\t\t\t\r\n        \r\n        <AliceCarousel>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">1</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">2</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">3</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">4</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">5</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">6</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">7</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">8</h3>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"maincurrentextesth3\">9</h3>\r\n          </div>\r\n        </AliceCarousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentExhibitPage\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\PlannedExhibitPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\mainpage\\MainSections\\MainLivePage.js",["235","236","237","238","239"],"import React, { useEffect, useState } from 'react';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Axios from 'axios';\r\nimport '../Mainpage.css';\r\n\r\n\r\nfunction MainLivePage(){\r\n    const [liveVideo, setLiveVideo] = useState([]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/liveVideo/getliveVidoes')\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data);\r\n                setLiveVideo(res.data.liveVideo)\r\n            } else {\r\n                alert(\"라이브 비디오 가져오기를 실패했습니다.\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    let liveRenderCards = [];\r\n    if (liveVideo !== 0) {\r\n        liveRenderCards = liveVideo.map((video, index) => {\r\n            return (\r\n                // <li style={{listStyleType:\"none\",display:\"flex\",float:\"left\"}} >\r\n                <div key={index} style={{marginRight:\"30px\"}}>\r\n                <a href={`/liveVideo/${video._id}`}>\r\n                    <img src={`http://localhost:5000/${video.thumbnail}`} width=\"340px\" height=\"220px\" />\r\n                </a>\r\n                <p className=\"livevideobigcap\" width=\"340px\" fontSize=\"1rem\">{video.title}</p>\r\n                <p className=\"livevideosmallcap\">{video.writer.name}</p>\r\n                <hr width=\"330px\" style={{marginTop:'15px', paddingLeft:'18px'}}/>\r\n                </div>\r\n                // </li> \r\n            ) \r\n        })\r\n    }\r\n    let length=liveRenderCards.length;\r\n    \r\n    var bigwidth=348*length;\r\n    console.log(bigwidth);\r\n    let gep=30*(length);\r\n    bigwidth=bigwidth+gep;\r\n\r\n    \r\n    let smallwidth=2268;\r\n\r\n    const [paddings,setStyle]=useState(0);\r\n    var divstyle={width: bigwidth, display:'flex',justifyContent:\"center\",float:\"left\",paddingRight:paddings};\r\n    const movel =() =>{\r\n        let left=length%3;\r\n        \r\n        if(paddings<bigwidth-left*378*2) setStyle(paddings+2268);\r\n        if(paddings==bigwidth-left*378*2)setStyle(paddings+left*378*2);\r\n        console.log(paddings);\r\n        console.log(length);\r\n        \r\n    }\r\n    const mover=()=>{\r\n        let left=length%3;\r\n        \r\n        if(paddings>0) setStyle(paddings-2268);\r\n        if(paddings==0)setStyle(paddings-left*378*2);\r\n        console.log(paddings);\r\n        console.log(length);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mainpage_below' style={{textAlign:'center', backgroundSize:'cover'}} height=\"100vh\">\r\n            \r\n            <p className=\"streamlive\">실시간 방송 LIVE</p>\r\n            <p className=\"meetinlive\">전국의 대학생 활동을 라이브 방송으로 만나보세요</p>\r\n            <AiIcons.AiOutlineLeftSquare size=\"40\" color=\"#C692B8\"  className=\"livevideoleft\" onClick={movel}/>\r\n            <AiIcons.AiFillRightSquare size=\"40\" color=\"#C692B8\" className=\"livevideoright\" onClick={mover}/>\r\n            \r\n            <span id=\"#livevideo\" className=\"livevideo\" style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                {/* <div style={{display: 'flex', justifyContent: 'space-between'}}> */}\r\n                {/* <AliceCarousel dotsDisabled={true} buttonsDisabled={true} ref={ el =>this.Carousel = el }>\r\n                {liveRenderCards}\r\n                </AliceCarousel> */}\r\n                <div style={{width:\"1104px\",overflow:'hidden'}}>\r\n                    <div style={divstyle}>\r\n                    {liveRenderCards}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                {/* <div className=\"slide_wrapper\" style={{position:'relative',margin:'0 auto',height:'300px',width:'1110',overflow:'hidden'}}>\r\n                <ul className=\"slides\" style={{listStyle:'none',whiteSpace:'nowrap',position:\"absolute\",left:\"0\",top:\"0\", width:`${bigwidth}`}}>\r\n                {liveRenderCards}\r\n                </ul> \r\n                \r\n            </div>*/}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainLivePage;","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\ChatPage.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\Sections\\LiveLike.js",["240","241"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd'\r\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons'\r\nimport Axios from 'axios'\r\n\r\nfunction LiveLike(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n\r\n    let variable = { videoId: props.liveId, userId: props.userId }\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/like/getLiveLikes', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    // 얼마나 많은 좋아요를 받았는지\r\n                    setLikes(res.data.likes.length)\r\n                    // 내가 이미 좋아요를 눌렀는지\r\n                    res.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        } \r\n                    })\r\n                } else {\r\n                    alert(\"좋아요 정보를 가져오지 못 했습니다.\")\r\n                }\r\n            })\r\n    }, [Likes, LikeAction])\r\n\r\n    const handleLikeUpdate  = (option) => {\r\n        if (option === 'plus') {\r\n            Axios.post('/api/like/insertLiveLikes', variable)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n                } else {\r\n                    alert(\"좋아요를 업데이트하지 못 했습니다. \")\r\n                }\r\n            })\r\n        } else {\r\n            Axios.post('/api/like/deleteLiveLikes', variable)\r\n                .then(res => {\r\n                    if (res.data.success) {\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n                    } else {\r\n                        alert(\"좋아요를 취소하지 못 했습니다. \")\r\n                    }\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                {\r\n                    LikeAction === 'liked' \r\n                    ?   (<Tooltip title=\"Canceled\">\r\n                            <LikeFilled style={{ cursor: 'pointer', fontSize: '1.1rem', color: 'gray' }} onClick={() => handleLikeUpdate('minus')} />\r\n                        </Tooltip>)\r\n                    :   (<Tooltip title=\"Like\">\r\n                            <LikeOutlined style={{ cursor: 'pointer', fontSize: '1.1rem', color: 'gray' }} onClick={() => handleLikeUpdate('plus')} />\r\n                        </Tooltip>)\r\n                }\r\n                {console.log(Likes)}\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto', fontSize: '1.1rem', color: 'gray' }}>{Likes}</span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiveLike\r\n","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\SingleComment.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\VideoDetailPage\\Sections\\ReplyComment.js",["242"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment","C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\_actions\\chat_actions.js",[],"C:\\Users\\haejo\\Documents\\SM21_MOA\\2021-SM21\\MOA\\client\\src\\LiveVideoPage\\LiveChatPage\\Sections\\ChatCard.js",[],{"ruleId":"243","severity":1,"message":"244","line":6,"column":17,"nodeType":"245","messageId":"246","endLine":6,"endColumn":25},{"ruleId":"247","severity":1,"message":"248","line":32,"column":69,"nodeType":"249","messageId":"250","endLine":32,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":87,"column":17,"nodeType":"253","endLine":87,"endColumn":76},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":35,"column":5,"nodeType":"260","endLine":35,"endColumn":7,"suggestions":"261"},{"ruleId":"251","severity":1,"message":"252","line":68,"column":25,"nodeType":"253","endLine":68,"endColumn":80},{"ruleId":"243","severity":1,"message":"262","line":30,"column":23,"nodeType":"245","messageId":"246","endLine":30,"endColumn":35},{"ruleId":"243","severity":1,"message":"263","line":31,"column":21,"nodeType":"245","messageId":"246","endLine":31,"endColumn":31},{"ruleId":"243","severity":1,"message":"264","line":32,"column":12,"nodeType":"245","messageId":"246","endLine":32,"endColumn":22},{"ruleId":"243","severity":1,"message":"265","line":14,"column":10,"nodeType":"245","messageId":"246","endLine":14,"endColumn":14},{"ruleId":"258","severity":1,"message":"266","line":43,"column":6,"nodeType":"260","endLine":43,"endColumn":8,"suggestions":"267"},{"ruleId":"243","severity":1,"message":"268","line":110,"column":21,"nodeType":"245","messageId":"246","endLine":110,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":187,"column":21,"nodeType":"253","endLine":187,"endColumn":44},{"ruleId":"243","severity":1,"message":"271","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"272","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"273","line":2,"column":13,"nodeType":"245","messageId":"246","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"274","line":3,"column":13,"nodeType":"245","messageId":"246","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":6,"column":1,"nodeType":"277","endLine":42,"endColumn":2},{"ruleId":"243","severity":1,"message":"278","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"279","line":16,"column":12,"nodeType":"245","messageId":"246","endLine":16,"endColumn":18},{"ruleId":"243","severity":1,"message":"280","line":17,"column":12,"nodeType":"245","messageId":"246","endLine":17,"endColumn":27},{"ruleId":"258","severity":1,"message":"281","line":40,"column":8,"nodeType":"260","endLine":40,"endColumn":10,"suggestions":"282"},{"ruleId":"258","severity":1,"message":"283","line":69,"column":8,"nodeType":"260","endLine":69,"endColumn":16,"suggestions":"284"},{"ruleId":"258","severity":1,"message":"285","line":75,"column":8,"nodeType":"260","endLine":75,"endColumn":16,"suggestions":"286"},{"ruleId":"258","severity":1,"message":"285","line":81,"column":8,"nodeType":"260","endLine":81,"endColumn":16,"suggestions":"287"},{"ruleId":"258","severity":1,"message":"288","line":89,"column":8,"nodeType":"260","endLine":89,"endColumn":10,"suggestions":"289"},{"ruleId":"258","severity":1,"message":"290","line":95,"column":8,"nodeType":"260","endLine":95,"endColumn":16,"suggestions":"291"},{"ruleId":"258","severity":1,"message":"292","line":105,"column":8,"nodeType":"260","endLine":105,"endColumn":10,"suggestions":"293"},{"ruleId":"258","severity":1,"message":"294","line":37,"column":8,"nodeType":"260","endLine":37,"endColumn":10,"suggestions":"295"},{"ruleId":"258","severity":1,"message":"296","line":41,"column":30,"nodeType":"297","endLine":41,"endColumn":59},{"ruleId":"258","severity":1,"message":"298","line":70,"column":8,"nodeType":"260","endLine":70,"endColumn":16,"suggestions":"299"},{"ruleId":"258","severity":1,"message":"300","line":89,"column":8,"nodeType":"260","endLine":89,"endColumn":16,"suggestions":"301"},{"ruleId":"243","severity":1,"message":"302","line":105,"column":15,"nodeType":"245","messageId":"246","endLine":105,"endColumn":32},{"ruleId":"258","severity":1,"message":"303","line":62,"column":8,"nodeType":"260","endLine":62,"endColumn":22,"suggestions":"304"},{"ruleId":"258","severity":1,"message":"305","line":67,"column":8,"nodeType":"260","endLine":67,"endColumn":10,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":31,"column":50,"nodeType":"309","messageId":"310","endLine":31,"endColumn":52},{"ruleId":"307","severity":1,"message":"308","line":49,"column":56,"nodeType":"309","messageId":"310","endLine":49,"endColumn":58},{"ruleId":"258","severity":1,"message":"311","line":59,"column":8,"nodeType":"260","endLine":59,"endColumn":10,"suggestions":"312"},{"ruleId":"243","severity":1,"message":"313","line":7,"column":9,"nodeType":"245","messageId":"246","endLine":7,"endColumn":13},{"ruleId":"258","severity":1,"message":"314","line":28,"column":28,"nodeType":"315","endLine":28,"endColumn":64},{"ruleId":"258","severity":1,"message":"316","line":45,"column":37,"nodeType":"315","endLine":45,"endColumn":73},{"ruleId":"243","severity":1,"message":"317","line":60,"column":13,"nodeType":"245","messageId":"246","endLine":60,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":70,"column":9,"nodeType":"320","messageId":"321","endLine":113,"endColumn":10},{"ruleId":"307","severity":1,"message":"322","line":72,"column":49,"nodeType":"309","messageId":"323","endLine":72,"endColumn":51},{"ruleId":"307","severity":1,"message":"322","line":94,"column":46,"nodeType":"309","messageId":"323","endLine":94,"endColumn":48},{"ruleId":"243","severity":1,"message":"324","line":95,"column":25,"nodeType":"245","messageId":"246","endLine":95,"endColumn":30},{"ruleId":"307","severity":1,"message":"322","line":104,"column":48,"nodeType":"309","messageId":"323","endLine":104,"endColumn":50},{"ruleId":"318","severity":1,"message":"319","line":119,"column":9,"nodeType":"320","messageId":"321","endLine":130,"endColumn":10},{"ruleId":"318","severity":1,"message":"319","line":174,"column":9,"nodeType":"320","messageId":"321","endLine":189,"endColumn":10},{"ruleId":"325","severity":1,"message":"326","line":203,"column":17,"nodeType":"245","messageId":"327","endLine":203,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":206,"column":17,"nodeType":"245","messageId":"327","endLine":206,"endColumn":20},{"ruleId":"243","severity":1,"message":"328","line":2,"column":13,"nodeType":"245","messageId":"246","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"329","line":4,"column":13,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"330","line":6,"column":13,"nodeType":"245","messageId":"246","endLine":6,"endColumn":20},{"ruleId":"243","severity":1,"message":"331","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":33},{"ruleId":"243","severity":1,"message":"332","line":10,"column":9,"nodeType":"245","messageId":"246","endLine":10,"endColumn":14},{"ruleId":"243","severity":1,"message":"333","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":28,"column":91,"nodeType":"253","endLine":28,"endColumn":117},{"ruleId":"251","severity":1,"message":"252","line":30,"column":90,"nodeType":"253","endLine":30,"endColumn":114},{"ruleId":"251","severity":1,"message":"252","line":32,"column":90,"nodeType":"253","endLine":32,"endColumn":115},{"ruleId":"251","severity":1,"message":"252","line":34,"column":90,"nodeType":"253","endLine":34,"endColumn":114},{"ruleId":"243","severity":1,"message":"334","line":7,"column":11,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"274","line":3,"column":13,"nodeType":"245","messageId":"246","endLine":3,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":33,"column":21,"nodeType":"253","endLine":33,"endColumn":106},{"ruleId":"243","severity":1,"message":"335","line":51,"column":9,"nodeType":"245","messageId":"246","endLine":51,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":59,"column":20,"nodeType":"338","messageId":"339","endLine":59,"endColumn":22},{"ruleId":"336","severity":1,"message":"337","line":68,"column":20,"nodeType":"338","messageId":"339","endLine":68,"endColumn":22},{"ruleId":"307","severity":1,"message":"308","line":20,"column":45,"nodeType":"309","messageId":"310","endLine":20,"endColumn":47},{"ruleId":"258","severity":1,"message":"311","line":29,"column":8,"nodeType":"260","endLine":29,"endColumn":27,"suggestions":"340"},{"ruleId":"307","severity":1,"message":"308","line":11,"column":42,"nodeType":"309","messageId":"310","endLine":11,"endColumn":44},"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["341"],"no-negated-in-lhs",["342"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'imageId' and 'imageVariable'. Either include them or remove the dependency array.","ArrayExpression",["343"],"'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dateString' is assigned a value but never used.","'View' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'videoVariable' and 'views'. Either include them or remove the dependency array.",["344"],"'imgNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'useState' is defined but never used.","'AiIcons' is defined but never used.","'BiIcons' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'withRouter' is defined but never used.","'stream' is assigned a value but never used.","'numberOfViewers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'broadcasterId'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has missing dependencies: 'config' and 'peerConnections'. Either include them or remove the dependency array. You can also do a functional update 'setPeerConnections(p => ...)' if you only need 'peerConnections' in the 'setPeerConnections' call.",["346"],"React Hook useEffect has a missing dependency: 'peerConnections'. Either include it or remove the dependency array.",["347"],["348"],"React Hook useEffect has missing dependencies: 'peerConnections' and 'socket'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfViewers' needs the current value of 'peerConnections'.",["349"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["350"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'liveId'. Either include it or remove the dependency array.",["352"],"Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'peerConnection'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has missing dependencies: 'peerConnection' and 'socket'. Either include them or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["354"],"'suberscribeButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Tags' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["355"],"React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["356"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["357"],"'Meta' is assigned a value but never used.","Assignments to the 'searched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'videoSearched' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'i' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'start' is assigned a value but never used.","no-redeclare","'tmp' is already defined.","redeclared","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'GiIcons' is defined but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","'nowtext' is assigned a value but never used.","'settings' is assigned a value but never used.","'smallwidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["358"],"no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"367","fix":"369"},{"desc":"367","fix":"370"},{"desc":"371","fix":"372"},{"desc":"371","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [imageId, imageVariable]",{"range":"387","text":"388"},"Update the dependencies array to be: [videoVariable, views]",{"range":"389","text":"390"},"Update the dependencies array to be: [broadcasterId]",{"range":"391","text":"392"},"Update the dependencies array to be: [config, peerConnections, socket]",{"range":"393","text":"394"},"Update the dependencies array to be: [peerConnections, socket]",{"range":"395","text":"396"},{"range":"397","text":"396"},{"range":"398","text":"396"},"Update the dependencies array to be: [socket]",{"range":"399","text":"400"},{"range":"401","text":"400"},"Update the dependencies array to be: [liveId]",{"range":"402","text":"403"},"Update the dependencies array to be: [peerConnection, socket]",{"range":"404","text":"405"},{"range":"406","text":"405"},"Update the dependencies array to be: [InputVisible, Tags, props]",{"range":"407","text":"408"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"409","text":"410"},"Update the dependencies array to be: [props.userId, variable]",{"range":"411","text":"412"},"Update the dependencies array to be: [Likes, LikeAction, variable, props.userId]",{"range":"413","text":"414"},[1205,1207],"[imageId, imageVariable]",[1392,1394],"[videoVariable, views]",[1361,1363],"[broadcasterId]",[2342,2350],"[config, peerConnections, socket]",[2517,2525],"[peerConnections, socket]",[2707,2715],[2962,2964],[3098,3106],"[socket]",[3384,3386],[1128,1130],"[liveId]",[2276,2284],"[peerConnection, socket]",[2719,2727],[1569,1583],"[InputVisible, Tags, props]",[2257,2259],"[userFrom, userTo]",[2137,2139],"[props.userId, variable]",[992,1011],"[Likes, LikeAction, variable, props.userId]"]
>>>>>>> 613bfa75e435e2b8f4b78c69e942a645a1688dc2
>>>>>>> 5b0f511f31347beb2e220271e8058455cd2bd852
